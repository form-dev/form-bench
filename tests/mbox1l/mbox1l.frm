#-
#: MaxTermSize 1M

Off Statistics;
Off ThreadStats;

* PolyRatFun-heavy test based on mbox1l reduction from calc.

* LiteRed propagators defined as {M`j'^2-sp[p1+q1+q2], M`j'^2-sp[p1], M`j'^2-sp[p1+q2], M`j'^2-sp[p1+q1+q2+q3]},
* with SPs sp[q1,q1]=0;sp[q2,q2]=0;sp[q3,q3]=q33;sp[q1,q2]=q12;sp[q1,q3]=q13;sp[q2,q3]=q23;

* q1 --------------- q3
*        | 1   |
*       3|     |4
*        | 2   |
* q2 --------------- -q1-q2-q3


* Procedures cut from lrTopoTools.h
#procedure lrttMergeIndices(NAME)
	Repeat;
		Identify `NAME'(?a)*`NAME'(?b) = `NAME'(L,?a,L,?b);
		Repeat Identify `NAME'(?a,L,n1?,?b,L,n2?,?c) = `NAME'(?a,n1+n2,L,?b,L,?c);
		Identify `NAME'(?a,L,L) = `NAME'(?a);
	EndRepeat;
#endprocedure

#procedure lrttKin2Prf
	#do i = 1,`NUMEXTMOM'
		#do j = `i',`NUMEXTMOM'
			Identify q`i'`j'^n1? = prf(q`i'`j'^n1,1);
		#enddo
	#enddo
#endprocedure


#define j "1"
#define NUMEXTMOM "3"
* Without this mode, MaxTermSize requirement gets out of hand very quickly
#define MBOX1Lq33EQq44 "1"

Symbol L,n1,n2,n3,n4;
Symbol ep,q11,q12,q13,q22,q23,q33,M`j';
CFunction prf,tmpprf;
CFunction mbox1l,mbox1lm`j'm;

* 3,3,2,2 needs a 400K MaxTermSize. 3,3,3,3 fits in 1M.
* Explodes extremely quickly for any harder integrals.
#define n1 "3"
#define n2 "3"
#define n3 "3"
#define n4 "3"
Local test = mbox1l(`n1',`n2',`n3',`n4');
.sort
PolyRatFun prf;

**--#[ reduction
#do red = 1,1
	#message mbox1l: reduction loop...
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?neg0_,n3?neg_,n4?{,>1}) = mbox1l(n1,-1+n2,2+n3,-1+n4)*prf(-q13^3-n3*q13^3-q13^2*q23-n3*q13^2*q23,q13^2*q33-n4*q13^2*q33+2*q13*q23*q33-2*n4*q13*q23*q33+q23^2*q33-n4*q23^2*q33-2*q12*q33^2+2*n4*q12*q33^2)+mbox1l(1+n1,n2,1+n3,-2+n4)*prf(2*M`j'^2*n1*q13+2*M`j'^2*n1*q33-2*n1*q13*q33-n1*q33^2,-2*M`j'^2*q33+2*M`j'^2*n4*q33)+mbox1l(1+n1,n2,1+n3,-1+n4)*prf(6*M`j'^2*n1*q13+4*M`j'^2*n1*q33-2*n1*q13*q33-n1*q33^2,-2*M`j'^2+2*M`j'^2*n4)+mbox1l(-1+n1,1+n2,1+n3,-1+n4)*prf(2*n2*q12*q13^2+2*n2*q13^3+2*n2*q12*q13*q23+4*n2*q13^2*q23+2*n2*q13*q23^2-2*n2*q12^2*q33-3*n2*q12*q13*q33+n2*q13^2*q33-n2*q12*q23*q33+2*n2*q13*q23*q33+n2*q23^2*q33-2*n2*q12*q33^2,q13^2*q33-n4*q13^2*q33+2*q13*q23*q33-2*n4*q13*q23*q33+q23^2*q33-n4*q23^2*q33-2*q12*q33^2+2*n4*q12*q33^2)+mbox1l(-1+n1,n2,2+n3,-1+n4)*prf(q12*q13^2+n3*q12*q13^2+2*q13^3+2*n3*q13^3+q12*q13*q23+n3*q12*q13*q23+3*q13^2*q23+3*n3*q13^2*q23+q13*q23^2+n3*q13*q23^2-3*q12*q13*q33-3*n3*q12*q13*q33+q13^2*q33+n3*q13^2*q33+q12*q23*q33+n3*q12*q23*q33+2*q13*q23*q33+2*n3*q13*q23*q33+q23^2*q33+n3*q23^2*q33-2*q12*q33^2-2*n3*q12*q33^2,q13^2*q33-n4*q13^2*q33+2*q13*q23*q33-2*n4*q13*q23*q33+q23^2*q33-n4*q23^2*q33-2*q12*q33^2+2*n4*q12*q33^2)+mbox1l(n1,1+n2,1+n3,-2+n4)*prf(-4*M`j'^2*n2*q12*q13^2-2*M`j'^2*n2*q13^3-4*M`j'^2*n2*q12*q13*q23-4*M`j'^2*n2*q13^2*q23-2*M`j'^2*n2*q13*q23^2+4*M`j'^2*n2*q12^2*q33+4*M`j'^2*n2*q12*q13*q33-2*M`j'^2*n2*q13^2*q33+2*n2*q13^3*q33-4*M`j'^2*n2*q13*q23*q33+4*n2*q13^2*q23*q33-2*M`j'^2*n2*q23^2*q33+2*n2*q13*q23^2*q33+4*M`j'^2*n2*q12*q33^2-4*n2*q12*q13*q33^2+n2*q13^2*q33^2+2*n2*q13*q23*q33^2+n2*q23^2*q33^2-2*n2*q12*q33^3,2*M`j'^2*q13^2*q33-2*M`j'^2*n4*q13^2*q33+4*M`j'^2*q13*q23*q33-4*M`j'^2*n4*q13*q23*q33+2*M`j'^2*q23^2*q33-2*M`j'^2*n4*q23^2*q33-4*M`j'^2*q12*q33^2+4*M`j'^2*n4*q12*q33^2)+mbox1l(n1,n2,2+n3,-2+n4)*prf(-2*M`j'^2*q12*q13^2-2*M`j'^2*n3*q12*q13^2-2*M`j'^2*q13^3-2*M`j'^2*n3*q13^3-2*M`j'^2*q12*q13*q23-2*M`j'^2*n3*q12*q13*q23-4*M`j'^2*q13^2*q23-4*M`j'^2*n3*q13^2*q23-2*M`j'^2*q13*q23^2-2*M`j'^2*n3*q13*q23^2+4*M`j'^2*q12*q13*q33+4*M`j'^2*n3*q12*q13*q33-2*M`j'^2*q13^2*q33-2*M`j'^2*n3*q13^2*q33+2*q13^3*q33+2*n3*q13^3*q33-4*M`j'^2*q13*q23*q33-4*M`j'^2*n3*q13*q23*q33+4*q13^2*q23*q33+4*n3*q13^2*q23*q33-2*M`j'^2*q23^2*q33-2*M`j'^2*n3*q23^2*q33+2*q13*q23^2*q33+2*n3*q13*q23^2*q33+4*M`j'^2*q12*q33^2+4*M`j'^2*n3*q12*q33^2-4*q12*q13*q33^2-4*n3*q12*q13*q33^2+q13^2*q33^2+n3*q13^2*q33^2+2*q13*q23*q33^2+2*n3*q13*q23*q33^2+q23^2*q33^2+n3*q23^2*q33^2-2*q12*q33^3-2*n3*q12*q33^3,2*M`j'^2*q13^2*q33-2*M`j'^2*n4*q13^2*q33+4*M`j'^2*q13*q23*q33-4*M`j'^2*n4*q13*q23*q33+2*M`j'^2*q23^2*q33-2*M`j'^2*n4*q23^2*q33-4*M`j'^2*q12*q33^2+4*M`j'^2*n4*q12*q33^2)+mbox1l(n1,n2,1+n3,-1+n4)*(tmpprf(ep,1)*prf(4*q13^3*q33+8*q13^2*q23*q33+4*q13*q23^2*q33-8*q12*q13*q33^2+2*q13^2*q33^2+4*q13*q23*q33^2+2*q23^2*q33^2-4*q12*q33^3,2*M`j'^2*q13^2*q33-2*M`j'^2*n4*q13^2*q33+4*M`j'^2*q13*q23*q33-4*M`j'^2*n4*q13*q23*q33+2*M`j'^2*q23^2*q33-2*M`j'^2*n4*q23^2*q33-4*M`j'^2*q12*q33^2+4*M`j'^2*n4*q12*q33^2)+prf(2*M`j'^2*n1*q13^3-2*M`j'^2*n2*q13^3+4*M`j'^2*n1*q13^2*q23-4*M`j'^2*n2*q13^2*q23+2*M`j'^2*n1*q13*q23^2-2*M`j'^2*n2*q13*q23^2+2*M`j'^2*q12*q13*q33-4*M`j'^2*n1*q12*q13*q33+2*M`j'^2*n2*q12*q13*q33+2*M`j'^2*n3*q12*q13*q33+2*M`j'^2*q13^2*q33+2*M`j'^2*n1*q13^2*q33-2*M`j'^2*n4*q13^2*q33-10*q13^3*q33+2*n1*q13^3*q33+2*n2*q13^3*q33+2*n3*q13^3*q33+4*n4*q13^3*q33-2*M`j'^2*q12*q23*q33+2*M`j'^2*n2*q12*q23*q33-2*M`j'^2*n3*q12*q23*q33+4*M`j'^2*q13*q23*q33+4*M`j'^2*n1*q13*q23*q33-4*M`j'^2*n4*q13*q23*q33-20*q13^2*q23*q33+4*n1*q13^2*q23*q33+4*n2*q13^2*q23*q33+4*n3*q13^2*q23*q33+8*n4*q13^2*q23*q33+2*M`j'^2*q23^2*q33+2*M`j'^2*n1*q23^2*q33-2*M`j'^2*n4*q23^2*q33-10*q13*q23^2*q33+2*n1*q13*q23^2*q33+2*n2*q13*q23^2*q33+2*n3*q13*q23^2*q33+4*n4*q13*q23^2*q33-4*M`j'^2*q12*q33^2-4*M`j'^2*n1*q12*q33^2+4*M`j'^2*n4*q12*q33^2+20*q12*q13*q33^2-4*n1*q12*q13*q33^2-4*n2*q12*q13*q33^2-4*n3*q12*q13*q33^2-8*n4*q12*q13*q33^2-5*q13^2*q33^2+n1*q13^2*q33^2+n2*q13^2*q33^2+n3*q13^2*q33^2+2*n4*q13^2*q33^2-10*q13*q23*q33^2+2*n1*q13*q23*q33^2+2*n2*q13*q23*q33^2+2*n3*q13*q23*q33^2+4*n4*q13*q23*q33^2-5*q23^2*q33^2+n1*q23^2*q33^2+n2*q23^2*q33^2+n3*q23^2*q33^2+2*n4*q23^2*q33^2+10*q12*q33^3-2*n1*q12*q33^3-2*n2*q12*q33^3-2*n3*q12*q33^3-4*n4*q12*q33^3,2*M`j'^2*q13^2*q33-2*M`j'^2*n4*q13^2*q33+4*M`j'^2*q13*q23*q33-4*M`j'^2*n4*q13*q23*q33+2*M`j'^2*q23^2*q33-2*M`j'^2*n4*q23^2*q33-4*M`j'^2*q12*q33^2+4*M`j'^2*n4*q12*q33^2))+mbox1l(n1,1+n2,1+n3,-1+n4)*prf(-4*M`j'^2*n2*q12*q13^3-4*M`j'^2*n2*q13^4-8*M`j'^2*n2*q12*q13^2*q23-12*M`j'^2*n2*q13^3*q23-4*M`j'^2*n2*q12*q13*q23^2-12*M`j'^2*n2*q13^2*q23^2-4*M`j'^2*n2*q13*q23^3+4*M`j'^2*n2*q12^2*q13*q33+4*M`j'^2*n2*q12*q13^2*q33-10*M`j'^2*n2*q13^3*q33+4*n2*q12*q13^3*q33+4*n2*q13^4*q33+4*M`j'^2*n2*q12^2*q23*q33+4*M`j'^2*n2*q12*q13*q23*q33-24*M`j'^2*n2*q13^2*q23*q33+8*n2*q12*q13^2*q23*q33+12*n2*q13^3*q23*q33-18*M`j'^2*n2*q13*q23^2*q33+4*n2*q12*q13*q23^2*q33+12*n2*q13^2*q23^2*q33-4*M`j'^2*n2*q23^3*q33+4*n2*q13*q23^3*q33+4*M`j'^2*n2*q12^2*q33^2+20*M`j'^2*n2*q12*q13*q33^2-8*n2*q12^2*q13*q33^2-4*M`j'^2*n2*q13^2*q33^2-6*n2*q12*q13^2*q33^2+4*n2*q13^3*q33^2+8*M`j'^2*n2*q12*q23*q33^2-8*M`j'^2*n2*q13*q23*q33^2-4*n2*q12*q13*q23*q33^2+10*n2*q13^2*q23*q33^2-4*M`j'^2*n2*q23^2*q33^2+2*n2*q12*q23^2*q33^2+8*n2*q13*q23^2*q33^2+2*n2*q23^3*q33^2+8*M`j'^2*n2*q12*q33^3-4*n2*q12^2*q33^3-8*n2*q12*q13*q33^3+n2*q13^2*q33^3-4*n2*q12*q23*q33^3+2*n2*q13*q23*q33^3+n2*q23^2*q33^3-2*n2*q12*q33^4,2*M`j'^2*q13^2*q33-2*M`j'^2*n4*q13^2*q33+4*M`j'^2*q13*q23*q33-4*M`j'^2*n4*q13*q23*q33+2*M`j'^2*q23^2*q33-2*M`j'^2*n4*q23^2*q33-4*M`j'^2*q12*q33^2+4*M`j'^2*n4*q12*q33^2)+mbox1l(n1,n2,2+n3,-1+n4)*prf(-4*M`j'^2*q12*q13^3-4*M`j'^2*n3*q12*q13^3-4*M`j'^2*q13^4-4*M`j'^2*n3*q13^4-4*M`j'^2*q12*q13^2*q23-4*M`j'^2*n3*q12*q13^2*q23-8*M`j'^2*q13^3*q23-8*M`j'^2*n3*q13^3*q23-4*M`j'^2*q13^2*q23^2-4*M`j'^2*n3*q13^2*q23^2+6*M`j'^2*q12*q13^2*q33+6*M`j'^2*n3*q12*q13^2*q33-10*M`j'^2*q13^3*q33-10*M`j'^2*n3*q13^3*q33+4*q13^4*q33+4*n3*q13^4*q33-2*M`j'^2*q12*q13*q23*q33-2*M`j'^2*n3*q12*q13*q23*q33-20*M`j'^2*q13^2*q23*q33-20*M`j'^2*n3*q13^2*q23*q33+8*q13^3*q23*q33+8*n3*q13^3*q23*q33-10*M`j'^2*q13*q23^2*q33-10*M`j'^2*n3*q13*q23^2*q33+4*q13^2*q23^2*q33+4*n3*q13^2*q23^2*q33+20*M`j'^2*q12*q13*q33^2+20*M`j'^2*n3*q12*q13*q33^2-4*M`j'^2*q13^2*q33^2-4*M`j'^2*n3*q13^2*q33^2-8*q12*q13^2*q33^2-8*n3*q12*q13^2*q33^2+4*q13^3*q33^2+4*n3*q13^3*q33^2-8*M`j'^2*q13*q23*q33^2-8*M`j'^2*n3*q13*q23*q33^2+8*q13^2*q23*q33^2+8*n3*q13^2*q23*q33^2-4*M`j'^2*q23^2*q33^2-4*M`j'^2*n3*q23^2*q33^2+4*q13*q23^2*q33^2+4*n3*q13*q23^2*q33^2+8*M`j'^2*q12*q33^3+8*M`j'^2*n3*q12*q33^3-8*q12*q13*q33^3-8*n3*q12*q13*q33^3+q13^2*q33^3+n3*q13^2*q33^3+2*q13*q23*q33^3+2*n3*q13*q23*q33^3+q23^2*q33^3+n3*q23^2*q33^3-2*q12*q33^4-2*n3*q12*q33^4,2*M`j'^2*q13^2*q33-2*M`j'^2*n4*q13^2*q33+4*M`j'^2*q13*q23*q33-4*M`j'^2*n4*q13*q23*q33+2*M`j'^2*q23^2*q33-2*M`j'^2*n4*q23^2*q33-4*M`j'^2*q12*q33^2+4*M`j'^2*n4*q12*q33^2);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?neg_,n3?neg0_,n4?{,>1}) = mbox1l(n1,n2,1+n3,-1+n4)*prf(n3*q13,-q33+n4*q33)+mbox1l(-1+n1,2+n2,n3,-1+n4)*prf(-2*q12-2*n2*q12-2*q13-2*n2*q13-2*q23-2*n2*q23-q33-n2*q33,-q33+n4*q33)+mbox1l(-1+n1,1+n2,1+n3,-1+n4)*prf(-(n3*q12)-2*n3*q13-n3*q23-n3*q33,-q33+n4*q33)+mbox1l(1+n1,1+n2,n3,-2+n4)*prf(2*M`j'^2*n1*q13+2*M`j'^2*n1*q23+2*M`j'^2*n1*q33-2*n1*q12*q33-2*n1*q13*q33-2*n1*q23*q33-n1*q33^2,-2*M`j'^2*q33+2*M`j'^2*n4*q33)+mbox1l(1+n1,1+n2,n3,-1+n4)*prf(4*M`j'^2*n1*q12+6*M`j'^2*n1*q13+6*M`j'^2*n1*q23+4*M`j'^2*n1*q33-2*n1*q12*q33-2*n1*q13*q33-2*n1*q23*q33-n1*q33^2,-2*M`j'^2+2*M`j'^2*n4)+mbox1l(n1,2+n2,n3,-2+n4)*prf(4*M`j'^2*q12+4*M`j'^2*n2*q12+2*M`j'^2*q13+2*M`j'^2*n2*q13+2*M`j'^2*q23+2*M`j'^2*n2*q23+2*M`j'^2*q33+2*M`j'^2*n2*q33-2*q12*q33-2*n2*q12*q33-2*q13*q33-2*n2*q13*q33-2*q23*q33-2*n2*q23*q33-q33^2-n2*q33^2,-2*M`j'^2*q33+2*M`j'^2*n4*q33)+mbox1l(n1,1+n2,1+n3,-2+n4)*prf(2*M`j'^2*n3*q12+2*M`j'^2*n3*q13+2*M`j'^2*n3*q23+2*M`j'^2*n3*q33-2*n3*q12*q33-2*n3*q13*q33-2*n3*q23*q33-n3*q33^2,-2*M`j'^2*q33+2*M`j'^2*n4*q33)+mbox1l(n1,1+n2,n3,-1+n4)*(tmpprf(ep,1)*prf(-4*q12*q33-4*q13*q33-4*q23*q33-2*q33^2,-2*M`j'^2*q33+2*M`j'^2*n4*q33)+prf(2*M`j'^2*q13-2*M`j'^2*n1*q13+2*M`j'^2*n2*q13+2*M`j'^2*q23-2*M`j'^2*n1*q23+2*M`j'^2*n2*q23-2*M`j'^2*q33-2*M`j'^2*n1*q33+2*M`j'^2*n4*q33+10*q12*q33-2*n1*q12*q33-2*n2*q12*q33-2*n3*q12*q33-4*n4*q12*q33+10*q13*q33-2*n1*q13*q33-2*n2*q13*q33-2*n3*q13*q33-4*n4*q13*q33+10*q23*q33-2*n1*q23*q33-2*n2*q23*q33-2*n3*q23*q33-4*n4*q23*q33+5*q33^2-n1*q33^2-n2*q33^2-n3*q33^2-2*n4*q33^2,-2*M`j'^2*q33+2*M`j'^2*n4*q33))+mbox1l(n1,2+n2,n3,-1+n4)*prf(4*M`j'^2*q12*q13+4*M`j'^2*n2*q12*q13+4*M`j'^2*q13^2+4*M`j'^2*n2*q13^2+4*M`j'^2*q12*q23+4*M`j'^2*n2*q12*q23+8*M`j'^2*q13*q23+8*M`j'^2*n2*q13*q23+4*M`j'^2*q23^2+4*M`j'^2*n2*q23^2+8*M`j'^2*q12*q33+8*M`j'^2*n2*q12*q33-4*q12^2*q33-4*n2*q12^2*q33+10*M`j'^2*q13*q33+10*M`j'^2*n2*q13*q33-8*q12*q13*q33-8*n2*q12*q13*q33-4*q13^2*q33-4*n2*q13^2*q33+10*M`j'^2*q23*q33+10*M`j'^2*n2*q23*q33-8*q12*q23*q33-8*n2*q12*q23*q33-8*q13*q23*q33-8*n2*q13*q23*q33-4*q23^2*q33-4*n2*q23^2*q33+4*M`j'^2*q33^2+4*M`j'^2*n2*q33^2-4*q12*q33^2-4*n2*q12*q33^2-4*q13*q33^2-4*n2*q13*q33^2-4*q23*q33^2-4*n2*q23*q33^2-q33^3-n2*q33^3,-2*M`j'^2*q33+2*M`j'^2*n4*q33)+mbox1l(n1,1+n2,1+n3,-1+n4)*prf(4*M`j'^2*n3*q12*q13+4*M`j'^2*n3*q13^2+4*M`j'^2*n3*q13*q23+6*M`j'^2*n3*q12*q33+10*M`j'^2*n3*q13*q33-4*n3*q12*q13*q33-4*n3*q13^2*q33+6*M`j'^2*n3*q23*q33-4*n3*q13*q23*q33+4*M`j'^2*n3*q33^2-2*n3*q12*q33^2-4*n3*q13*q33^2-2*n3*q23*q33^2-n3*q33^3,-2*M`j'^2*q33+2*M`j'^2*n4*q33);
	Identify,ifmatch->jump mbox1l(n1?neg_,n2?neg0_,n3?neg0_,n4?{,>1}) = mbox1l(n1,1+n2,n3,-1+n4)*prf(-n2,-1+n4)+mbox1l(n1,n2,1+n3,-1+n4)*prf(-n3,-1+n4)+mbox1l(2+n1,n2,n3,-2+n4)*prf(2*M`j'^2+2*M`j'^2*n1-q33-n1*q33,-2*M`j'^2+2*M`j'^2*n4)+mbox1l(1+n1,1+n2,n3,-2+n4)*prf(2*M`j'^2*n2-n2*q33,-2*M`j'^2+2*M`j'^2*n4)+mbox1l(1+n1,n2,1+n3,-2+n4)*prf(2*M`j'^2*n3-n3*q33,-2*M`j'^2+2*M`j'^2*n4)+mbox1l(1+n1,n2,n3,-1+n4)*(tmpprf(ep,1)*prf(-q33,-M`j'^2+M`j'^2*n4)+prf(-4*M`j'^2-2*M`j'^2*n1+2*M`j'^2*n4+5*q33-n1*q33-n2*q33-n3*q33-2*n4*q33,-2*M`j'^2+2*M`j'^2*n4))+mbox1l(2+n1,n2,n3,-1+n4)*prf(4*M`j'^2*q33+4*M`j'^2*n1*q33-q33^2-n1*q33^2,-2*M`j'^2+2*M`j'^2*n4)+mbox1l(1+n1,1+n2,n3,-1+n4)*prf(4*M`j'^2*n2*q13+4*M`j'^2*n2*q23+4*M`j'^2*n2*q33-2*n2*q12*q33-2*n2*q13*q33-2*n2*q23*q33-n2*q33^2,-2*M`j'^2+2*M`j'^2*n4)+mbox1l(1+n1,n2,1+n3,-1+n4)*prf(4*M`j'^2*n3*q13+4*M`j'^2*n3*q33-2*n3*q13*q33-n3*q33^2,-2*M`j'^2+2*M`j'^2*n4);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?neg0_,n3?neg0_,n4?{,>1}) = mbox1l(1+n1,n2,n3,-2+n4)*prf(n1,-2*M`j'^2+2*M`j'^2*n4)+mbox1l(n1,1+n2,n3,-2+n4)*prf(n2,-2*M`j'^2+2*M`j'^2*n4)+mbox1l(n1,n2,1+n3,-2+n4)*prf(n3,-2*M`j'^2+2*M`j'^2*n4)+mbox1l(n1,n2,n3,-1+n4)*(tmpprf(ep,1)*prf(1,-M`j'^2+M`j'^2*n4)+prf(-6+n1+n2+n3+2*n4,-2*M`j'^2+2*M`j'^2*n4))+mbox1l(1+n1,n2,n3,-1+n4)*prf(-2*M`j'^2*n1+n1*q33,-2*M`j'^2+2*M`j'^2*n4)+mbox1l(n1,1+n2,n3,-1+n4)*prf(-2*M`j'^2*n2+2*n2*q12+2*n2*q13+2*n2*q23+n2*q33,-2*M`j'^2+2*M`j'^2*n4)+mbox1l(n1,n2,1+n3,-1+n4)*prf(-2*M`j'^2*n3+2*n3*q13+n3*q33,-2*M`j'^2+2*M`j'^2*n4);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?neg0_,n3?neg_,n4?pos_) = mbox1l(n1,n2,1+n3,n4)*prf(-q13,1)+mbox1l(n1,n2,1+n3,-1+n4)*prf(-q13,q33)+mbox1l(-1+n1,n2,2+n3,-1+n4)*prf(q12*q13^2+n3*q12*q13^2+q13^3+n3*q13^3+q12*q13*q23+n3*q12*q13*q23+2*q13^2*q23+2*n3*q13^2*q23+q13*q23^2+n3*q13*q23^2-q12*q13*q33-n3*q12*q13*q33,q13^2*q33-n1*q13^2*q33+2*q13*q23*q33-2*n1*q13*q23*q33+q23^2*q33-n1*q23^2*q33-2*q12*q33^2+2*n1*q12*q33^2)+mbox1l(-1+n1,-1+n2,2+n3,n4)*prf(q13^3+n3*q13^3+q13^2*q23+n3*q13^2*q23+q13^2*q33+n3*q13^2*q33,q13^2*q33-n1*q13^2*q33+2*q13*q23*q33-2*n1*q13*q23*q33+q23^2*q33-n1*q23^2*q33-2*q12*q33^2+2*n1*q12*q33^2)+mbox1l(-1+n1,1+n2,1+n3,-1+n4)*prf(2*n2*q12*q13^2+n2*q13^3+2*n2*q12*q13*q23+2*n2*q13^2*q23+n2*q13*q23^2-2*n2*q12^2*q33-n2*q12*q13*q33-n2*q12*q23*q33,q13^2*q33-n1*q13^2*q33+2*q13*q23*q33-2*n1*q13*q23*q33+q23^2*q33-n1*q23^2*q33-2*q12*q33^2+2*n1*q12*q33^2)+mbox1l(-2+n1,1+n2,1+n3,n4)*prf(-2*n2*q12*q13^2-2*n2*q13^3-2*n2*q12*q13*q23-4*n2*q13^2*q23-2*n2*q13*q23^2+2*n2*q12^2*q33+2*n2*q12*q13*q33-n2*q13^2*q33+2*n2*q12*q23*q33-n2*q13*q23*q33+n2*q12*q33^2,q13^2*q33-n1*q13^2*q33+2*q13*q23*q33-2*n1*q13*q23*q33+q23^2*q33-n1*q23^2*q33-2*q12*q33^2+2*n1*q12*q33^2)+mbox1l(-1+n1,n2,1+n3,n4)*prf(q13^3-n1*q13^3+n2*q13^3+2*q13^2*q23-2*n1*q13^2*q23+2*n2*q13^2*q23+q13*q23^2-n1*q13*q23^2+n2*q13*q23^2-3*q12*q13*q33+2*n1*q12*q13*q33-n2*q12*q13*q33-n3*q12*q13*q33+q13^2*q33-n1*q13^2*q33+n2*q13^2*q33+q12*q23*q33-n2*q12*q23*q33+n3*q12*q23*q33+3*q13*q23*q33-2*n1*q13*q23*q33+n2*q13*q23*q33+n3*q13*q23*q33+2*q23^2*q33-n1*q23^2*q33+n3*q23^2*q33-3*q12*q33^2+2*n1*q12*q33^2-n2*q12*q33^2-n3*q12*q33^2,q13^2*q33-n1*q13^2*q33+2*q13*q23*q33-2*n1*q13*q23*q33+q23^2*q33-n1*q23^2*q33-2*q12*q33^2+2*n1*q12*q33^2)+mbox1l(-2+n1,n2,2+n3,n4)*prf(-(q12*q13^2)-n3*q12*q13^2-2*q13^3-2*n3*q13^3-q12*q13*q23-n3*q12*q13*q23-3*q13^2*q23-3*n3*q13^2*q23-q13*q23^2-n3*q13*q23^2+2*q12*q13*q33+2*n3*q12*q13*q33-q13^2*q33-n3*q13^2*q33-q12*q23*q33-n3*q12*q23*q33-q13*q23*q33-n3*q13*q23*q33-q23^2*q33-n3*q23^2*q33+q12*q33^2+n3*q12*q33^2,q13^2*q33-n1*q13^2*q33+2*q13*q23*q33-2*n1*q13*q23*q33+q23^2*q33-n1*q23^2*q33-2*q12*q33^2+2*n1*q12*q33^2)+mbox1l(-1+n1,n2,2+n3,n4)*prf(2*q12*q13^3+2*n3*q12*q13^3+2*q13^4+2*n3*q13^4+2*q12*q13^2*q23+2*n3*q12*q13^2*q23+4*q13^3*q23+4*n3*q13^3*q23+2*q13^2*q23^2+2*n3*q13^2*q23^2-q12*q13^2*q33-n3*q12*q13^2*q33+q13^3*q33+n3*q13^3*q33+q12*q13*q23*q33+n3*q12*q13*q23*q33+2*q13^2*q23*q33+2*n3*q13^2*q23*q33+q13*q23^2*q33+n3*q13*q23^2*q33-q12*q13*q33^2-n3*q12*q13*q33^2,q13^2*q33-n1*q13^2*q33+2*q13*q23*q33-2*n1*q13*q23*q33+q23^2*q33-n1*q23^2*q33-2*q12*q33^2+2*n1*q12*q33^2)+mbox1l(-1+n1,1+n2,1+n3,n4)*prf(2*n2*q12*q13^3+2*n2*q13^4+4*n2*q12*q13^2*q23+6*n2*q13^3*q23+2*n2*q12*q13*q23^2+6*n2*q13^2*q23^2+2*n2*q13*q23^3-2*n2*q12^2*q13*q33-2*n2*q12*q13^2*q33+n2*q13^3*q33-2*n2*q12^2*q23*q33-4*n2*q12*q13*q23*q33+2*n2*q13^2*q23*q33-2*n2*q12*q23^2*q33+n2*q13*q23^2*q33-n2*q12*q13*q33^2-n2*q12*q23*q33^2,q13^2*q33-n1*q13^2*q33+2*q13*q23*q33-2*n1*q13*q23*q33+q23^2*q33-n1*q23^2*q33-2*q12*q33^2+2*n1*q12*q33^2);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?neg_,n3?neg0_,n4?pos_) = mbox1l(n1,1+n2,n3,-1+n4)*prf(-q13-q23,q33)+mbox1l(n1,1+n2,n3,n4)*prf(-2*q12-q13-q23,1)+mbox1l(-1+n1,2+n2,n3,-1+n4)*prf(-2*q12-2*n2*q12-q13-n2*q13-q23-n2*q23,-q33+n1*q33)+mbox1l(-1+n1,1+n2,1+n3,-1+n4)*prf(-(n3*q12)-n3*q13-n3*q23,-q33+n1*q33)+mbox1l(-1+n1,1+n2,n3,n4)*prf(-2*q13+n1*q13-n2*q13-2*q23+n1*q23-n2*q23-2*q33+n1*q33-n2*q33,-q33+n1*q33)+mbox1l(-2+n1,2+n2,n3,n4)*prf(2*q12+2*n2*q12+2*q13+2*n2*q13+2*q23+2*n2*q23+q33+n2*q33,-q33+n1*q33)+mbox1l(-1+n1,n2,1+n3,n4)*prf(-(n3*q13)-n3*q33,-q33+n1*q33)+mbox1l(-2+n1,1+n2,1+n3,n4)*prf(n3*q12+2*n3*q13+n3*q23+n3*q33,-q33+n1*q33)+mbox1l(-1+n1,2+n2,n3,n4)*prf(-2*q12*q13-2*n2*q12*q13-2*q13^2-2*n2*q13^2-2*q12*q23-2*n2*q12*q23-4*q13*q23-4*n2*q13*q23-2*q23^2-2*n2*q23^2-q13*q33-n2*q13*q33-q23*q33-n2*q23*q33,-q33+n1*q33)+mbox1l(-1+n1,1+n2,1+n3,n4)*prf(-2*n3*q12*q13-2*n3*q13^2-2*n3*q13*q23-n3*q12*q33-n3*q13*q33-n3*q23*q33,-q33+n1*q33);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?neg0_,n3?neg_,n4?pos_) = mbox1l(n1,-1+n2,2+n3,-1+n4)*prf(q12*q13+n3*q12*q13,-q13^2+n2*q13^2-2*q13*q23+2*n2*q13*q23-q23^2+n2*q23^2+2*q12*q33-2*n2*q12*q33)+mbox1l(n1,-2+n2,2+n3,n4)*prf(q13^2+n3*q13^2,-q13^2+n2*q13^2-2*q13*q23+2*n2*q13*q23-q23^2+n2*q23^2+2*q12*q33-2*n2*q12*q33)+mbox1l(n1,n2,1+n3,-1+n4)*prf(-(q12*q13)+q12*q23,-q13^2-2*q13*q23-q23^2+2*q12*q33)+mbox1l(-1+n1,n2,1+n3,n4)*prf(-(q12*q13)+q12*q23+q13*q23+q23^2-q12*q33,q13^2+2*q13*q23+q23^2-2*q12*q33)+mbox1l(-1+n1,-1+n2,2+n3,n4)*prf(-(q12*q13)-n3*q12*q13+q13*q23+n3*q13*q23-q12*q33-n3*q12*q33,-q13^2+n2*q13^2-2*q13*q23+2*n2*q13*q23-q23^2+n2*q23^2+2*q12*q33-2*n2*q12*q33)+mbox1l(n1,-1+n2,1+n3,n4)*prf(-2*q13^2+n2*q13^2-n3*q13^2-2*q13*q23+n2*q13*q23-n3*q13*q23+2*q12*q33-n2*q12*q33+n3*q12*q33,-q13^2+n2*q13^2-2*q13*q23+2*n2*q13*q23-q23^2+n2*q23^2+2*q12*q33-2*n2*q12*q33)+mbox1l(n1,-1+n2,2+n3,n4)*prf(2*q12*q13^2+2*n3*q12*q13^2+q12*q13*q33+n3*q12*q13*q33,-q13^2+n2*q13^2-2*q13*q23+2*n2*q13*q23-q23^2+n2*q23^2+2*q12*q33-2*n2*q12*q33)+mbox1l(n1,n2,1+n3,n4)*prf(-2*q12*q13^2-2*q12*q13*q23+2*q12^2*q33-q12*q13*q33+q12*q23*q33,-q13^2-2*q13*q23-q23^2+2*q12*q33);
	Identify,ifmatch->jump mbox1l(n1?neg_,0,0,1) = tmpprf(1,-2+2*ep+n1)*mbox1l(1+n1,0,0,0)*prf(-n1,1)+mbox1l(1+n1,0,0,1)*(tmpprf(ep,-2+2*ep+n1)*prf(-2*q33,1)+tmpprf(1,-2+2*ep+n1)*prf(q33-2*n1*q33,1))+tmpprf(1,-2+2*ep+n1)*mbox1l(2+n1,0,0,0)*prf(2*M`j'^2+2*M`j'^2*n1-q33-n1*q33,1)+tmpprf(1,-2+2*ep+n1)*mbox1l(2+n1,0,0,1)*prf(4*M`j'^2*q33+4*M`j'^2*n1*q33-q33^2-n1*q33^2,1);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?neg_,n3?pos_,n4?{,>1}) = mbox1l(1+n1,1+n2,n3,-2+n4)*prf(-2*M`j'^2*n1*q12-2*M`j'^2*n1*q23,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+mbox1l(n1,1+n2,1+n3,-2+n4)*prf(-2*M`j'^2*n3*q12-2*M`j'^2*n3*q23,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+mbox1l(1+n1,1+n2,n3,-1+n4)*prf(4*M`j'^2*n1*q12*q13+4*M`j'^2*n1*q13*q23,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+mbox1l(-1+n1,2+n2,n3,-1+n4)*prf(-q12^2-n2*q12^2-2*q12*q23-2*n2*q12*q23-q23^2-n2*q23^2,-2*q13^2+2*n4*q13^2-q13*q33+n4*q13*q33)+mbox1l(n1,2+n2,n3,-2+n4)*prf(-4*M`j'^2*q12^2-4*M`j'^2*n2*q12^2+2*M`j'^2*q12*q13+2*M`j'^2*n2*q12*q13+2*q12^2*q13+2*n2*q12^2*q13-4*M`j'^2*q12*q23-4*M`j'^2*n2*q12*q23+2*M`j'^2*q13*q23+2*M`j'^2*n2*q13*q23+2*q12*q13*q23+2*n2*q12*q13*q23+q12^2*q33+n2*q12^2*q33+q12*q23*q33+n2*q12*q23*q33,8*M`j'^2*q13^2-8*M`j'^2*n4*q13^2-4*q13^3+4*n4*q13^3+4*M`j'^2*q13*q33-4*M`j'^2*n4*q13*q33-4*q13^2*q33+4*n4*q13^2*q33-q13*q33^2+n4*q13*q33^2)+mbox1l(n1,1+n2,-1+n3,n4)*prf(-6*M`j'^2*q12-8*M`j'^2*q13+4*q12*q13+4*q13^2-6*M`j'^2*q23+4*q13*q23-4*M`j'^2*q33+2*q12*q33+4*q13*q33+2*q23*q33+q33^2,-8*M`j'^2*q13+4*q13^2-4*M`j'^2*q33+4*q13*q33+q33^2)+mbox1l(1+n1,1+n2,-1+n3,-1+n4)*prf(-6*M`j'^2*n1*q12*q13+4*n1*q12*q13^2+2*M`j'^2*n1*q13*q23-4*M`j'^2*n1*q12*q33+4*n1*q12*q13*q33+n1*q12*q33^2,8*M`j'^2*q13^2-8*M`j'^2*n4*q13^2-4*q13^3+4*n4*q13^3+4*M`j'^2*q13*q33-4*M`j'^2*n4*q13*q33-4*q13^2*q33+4*n4*q13^2*q33-q13*q33^2+n4*q13*q33^2)+mbox1l(n1,2+n2,-1+n3,-1+n4)*prf(6*M`j'^2*q12*q13+6*M`j'^2*n2*q12*q13-2*q12*q13^2-2*n2*q12*q13^2-4*M`j'^2*q12*q23-4*M`j'^2*n2*q12*q23-2*M`j'^2*q13*q23-2*M`j'^2*n2*q13*q23+2*q12*q13*q23+2*n2*q12*q13*q23+2*q13^2*q23+2*n2*q13^2*q23-4*M`j'^2*q23^2-4*M`j'^2*n2*q23^2+2*q13*q23^2+2*n2*q13*q23^2+4*M`j'^2*q12*q33+4*M`j'^2*n2*q12*q33-3*q12*q13*q33-3*n2*q12*q13*q33+q12*q23*q33+n2*q12*q23*q33+q13*q23*q33+n2*q13*q23*q33+q23^2*q33+n2*q23^2*q33-q12*q33^2-n2*q12*q33^2,8*M`j'^2*q13^2-8*M`j'^2*n4*q13^2-4*q13^3+4*n4*q13^3+4*M`j'^2*q13*q33-4*M`j'^2*n4*q13*q33-4*q13^2*q33+4*n4*q13^2*q33-q13*q33^2+n4*q13*q33^2)+mbox1l(n1,1+n2,n3,-1+n4)*(tmpprf(ep,1)*prf(4*q12*q13^2+4*q13^2*q23+2*q12*q13*q33+2*q13*q23*q33,8*M`j'^2*q13^2-8*M`j'^2*n4*q13^2-4*q13^3+4*n4*q13^3+4*M`j'^2*q13*q33-4*M`j'^2*n4*q13*q33-4*q13^2*q33+4*n4*q13^2*q33-q13*q33^2+n4*q13*q33^2)+prf(-14*M`j'^2*q12*q13+4*M`j'^2*n1*q12*q13-8*M`j'^2*n2*q12*q13-2*M`j'^2*n3*q12*q13+6*M`j'^2*n4*q12*q13-2*q12*q13^2+6*n2*q12*q13^2+4*n3*q12*q13^2-6*M`j'^2*q13*q23-4*M`j'^2*n1*q13*q23-2*M`j'^2*n3*q13*q23+6*M`j'^2*n4*q13*q23-6*q13^2*q23+4*n1*q13^2*q23+2*n2*q13^2*q23+4*n3*q13^2*q23-4*M`j'^2*q12*q33+4*M`j'^2*n1*q12*q33-4*M`j'^2*n2*q12*q33+q12*q13*q33-2*n1*q12*q13*q33+5*n2*q12*q13*q33+2*n3*q12*q13*q33-3*q13*q23*q33+2*n1*q13*q23*q33+n2*q13*q23*q33+2*n3*q13*q23*q33+q12*q33^2-n1*q12*q33^2+n2*q12*q33^2,8*M`j'^2*q13^2-8*M`j'^2*n4*q13^2-4*q13^3+4*n4*q13^3+4*M`j'^2*q13*q33-4*M`j'^2*n4*q13*q33-4*q13^2*q33+4*n4*q13^2*q33-q13*q33^2+n4*q13*q33^2))+mbox1l(n1,2+n2,n3,-1+n4)*prf(-4*M`j'^2*q12^2*q13-4*M`j'^2*n2*q12^2*q13+4*q12^2*q13^2+4*n2*q12^2*q13^2+4*q12*q13^2*q23+4*n2*q12*q13^2*q23+4*M`j'^2*q13*q23^2+4*M`j'^2*n2*q13*q23^2-4*M`j'^2*q12^2*q33-4*M`j'^2*n2*q12^2*q33+4*q12^2*q13*q33+4*n2*q12^2*q13*q33-4*M`j'^2*q12*q23*q33-4*M`j'^2*n2*q12*q23*q33+4*q12*q13*q23*q33+4*n2*q12*q13*q23*q33+q12^2*q33^2+n2*q12^2*q33^2+q12*q23*q33^2+n2*q12*q23*q33^2,8*M`j'^2*q13^2-8*M`j'^2*n4*q13^2-4*q13^3+4*n4*q13^3+4*M`j'^2*q13*q33-4*M`j'^2*n4*q13*q33-4*q13^2*q33+4*n4*q13^2*q33-q13*q33^2+n4*q13*q33^2);
	Identify,ifmatch->jump mbox1l(n1?neg_,n2?neg0_,n3?pos_,n4?{,>1}) = mbox1l(1+n1,n2,1+n3,-2+n4)*prf(2*M`j'^2*n3*q13,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+mbox1l(2+n1,n2,-1+n3,-1+n4)*prf(2*M`j'^2*q13+2*M`j'^2*n1*q13,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+mbox1l(2+n1,n2,n3,-2+n4)*prf(2*M`j'^2*q13+2*M`j'^2*n1*q13,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+mbox1l(2+n1,n2,n3,-1+n4)*prf(-4*M`j'^2*q13^2-4*M`j'^2*n1*q13^2,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+mbox1l(n1,1+n2,n3,-1+n4)*prf(n2*q12+n2*q23,-2*q13+2*n4*q13-q33+n4*q33)+mbox1l(1+n1,1+n2,n3,-2+n4)*prf(-4*M`j'^2*n2*q12+2*M`j'^2*n2*q13+2*n2*q12*q13+n2*q12*q33,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+mbox1l(1+n1,n2,n3,-1+n4)*(tmpprf(ep,1)*prf(-4*q13^2-2*q13*q33,8*M`j'^2*q13-8*M`j'^2*n4*q13-4*q13^2+4*n4*q13^2+4*M`j'^2*q33-4*M`j'^2*n4*q33-4*q13*q33+4*n4*q13*q33-q33^2+n4*q33^2)+prf(10*M`j'^2*q13+4*M`j'^2*n1*q13+2*M`j'^2*n3*q13-6*M`j'^2*n4*q13+4*q13^2-4*n1*q13^2-2*n2*q13^2-4*n3*q13^2+2*q13*q33-2*n1*q13*q33-n2*q13*q33-2*n3*q13*q33,8*M`j'^2*q13-8*M`j'^2*n4*q13-4*q13^2+4*n4*q13^2+4*M`j'^2*q33-4*M`j'^2*n4*q33-4*q13*q33+4*n4*q13*q33-q33^2+n4*q33^2))+mbox1l(1+n1,1+n2,-1+n3,-1+n4)*prf(-2*M`j'^2*n2*q13+2*n2*q13^2-4*M`j'^2*n2*q23+2*n2*q13*q23+n2*q13*q33+n2*q23*q33,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+mbox1l(1+n1,n2,-1+n3,n4)*prf(2*M`j'^2*q13+4*M`j'^2*q33-2*q13*q33-q33^2,8*M`j'^2*q13-4*q13^2+4*M`j'^2*q33-4*q13*q33-q33^2)+mbox1l(1+n1,1+n2,n3,-1+n4)*prf(-4*M`j'^2*n2*q12*q13+4*n2*q12*q13^2+4*M`j'^2*n2*q13*q23-4*M`j'^2*n2*q12*q33+4*n2*q12*q13*q33+n2*q12*q33^2,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?neg_,n3?{,>1},n4?pos_) = mbox1l(n1,1+n2,n3,-1+n4)*prf(-2*M`j'^2*q12-2*M`j'^2*q23,8*M`j'^2*q13-4*q13^2+4*M`j'^2*q33-4*q13*q33-q33^2)+mbox1l(n1,1+n2,-2+n3,1+n4)*prf(-2*M`j'^2*n4*q12-2*M`j'^2*n4*q23,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2)+mbox1l(-1+n1,2+n2,-1+n3,n4)*prf(-(q12^2*q13)-n2*q12^2*q13-2*q12*q13*q23-2*n2*q12*q13*q23-q13*q23^2-n2*q13*q23^2-q12^2*q33-n2*q12^2*q33-2*q12*q23*q33-2*n2*q12*q23*q33-q23^2*q33-n2*q23^2*q33,-2*q13^3+2*n3*q13^3-q13^2*q33+n3*q13^2*q33)+mbox1l(1+n1,1+n2,-1+n3,-1+n4)*prf(-6*M`j'^2*n1*q12*q13+4*n1*q12*q13^2+2*M`j'^2*n1*q13*q23-4*M`j'^2*n1*q12*q33+4*n1*q12*q13*q33+n1*q12*q33^2,8*M`j'^2*q13^2-8*M`j'^2*n3*q13^2-4*q13^3+4*n3*q13^3+4*M`j'^2*q13*q33-4*M`j'^2*n3*q13*q33-4*q13^2*q33+4*n3*q13^2*q33-q13*q33^2+n3*q13*q33^2)+mbox1l(n1,2+n2,-1+n3,-1+n4)*prf(-4*M`j'^2*q12^2*q13-4*M`j'^2*n2*q12^2*q13+2*M`j'^2*q12*q13^2+2*M`j'^2*n2*q12*q13^2+2*q12^2*q13^2+2*n2*q12^2*q13^2-4*M`j'^2*q12*q13*q23-4*M`j'^2*n2*q12*q13*q23+2*M`j'^2*q13^2*q23+2*M`j'^2*n2*q13^2*q23+2*q12*q13^2*q23+2*n2*q12*q13^2*q23-4*M`j'^2*q12^2*q33-4*M`j'^2*n2*q12^2*q33+3*q12^2*q13*q33+3*n2*q12^2*q13*q33-4*M`j'^2*q12*q23*q33-4*M`j'^2*n2*q12*q23*q33+3*q12*q13*q23*q33+3*n2*q12*q13*q23*q33+q12^2*q33^2+n2*q12^2*q33^2+q12*q23*q33^2+n2*q12*q23*q33^2,8*M`j'^2*q13^3-8*M`j'^2*n3*q13^3-4*q13^4+4*n3*q13^4+4*M`j'^2*q13^2*q33-4*M`j'^2*n3*q13^2*q33-4*q13^3*q33+4*n3*q13^3*q33-q13^2*q33^2+n3*q13^2*q33^2)+mbox1l(1+n1,1+n2,-1+n3,n4)*prf(-4*M`j'^2*n1*q12*q13^2-4*M`j'^2*n1*q13^2*q23-8*M`j'^2*n1*q12*q13*q33+4*n1*q12*q13^2*q33-4*M`j'^2*n1*q12*q33^2+4*n1*q12*q13*q33^2+n1*q12*q33^3,8*M`j'^2*q13^2-8*M`j'^2*n3*q13^2-4*q13^3+4*n3*q13^3+4*M`j'^2*q13*q33-4*M`j'^2*n3*q13*q33-4*q13^2*q33+4*n3*q13^2*q33-q13*q33^2+n3*q13*q33^2)+mbox1l(1+n1,1+n2,-2+n3,n4)*prf(2*M`j'^2*n1*q12*q13^2+2*M`j'^2*n1*q13^2*q23-4*M`j'^2*n1*q12*q13*q33+2*n1*q12*q13^2*q33+4*M`j'^2*n1*q13*q23*q33-2*n1*q13^2*q23*q33-4*M`j'^2*n1*q12*q33^2+3*n1*q12*q13*q33^2-n1*q13*q23*q33^2+n1*q12*q33^3,8*M`j'^2*q13^3-8*M`j'^2*n3*q13^3-4*q13^4+4*n3*q13^4+4*M`j'^2*q13^2*q33-4*M`j'^2*n3*q13^2*q33-4*q13^3*q33+4*n3*q13^3*q33-q13^2*q33^2+n3*q13^2*q33^2)+mbox1l(n1,2+n2,-2+n3,n4)*prf(-2*M`j'^2*q12*q13^2-2*M`j'^2*n2*q12*q13^2-8*M`j'^2*q13^3-8*M`j'^2*n2*q13^3+2*q12*q13^3+2*n2*q12*q13^3+4*q13^4+4*n2*q13^4-4*M`j'^2*q12*q13*q23-4*M`j'^2*n2*q12*q13*q23-10*M`j'^2*q13^2*q23-10*M`j'^2*n2*q13^2*q23+2*q12*q13^2*q23+2*n2*q12*q13^2*q23+6*q13^3*q23+6*n2*q13^3*q23-4*M`j'^2*q13*q23^2-4*M`j'^2*n2*q13*q23^2+2*q13^2*q23^2+2*n2*q13^2*q23^2+8*M`j'^2*q12*q13*q33+8*M`j'^2*n2*q12*q13*q33-4*M`j'^2*q13^2*q33-4*M`j'^2*n2*q13^2*q33-3*q12*q13^2*q33-3*n2*q12*q13^2*q33+4*q13^3*q33+4*n2*q13^3*q33-4*M`j'^2*q12*q23*q33-4*M`j'^2*n2*q12*q23*q33-4*M`j'^2*q13*q23*q33-4*M`j'^2*n2*q13*q23*q33+3*q12*q13*q23*q33+3*n2*q12*q13*q23*q33+5*q13^2*q23*q33+5*n2*q13^2*q23*q33-4*M`j'^2*q23^2*q33-4*M`j'^2*n2*q23^2*q33+3*q13*q23^2*q33+3*n2*q13*q23^2*q33+4*M`j'^2*q12*q33^2+4*M`j'^2*n2*q12*q33^2-4*q12*q13*q33^2-4*n2*q12*q13*q33^2+q13^2*q33^2+n2*q13^2*q33^2+q12*q23*q33^2+n2*q12*q23*q33^2+q13*q23*q33^2+n2*q13*q23*q33^2+q23^2*q33^2+n2*q23^2*q33^2-q12*q33^3-n2*q12*q33^3,8*M`j'^2*q13^3-8*M`j'^2*n3*q13^3-4*q13^4+4*n3*q13^4+4*M`j'^2*q13^2*q33-4*M`j'^2*n3*q13^2*q33-4*q13^3*q33+4*n3*q13^3*q33-q13^2*q33^2+n3*q13^2*q33^2)+mbox1l(n1,1+n2,-1+n3,n4)*(tmpprf(ep,1)*prf(4*q12*q13^3+4*q13^3*q23+2*q12*q13^2*q33+2*q13^2*q23*q33,8*M`j'^2*q13^3-8*M`j'^2*n3*q13^3-4*q13^4+4*n3*q13^4+4*M`j'^2*q13^2*q33-4*M`j'^2*n3*q13^2*q33-4*q13^3*q33+4*n3*q13^3*q33-q13^2*q33^2+n3*q13^2*q33^2)+prf(2*M`j'^2*q12*q13^2+4*M`j'^2*n1*q12*q13^2-2*M`j'^2*n3*q12*q13^2-2*M`j'^2*n4*q12*q13^2+16*M`j'^2*q13^3+8*M`j'^2*n2*q13^3-8*M`j'^2*n3*q13^3-10*q12*q13^3+2*n2*q12*q13^3+4*n3*q12*q13^3+4*n4*q12*q13^3-8*q13^4-4*n2*q13^4+4*n3*q13^4+10*M`j'^2*q13^2*q23-4*M`j'^2*n1*q13^2*q23+8*M`j'^2*n2*q13^2*q23-2*M`j'^2*n3*q13^2*q23-2*M`j'^2*n4*q13^2*q23-14*q13^3*q23+4*n1*q13^3*q23-2*n2*q13^3*q23+4*n3*q13^3*q23+4*n4*q13^3*q23-8*M`j'^2*q12*q13*q33+8*M`j'^2*n1*q12*q13*q33-8*M`j'^2*n2*q12*q13*q33+8*M`j'^2*q13^2*q33+4*M`j'^2*n2*q13^2*q33-4*M`j'^2*n3*q13^2*q33-q12*q13^2*q33-4*n1*q12*q13^2*q33+5*n2*q12*q13^2*q33+2*n3*q12*q13^2*q33+2*n4*q12*q13^2*q33-8*q13^3*q33-4*n2*q13^3*q33+4*n3*q13^3*q33+4*M`j'^2*q13*q23*q33-4*M`j'^2*n1*q13*q23*q33+4*M`j'^2*n2*q13*q23*q33-9*q13^2*q23*q33+4*n1*q13^2*q23*q33-3*n2*q13^2*q23*q33+2*n3*q13^2*q23*q33+2*n4*q13^2*q23*q33-4*M`j'^2*q12*q33^2+4*M`j'^2*n1*q12*q33^2-4*M`j'^2*n2*q12*q33^2+4*q12*q13*q33^2-4*n1*q12*q13*q33^2+4*n2*q12*q13*q33^2-2*q13^2*q33^2-n2*q13^2*q33^2+n3*q13^2*q33^2-q13*q23*q33^2+n1*q13*q23*q33^2-n2*q13*q23*q33^2+q12*q33^3-n1*q12*q33^3+n2*q12*q33^3,8*M`j'^2*q13^3-8*M`j'^2*n3*q13^3-4*q13^4+4*n3*q13^4+4*M`j'^2*q13^2*q33-4*M`j'^2*n3*q13^2*q33-4*q13^3*q33+4*n3*q13^3*q33-q13^2*q33^2+n3*q13^2*q33^2))+mbox1l(n1,2+n2,-1+n3,n4)*prf(-4*M`j'^2*q12^2*q13^2-4*M`j'^2*n2*q12^2*q13^2+4*q12^2*q13^3+4*n2*q12^2*q13^3+4*q12*q13^3*q23+4*n2*q12*q13^3*q23+4*M`j'^2*q13^2*q23^2+4*M`j'^2*n2*q13^2*q23^2-12*M`j'^2*q12^2*q13*q33-12*M`j'^2*n2*q12^2*q13*q33+8*q12^2*q13^2*q33+8*n2*q12^2*q13^2*q33-12*M`j'^2*q12*q13*q23*q33-12*M`j'^2*n2*q12*q13*q23*q33+8*q12*q13^2*q23*q33+8*n2*q12*q13^2*q23*q33-4*M`j'^2*q12^2*q33^2-4*M`j'^2*n2*q12^2*q33^2+5*q12^2*q13*q33^2+5*n2*q12^2*q13*q33^2-4*M`j'^2*q12*q23*q33^2-4*M`j'^2*n2*q12*q23*q33^2+5*q12*q13*q23*q33^2+5*n2*q12*q13*q23*q33^2+q12^2*q33^3+n2*q12^2*q33^3+q12*q23*q33^3+n2*q12*q23*q33^3,8*M`j'^2*q13^3-8*M`j'^2*n3*q13^3-4*q13^4+4*n3*q13^4+4*M`j'^2*q13^2*q33-4*M`j'^2*n3*q13^2*q33-4*q13^3*q33+4*n3*q13^3*q33-q13^2*q33^2+n3*q13^2*q33^2);
	Identify,ifmatch->jump mbox1l(n1?neg_,n2?neg0_,n3?{,>1},n4?pos_) = mbox1l(1+n1,n2,n3,-1+n4)*prf(2*M`j'^2*q13,8*M`j'^2*q13-4*q13^2+4*M`j'^2*q33-4*q13*q33-q33^2)+mbox1l(1+n1,n2,-2+n3,1+n4)*prf(2*M`j'^2*n4*q13,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2)+mbox1l(2+n1,n2,-1+n3,-1+n4)*prf(2*M`j'^2*q13+2*M`j'^2*n1*q13,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2)+mbox1l(2+n1,n2,-1+n3,n4)*prf(-4*M`j'^2*q13^2-4*M`j'^2*n1*q13^2,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2)+mbox1l(n1,1+n2,-1+n3,n4)*prf(-(n2*q12)-2*n2*q13-n2*q23-n2*q33,-2*q13+2*n3*q13-q33+n3*q33)+mbox1l(1+n1,1+n2,-1+n3,-1+n4)*prf(4*M`j'^2*n2*q12+2*M`j'^2*n2*q13-2*n2*q12*q13-n2*q12*q33,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2)+mbox1l(2+n1,n2,-2+n3,n4)*prf(2*M`j'^2*q13+2*M`j'^2*n1*q13+4*M`j'^2*q33+4*M`j'^2*n1*q33-2*q13*q33-2*n1*q13*q33-q33^2-n1*q33^2,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2)+mbox1l(1+n1,1+n2,-2+n3,n4)*prf(6*M`j'^2*n2*q13-2*n2*q13^2+4*M`j'^2*n2*q23-2*n2*q13*q23+4*M`j'^2*n2*q33-3*n2*q13*q33-n2*q23*q33-n2*q33^2,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2)+mbox1l(1+n1,n2,-1+n3,n4)*(tmpprf(ep,1)*prf(4*q13^2+2*q13*q33,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2)+prf(-10*M`j'^2*q13-4*M`j'^2*n1*q13+6*M`j'^2*n3*q13-2*M`j'^2*n4*q13-4*q13^2+4*n1*q13^2+2*n2*q13^2+4*n4*q13^2-8*M`j'^2*q33-4*M`j'^2*n1*q33+4*M`j'^2*n3*q33+2*q13*q33+4*n1*q13*q33+n2*q13*q33-2*n3*q13*q33+2*n4*q13*q33+2*q33^2+n1*q33^2-n3*q33^2,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2))+mbox1l(1+n1,1+n2,-1+n3,n4)*prf(-4*M`j'^2*n2*q12*q13+4*n2*q12*q13^2+4*M`j'^2*n2*q13*q23-4*M`j'^2*n2*q12*q33+4*n2*q12*q13*q33+n2*q12*q33^2,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?neg0_,n3?pos_,n4?{,>1}) = mbox1l(1+n1,n2,n3,-2+n4)*prf(2*M`j'^2*n1,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+mbox1l(n1,1+n2,n3,-2+n4)*prf(2*M`j'^2*n2,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+mbox1l(n1,n2,1+n3,-2+n4)*prf(2*M`j'^2*n3,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+mbox1l(1+n1,n2,n3,-1+n4)*prf(-4*M`j'^2*n1*q13,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+mbox1l(n1,1+n2,n3,-1+n4)*prf(4*M`j'^2*n2*q12+4*M`j'^2*n2*q23,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+mbox1l(n1,n2,-1+n3,n4)*prf(-2*M`j'^2+2*q13+q33,8*M`j'^2*q13-4*q13^2+4*M`j'^2*q33-4*q13*q33-q33^2)+mbox1l(1+n1,n2,-1+n3,-1+n4)*prf(-2*M`j'^2*n1+2*n1*q13+n1*q33,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+mbox1l(n1,1+n2,-1+n3,-1+n4)*prf(-2*M`j'^2*n2+2*n2*q13+n2*q33,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+mbox1l(n1,n2,n3,-1+n4)*(tmpprf(ep,1)*prf(4*q13+2*q33,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2)+prf(-2*M`j'^2-2*M`j'^2*n3+2*M`j'^2*n4-10*q13+2*n1*q13+2*n2*q13+4*n3*q13+2*n4*q13-5*q33+n1*q33+n2*q33+2*n3*q33+n4*q33,-8*M`j'^2*q13+8*M`j'^2*n4*q13+4*q13^2-4*n4*q13^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q13*q33-4*n4*q13*q33+q33^2-n4*q33^2));
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?neg0_,n3?{,>1},n4?pos_) = mbox1l(1+n1,n2,-2+n3,n4)*prf(2*M`j'^2*n1,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2)+mbox1l(n1,1+n2,-2+n3,n4)*prf(2*M`j'^2*n2,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2)+mbox1l(n1,n2,-2+n3,1+n4)*prf(2*M`j'^2*n4,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2)+mbox1l(n1,n2,n3,-1+n4)*prf(-2*M`j'^2+2*q13+q33,8*M`j'^2*q13-4*q13^2+4*M`j'^2*q33-4*q13*q33-q33^2)+mbox1l(1+n1,n2,-1+n3,-1+n4)*prf(-2*M`j'^2*n1+2*n1*q13+n1*q33,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2)+mbox1l(n1,1+n2,-1+n3,-1+n4)*prf(-2*M`j'^2*n2+2*n2*q13+n2*q33,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2)+mbox1l(n1,n2,-1+n3,n4)*(tmpprf(ep,1)*prf(4*q13+2*q33,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2)+prf(-2*M`j'^2+2*M`j'^2*n3-2*M`j'^2*n4-10*q13+2*n1*q13+2*n2*q13+2*n3*q13+4*n4*q13-5*q33+n1*q33+n2*q33+n3*q33+2*n4*q33,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2))+mbox1l(1+n1,n2,-1+n3,n4)*prf(-4*M`j'^2*n1*q13-4*M`j'^2*n1*q33+2*n1*q13*q33+n1*q33^2,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2)+mbox1l(n1,1+n2,-1+n3,n4)*prf(-4*M`j'^2*n2*q12-8*M`j'^2*n2*q13+4*n2*q12*q13+4*n2*q13^2-4*M`j'^2*n2*q23+4*n2*q13*q23-4*M`j'^2*n2*q33+2*n2*q12*q33+4*n2*q13*q33+2*n2*q23*q33+n2*q33^2,-8*M`j'^2*q13+8*M`j'^2*n3*q13+4*q13^2-4*n3*q13^2-4*M`j'^2*q33+4*M`j'^2*n3*q33+4*q13*q33-4*n3*q13*q33+q33^2-n3*q33^2);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?neg_,n3?pos_,n4?pos_) = mbox1l(n1,1+n2,n3,-1+n4)*prf(-q12,q13)+mbox1l(-1+n1,2+n2,n3,-1+n4)*prf(-q12^2-n2*q12^2-q12*q23-n2*q12*q23,-q13^2+n1*q13^2)+mbox1l(-2+n1,2+n2,n3,n4)*prf(q12^2+n2*q12^2+2*q12*q23+2*n2*q12*q23+q23^2+n2*q23^2,-q13^2+n1*q13^2)+mbox1l(n1,1+n2,n3,n4)*prf(-2*q12*q13-q12*q33,q13)+mbox1l(n1,1+n2,-1+n3,n4)*prf(q13^2+q13*q23-q12*q33,q13^2)+mbox1l(-1+n1,1+n2,n3,n4)*prf(-2*q12*q13+n1*q12*q13-n2*q12*q13+2*q13*q23-n1*q13*q23+n2*q13*q23-2*q12*q33+n1*q12*q33-n2*q12*q33,-q13^2+n1*q13^2)+mbox1l(-1+n1,2+n2,-1+n3,n4)*prf(q12*q13+n2*q12*q13-q12*q23-n2*q12*q23-q13*q23-n2*q13*q23-q23^2-n2*q23^2+q12*q33+n2*q12*q33,-q13^2+n1*q13^2)+mbox1l(-1+n1,2+n2,n3,n4)*prf(-2*q12^2*q13-2*n2*q12^2*q13-2*q12*q13*q23-2*n2*q12*q13*q23-q12^2*q33-n2*q12^2*q33-q12*q23*q33-n2*q12*q23*q33,-q13^2+n1*q13^2);
	Identify,ifmatch->jump mbox1l(n1?neg_,0,1,1) = tmpprf(1,-1+2*ep+n1)*mbox1l(n1,0,0,2)*prf(-2*M`j'^2,2*q13+q33)+tmpprf(1,-1+2*ep+n1)*mbox1l(1+n1,0,0,1)*prf(-2*M`j'^2*n1,2*q13+q33)+tmpprf(1,-1+2*ep+n1)*mbox1l(1+n1,0,0,2)*prf(2*M`j'^2*q13,2*q13+q33)+tmpprf(1,-1+2*ep+n1)*mbox1l(1+n1,0,2,0)*prf(2*M`j'^2*q13,2*q13+q33)+mbox1l(1+n1,0,1,1)*(tmpprf(ep,-1+2*ep+n1)*prf(2*q13,1)+tmpprf(1,-1+2*ep+n1)*prf(2*n1*q13,1))+tmpprf(1,-1+2*ep+n1)*mbox1l(2+n1,0,1,0)*prf(2*M`j'^2*q13+2*M`j'^2*n1*q13,2*q13+q33)+tmpprf(1,-1+2*ep+n1)*mbox1l(2+n1,0,1,1)*prf(-4*M`j'^2*q13^2-4*M`j'^2*n1*q13^2,2*q13+q33)+tmpprf(1,-1+2*ep+n1)*mbox1l(n1,0,2,0)*prf(2*M`j'^2-2*q13-q33,2*q13+q33)+tmpprf(1,-1+2*ep+n1)*mbox1l(1+n1,0,1,0)*prf(2*M`j'^2*n1-2*n1*q13-n1*q33,2*q13+q33)+tmpprf(1,-1+2*ep+n1)*mbox1l(2+n1,0,0,1)*prf(2*M`j'^2*q13+2*M`j'^2*n1*q13+4*M`j'^2*q33+4*M`j'^2*n1*q33-2*q13*q33-2*n1*q13*q33-q33^2-n1*q33^2,2*q13+q33);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?pos_,n3?neg_,n4?{,>1}) = mbox1l(n1,1+n2,1+n3,-2+n4)*prf(2*M`j'^2*n2*q12+2*M`j'^2*n2*q23,-8*M`j'^2*q12+8*M`j'^2*n4*q12+4*q12^2-4*n4*q12^2-8*M`j'^2*q13+8*M`j'^2*n4*q13+8*q12*q13-8*n4*q12*q13+4*q13^2-4*n4*q13^2-8*M`j'^2*q23+8*M`j'^2*n4*q23+8*q12*q23-8*n4*q12*q23+8*q13*q23-8*n4*q13*q23+4*q23^2-4*n4*q23^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q12*q33-4*n4*q12*q33+4*q13*q33-4*n4*q13*q33+4*q23*q33-4*n4*q23*q33+q33^2-n4*q33^2)+mbox1l(-1+n1,n2,2+n3,-1+n4)*prf(2*q12^3+2*n3*q12^3+q12^2*q13+n3*q12^2*q13+5*q12^2*q23+5*n3*q12^2*q23+2*q12*q13*q23+2*n3*q12*q13*q23+4*q12*q23^2+4*n3*q12*q23^2+q13*q23^2+n3*q13*q23^2+q23^3+n3*q23^3,2*q12*q13^2-2*n4*q12*q13^2+2*q13^3-2*n4*q13^3+4*q12*q13*q23-4*n4*q12*q13*q23+6*q13^2*q23-6*n4*q13^2*q23+2*q12*q23^2-2*n4*q12*q23^2+6*q13*q23^2-6*n4*q13*q23^2+2*q23^3-2*n4*q23^3-4*q12^2*q33+4*n4*q12^2*q33-4*q12*q13*q33+4*n4*q12*q13*q33+q13^2*q33-n4*q13^2*q33-4*q12*q23*q33+4*n4*q12*q23*q33+2*q13*q23*q33-2*n4*q13*q23*q33+q23^2*q33-n4*q23^2*q33-2*q12*q33^2+2*n4*q12*q33^2)+mbox1l(n1,n2,2+n3,-2+n4)*prf(8*M`j'^2*q12^3+8*M`j'^2*n3*q12^3-4*q12^4-4*n3*q12^4+4*M`j'^2*q12^2*q13+4*M`j'^2*n3*q12^2*q13-6*q12^3*q13-6*n3*q12^3*q13+2*M`j'^2*q12*q13^2+2*M`j'^2*n3*q12*q13^2-2*q12^2*q13^2-2*n3*q12^2*q13^2+12*M`j'^2*q12^2*q23+12*M`j'^2*n3*q12^2*q23-10*q12^3*q23-10*n3*q12^3*q23+8*M`j'^2*q12*q13*q23+8*M`j'^2*n3*q12*q13*q23-10*q12^2*q13*q23-10*n3*q12^2*q13*q23+2*M`j'^2*q13^2*q23+2*M`j'^2*n3*q13^2*q23-2*q12*q13^2*q23-2*n3*q12*q13^2*q23+6*M`j'^2*q12*q23^2+6*M`j'^2*n3*q12*q23^2-8*q12^2*q23^2-8*n3*q12^2*q23^2+4*M`j'^2*q13*q23^2+4*M`j'^2*n3*q13*q23^2-4*q12*q13*q23^2-4*n3*q12*q13*q23^2+2*M`j'^2*q23^3+2*M`j'^2*n3*q23^3-2*q12*q23^3-2*n3*q12*q23^3-4*M`j'^2*q12^2*q33-4*M`j'^2*n3*q12^2*q33-2*q12^3*q33-2*n3*q12^3*q33-q12^2*q13*q33-n3*q12^2*q13*q33-4*M`j'^2*q12*q23*q33-4*M`j'^2*n3*q12*q23*q33-3*q12^2*q23*q33-3*n3*q12^2*q23*q33-q12*q13*q23*q33-n3*q12*q13*q23*q33-q12*q23^2*q33-n3*q12*q23^2*q33,-8*M`j'^2*q12*q13^2+8*M`j'^2*n4*q12*q13^2+4*q12^2*q13^2-4*n4*q12^2*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n4*q13^3+8*q12*q13^3-8*n4*q12*q13^3+4*q13^4-4*n4*q13^4-16*M`j'^2*q12*q13*q23+16*M`j'^2*n4*q12*q13*q23+8*q12^2*q13*q23-8*n4*q12^2*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n4*q13^2*q23+24*q12*q13^2*q23-24*n4*q12*q13^2*q23+16*q13^3*q23-16*n4*q13^3*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n4*q12*q23^2+4*q12^2*q23^2-4*n4*q12^2*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n4*q13*q23^2+24*q12*q13*q23^2-24*n4*q12*q13*q23^2+24*q13^2*q23^2-24*n4*q13^2*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n4*q23^3+8*q12*q23^3-8*n4*q12*q23^3+16*q13*q23^3-16*n4*q13*q23^3+4*q23^4-4*n4*q23^4+16*M`j'^2*q12^2*q33-16*M`j'^2*n4*q12^2*q33-8*q12^3*q33+8*n4*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n4*q12*q13*q33-16*q12^2*q13*q33+16*n4*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n4*q13^2*q33-4*q12*q13^2*q33+4*n4*q12*q13^2*q33+4*q13^3*q33-4*n4*q13^3*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n4*q12*q23*q33-16*q12^2*q23*q33+16*n4*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n4*q13*q23*q33-8*q12*q13*q23*q33+8*n4*q12*q13*q23*q33+12*q13^2*q23*q33-12*n4*q13^2*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n4*q23^2*q33-4*q12*q23^2*q33+4*n4*q12*q23^2*q33+12*q13*q23^2*q33-12*n4*q13*q23^2*q33+4*q23^3*q33-4*n4*q23^3*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n4*q12*q33^2-8*q12^2*q33^2+8*n4*q12^2*q33^2-8*q12*q13*q33^2+8*n4*q12*q13*q33^2+q13^2*q33^2-n4*q13^2*q33^2-8*q12*q23*q33^2+8*n4*q12*q23*q33^2+2*q13*q23*q33^2-2*n4*q13*q23*q33^2+q23^2*q33^2-n4*q23^2*q33^2-2*q12*q33^3+2*n4*q12*q33^3)+mbox1l(n1,-1+n2,1+n3,n4)*prf(-2*M`j'^2*q12-8*M`j'^2*q13+4*q12*q13+4*q13^2-2*M`j'^2*q23+4*q13*q23-4*M`j'^2*q33+2*q12*q33+4*q13*q33+2*q23*q33+q33^2,-8*M`j'^2*q12+4*q12^2-8*M`j'^2*q13+8*q12*q13+4*q13^2-8*M`j'^2*q23+8*q12*q23+8*q13*q23+4*q23^2-4*M`j'^2*q33+4*q12*q33+4*q13*q33+4*q23*q33+q33^2)+mbox1l(1+n1,n2,1+n3,-2+n4)*prf(-8*M`j'^2*n1*q12^2*q13+4*n1*q12^3*q13+2*M`j'^2*n1*q12*q13^2+4*n1*q12^2*q13^2+8*M`j'^2*n1*q12^2*q23-4*n1*q12^3*q23+12*M`j'^2*n1*q12*q13*q23-4*n1*q12^2*q13*q23+2*M`j'^2*n1*q13^2*q23-4*n1*q12*q13^2*q23+10*M`j'^2*n1*q12*q23^2-8*n1*q12^2*q23^2+4*M`j'^2*n1*q13*q23^2-8*n1*q12*q13*q23^2+2*M`j'^2*n1*q23^3-4*n1*q12*q23^3-12*M`j'^2*n1*q12^2*q33+4*n1*q12^3*q33+6*n1*q12^2*q13*q33-4*M`j'^2*n1*q12*q23*q33+2*n1*q12^2*q23*q33-2*n1*q12*q13*q23*q33-2*n1*q12*q23^2*q33+2*n1*q12^2*q33^2,-8*M`j'^2*q12*q13^2+8*M`j'^2*n4*q12*q13^2+4*q12^2*q13^2-4*n4*q12^2*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n4*q13^3+8*q12*q13^3-8*n4*q12*q13^3+4*q13^4-4*n4*q13^4-16*M`j'^2*q12*q13*q23+16*M`j'^2*n4*q12*q13*q23+8*q12^2*q13*q23-8*n4*q12^2*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n4*q13^2*q23+24*q12*q13^2*q23-24*n4*q12*q13^2*q23+16*q13^3*q23-16*n4*q13^3*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n4*q12*q23^2+4*q12^2*q23^2-4*n4*q12^2*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n4*q13*q23^2+24*q12*q13*q23^2-24*n4*q12*q13*q23^2+24*q13^2*q23^2-24*n4*q13^2*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n4*q23^3+8*q12*q23^3-8*n4*q12*q23^3+16*q13*q23^3-16*n4*q13*q23^3+4*q23^4-4*n4*q23^4+16*M`j'^2*q12^2*q33-16*M`j'^2*n4*q12^2*q33-8*q12^3*q33+8*n4*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n4*q12*q13*q33-16*q12^2*q13*q33+16*n4*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n4*q13^2*q33-4*q12*q13^2*q33+4*n4*q12*q13^2*q33+4*q13^3*q33-4*n4*q13^3*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n4*q12*q23*q33-16*q12^2*q23*q33+16*n4*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n4*q13*q23*q33-8*q12*q13*q23*q33+8*n4*q12*q13*q23*q33+12*q13^2*q23*q33-12*n4*q13^2*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n4*q23^2*q33-4*q12*q23^2*q33+4*n4*q12*q23^2*q33+12*q13*q23^2*q33-12*n4*q13*q23^2*q33+4*q23^3*q33-4*n4*q23^3*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n4*q12*q33^2-8*q12^2*q33^2+8*n4*q12^2*q33^2-8*q12*q13*q33^2+8*n4*q12*q13*q33^2+q13^2*q33^2-n4*q13^2*q33^2-8*q12*q23*q33^2+8*n4*q12*q23*q33^2+2*q13*q23*q33^2-2*n4*q13*q23*q33^2+q23^2*q33^2-n4*q23^2*q33^2-2*q12*q33^3+2*n4*q12*q33^3)+mbox1l(1+n1,-1+n2,1+n3,-1+n4)*prf(-6*M`j'^2*n1*q12*q13^2+4*n1*q12^2*q13^2+4*n1*q12*q13^3-4*M`j'^2*n1*q12*q13*q23+4*n1*q12^2*q13*q23+2*M`j'^2*n1*q13^2*q23+8*n1*q12*q13^2*q23+2*M`j'^2*n1*q12*q23^2+4*M`j'^2*n1*q13*q23^2+4*n1*q12*q13*q23^2+2*M`j'^2*n1*q23^3+4*M`j'^2*n1*q12^2*q33-4*n1*q12^3*q33-4*M`j'^2*n1*q12*q13*q33-2*n1*q12^2*q13*q33+4*n1*q12*q13^2*q33-6*n1*q12^2*q23*q33+2*n1*q12*q13*q23*q33-2*n1*q12*q23^2*q33-2*n1*q12^2*q33^2+n1*q12*q13*q33^2-n1*q12*q23*q33^2,-8*M`j'^2*q12*q13^2+8*M`j'^2*n4*q12*q13^2+4*q12^2*q13^2-4*n4*q12^2*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n4*q13^3+8*q12*q13^3-8*n4*q12*q13^3+4*q13^4-4*n4*q13^4-16*M`j'^2*q12*q13*q23+16*M`j'^2*n4*q12*q13*q23+8*q12^2*q13*q23-8*n4*q12^2*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n4*q13^2*q23+24*q12*q13^2*q23-24*n4*q12*q13^2*q23+16*q13^3*q23-16*n4*q13^3*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n4*q12*q23^2+4*q12^2*q23^2-4*n4*q12^2*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n4*q13*q23^2+24*q12*q13*q23^2-24*n4*q12*q13*q23^2+24*q13^2*q23^2-24*n4*q13^2*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n4*q23^3+8*q12*q23^3-8*n4*q12*q23^3+16*q13*q23^3-16*n4*q13*q23^3+4*q23^4-4*n4*q23^4+16*M`j'^2*q12^2*q33-16*M`j'^2*n4*q12^2*q33-8*q12^3*q33+8*n4*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n4*q12*q13*q33-16*q12^2*q13*q33+16*n4*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n4*q13^2*q33-4*q12*q13^2*q33+4*n4*q12*q13^2*q33+4*q13^3*q33-4*n4*q13^3*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n4*q12*q23*q33-16*q12^2*q23*q33+16*n4*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n4*q13*q23*q33-8*q12*q13*q23*q33+8*n4*q12*q13*q23*q33+12*q13^2*q23*q33-12*n4*q13^2*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n4*q23^2*q33-4*q12*q23^2*q33+4*n4*q12*q23^2*q33+12*q13*q23^2*q33-12*n4*q13*q23^2*q33+4*q23^3*q33-4*n4*q23^3*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n4*q12*q33^2-8*q12^2*q33^2+8*n4*q12^2*q33^2-8*q12*q13*q33^2+8*n4*q12*q13*q33^2+q13^2*q33^2-n4*q13^2*q33^2-8*q12*q23*q33^2+8*n4*q12*q23*q33^2+2*q13*q23*q33^2-2*n4*q13*q23*q33^2+q23^2*q33^2-n4*q23^2*q33^2-2*q12*q33^3+2*n4*q12*q33^3)+mbox1l(n1,n2,1+n3,-1+n4)*(tmpprf(ep,1)*prf(4*q12^2*q13^2+4*q12*q13^3+8*q12^2*q13*q23+16*q12*q13^2*q23+4*q13^3*q23+4*q12^2*q23^2+20*q12*q13*q23^2+12*q13^2*q23^2+8*q12*q23^3+12*q13*q23^3+4*q23^4-8*q12^3*q33-8*q12^2*q13*q33+2*q12*q13^2*q33-16*q12^2*q23*q33-4*q12*q13*q23*q33+2*q13^2*q23*q33-6*q12*q23^2*q33+4*q13*q23^2*q33+2*q23^3*q33-4*q12^2*q33^2-4*q12*q23*q33^2,-8*M`j'^2*q12*q13^2+8*M`j'^2*n4*q12*q13^2+4*q12^2*q13^2-4*n4*q12^2*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n4*q13^3+8*q12*q13^3-8*n4*q12*q13^3+4*q13^4-4*n4*q13^4-16*M`j'^2*q12*q13*q23+16*M`j'^2*n4*q12*q13*q23+8*q12^2*q13*q23-8*n4*q12^2*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n4*q13^2*q23+24*q12*q13^2*q23-24*n4*q12*q13^2*q23+16*q13^3*q23-16*n4*q13^3*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n4*q12*q23^2+4*q12^2*q23^2-4*n4*q12^2*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n4*q13*q23^2+24*q12*q13*q23^2-24*n4*q12*q13*q23^2+24*q13^2*q23^2-24*n4*q13^2*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n4*q23^3+8*q12*q23^3-8*n4*q12*q23^3+16*q13*q23^3-16*n4*q13*q23^3+4*q23^4-4*n4*q23^4+16*M`j'^2*q12^2*q33-16*M`j'^2*n4*q12^2*q33-8*q12^3*q33+8*n4*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n4*q12*q13*q33-16*q12^2*q13*q33+16*n4*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n4*q13^2*q33-4*q12*q13^2*q33+4*n4*q12*q13^2*q33+4*q13^3*q33-4*n4*q13^3*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n4*q12*q23*q33-16*q12^2*q23*q33+16*n4*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n4*q13*q23*q33-8*q12*q13*q23*q33+8*n4*q12*q13*q23*q33+12*q13^2*q23*q33-12*n4*q13^2*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n4*q23^2*q33-4*q12*q23^2*q33+4*n4*q12*q23^2*q33+12*q13*q23^2*q33-12*n4*q13*q23^2*q33+4*q23^3*q33-4*n4*q23^3*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n4*q12*q33^2-8*q12^2*q33^2+8*n4*q12^2*q33^2-8*q12*q13*q33^2+8*n4*q12*q13*q33^2+q13^2*q33^2-n4*q13^2*q33^2-8*q12*q23*q33^2+8*n4*q12*q23*q33^2+2*q13*q23*q33^2-2*n4*q13*q23*q33^2+q23^2*q33^2-n4*q23^2*q33^2-2*q12*q33^3+2*n4*q12*q33^3)+prf(-8*M`j'^2*q12^2*q13+8*M`j'^2*n1*q12^2*q13-8*M`j'^2*n3*q12^2*q13+4*q12^3*q13-4*n1*q12^3*q13+4*n3*q12^3*q13-14*M`j'^2*q12*q13^2+4*M`j'^2*n1*q12*q13^2-2*M`j'^2*n2*q12*q13^2-8*M`j'^2*n3*q12*q13^2+6*M`j'^2*n4*q12*q13^2+2*q12^2*q13^2-4*n1*q12^2*q13^2+4*n2*q12^2*q13^2+10*n3*q12^2*q13^2-2*q12*q13^3+4*n2*q12*q13^3+6*n3*q12*q13^3+8*M`j'^2*q12^2*q23-8*M`j'^2*n1*q12^2*q23+8*M`j'^2*n3*q12^2*q23-4*q12^3*q23+4*n1*q12^3*q23-4*n3*q12^3*q23-12*M`j'^2*q12*q13*q23-8*M`j'^2*n1*q12*q13*q23-4*M`j'^2*n2*q12*q13*q23+12*M`j'^2*n4*q12*q13*q23-12*q12^2*q13*q23+8*n1*q12^2*q13*q23+8*n2*q12^2*q13*q23+4*n3*q12^2*q13*q23-6*M`j'^2*q13^2*q23-4*M`j'^2*n1*q13^2*q23-2*M`j'^2*n2*q13^2*q23+6*M`j'^2*n4*q13^2*q23-20*q12*q13^2*q23+12*n1*q12*q13^2*q23+16*n2*q12*q13^2*q23+12*n3*q12*q13^2*q23-6*q13^3*q23+4*n1*q13^3*q23+4*n2*q13^3*q23+2*n3*q13^3*q23+2*M`j'^2*q12*q23^2-12*M`j'^2*n1*q12*q23^2-2*M`j'^2*n2*q12*q23^2+8*M`j'^2*n3*q12*q23^2+6*M`j'^2*n4*q12*q23^2-14*q12^2*q23^2+12*n1*q12^2*q23^2+4*n2*q12^2*q23^2-6*n3*q12^2*q23^2-12*M`j'^2*q13*q23^2-8*M`j'^2*n1*q13*q23^2-4*M`j'^2*n2*q13*q23^2+12*M`j'^2*n4*q13*q23^2-34*q12*q13*q23^2+24*n1*q12*q13*q23^2+20*n2*q12*q13*q23^2+6*n3*q12*q13*q23^2-18*q13^2*q23^2+12*n1*q13^2*q23^2+12*n2*q13^2*q23^2+6*n3*q13^2*q23^2-6*M`j'^2*q23^3-4*M`j'^2*n1*q23^3-2*M`j'^2*n2*q23^3+6*M`j'^2*n4*q23^3-16*q12*q23^3+12*n1*q12*q23^3+8*n2*q12*q23^3-18*q13*q23^3+12*n1*q13*q23^3+12*n2*q13*q23^3+6*n3*q13*q23^3-6*q23^4+4*n1*q23^4+4*n2*q23^4+2*n3*q23^4+12*M`j'^2*q12^2*q33+8*M`j'^2*n1*q12^2*q33+4*M`j'^2*n2*q12^2*q33-12*M`j'^2*n4*q12^2*q33+12*q12^3*q33-8*n1*q12^3*q33-8*n2*q12^3*q33-4*n3*q12^3*q33-4*M`j'^2*q12*q13*q33+4*M`j'^2*n1*q12*q13*q33-4*M`j'^2*n3*q12*q13*q33+16*q12^2*q13*q33-12*n1*q12^2*q13*q33-8*n2*q12^2*q13*q33+q12*q13^2*q33-2*n1*q12*q13^2*q33+2*n2*q12*q13^2*q33+5*n3*q12*q13^2*q33+16*M`j'^2*q12*q23*q33+4*M`j'^2*n1*q12*q23*q33+4*M`j'^2*n2*q12*q23*q33+4*M`j'^2*n3*q12*q23*q33-12*M`j'^2*n4*q12*q23*q33+20*q12^2*q23*q33-12*n1*q12^2*q23*q33-16*n2*q12^2*q23*q33-12*n3*q12^2*q23*q33+6*q12*q13*q23*q33-4*n1*q12*q13*q23*q33-4*n2*q12*q13*q23*q33-2*n3*q12*q13*q23*q33-3*q13^2*q23*q33+2*n1*q13^2*q23*q33+2*n2*q13^2*q23*q33+n3*q13^2*q23*q33+5*q12*q23^2*q33-2*n1*q12*q23^2*q33-6*n2*q12*q23^2*q33-7*n3*q12*q23^2*q33-6*q13*q23^2*q33+4*n1*q13*q23^2*q33+4*n2*q13*q23^2*q33+2*n3*q13*q23^2*q33-3*q23^3*q33+2*n1*q23^3*q33+2*n2*q23^3*q33+n3*q23^3*q33+6*q12^2*q33^2-4*n1*q12^2*q33^2-4*n2*q12^2*q33^2-2*n3*q12^2*q33^2+q12*q13*q33^2-n1*q12*q13*q33^2+n3*q12*q13*q33^2+5*q12*q23*q33^2-3*n1*q12*q23*q33^2-4*n2*q12*q23*q33^2-3*n3*q12*q23*q33^2,-8*M`j'^2*q12*q13^2+8*M`j'^2*n4*q12*q13^2+4*q12^2*q13^2-4*n4*q12^2*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n4*q13^3+8*q12*q13^3-8*n4*q12*q13^3+4*q13^4-4*n4*q13^4-16*M`j'^2*q12*q13*q23+16*M`j'^2*n4*q12*q13*q23+8*q12^2*q13*q23-8*n4*q12^2*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n4*q13^2*q23+24*q12*q13^2*q23-24*n4*q12*q13^2*q23+16*q13^3*q23-16*n4*q13^3*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n4*q12*q23^2+4*q12^2*q23^2-4*n4*q12^2*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n4*q13*q23^2+24*q12*q13*q23^2-24*n4*q12*q13*q23^2+24*q13^2*q23^2-24*n4*q13^2*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n4*q23^3+8*q12*q23^3-8*n4*q12*q23^3+16*q13*q23^3-16*n4*q13*q23^3+4*q23^4-4*n4*q23^4+16*M`j'^2*q12^2*q33-16*M`j'^2*n4*q12^2*q33-8*q12^3*q33+8*n4*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n4*q12*q13*q33-16*q12^2*q13*q33+16*n4*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n4*q13^2*q33-4*q12*q13^2*q33+4*n4*q12*q13^2*q33+4*q13^3*q33-4*n4*q13^3*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n4*q12*q23*q33-16*q12^2*q23*q33+16*n4*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n4*q13*q23*q33-8*q12*q13*q23*q33+8*n4*q12*q13*q23*q33+12*q13^2*q23*q33-12*n4*q13^2*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n4*q23^2*q33-4*q12*q23^2*q33+4*n4*q12*q23^2*q33+12*q13*q23^2*q33-12*n4*q13*q23^2*q33+4*q23^3*q33-4*n4*q23^3*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n4*q12*q33^2-8*q12^2*q33^2+8*n4*q12^2*q33^2-8*q12*q13*q33^2+8*n4*q12*q13*q33^2+q13^2*q33^2-n4*q13^2*q33^2-8*q12*q23*q33^2+8*n4*q12*q23*q33^2+2*q13*q23*q33^2-2*n4*q13*q23*q33^2+q23^2*q33^2-n4*q23^2*q33^2-2*q12*q33^3+2*n4*q12*q33^3))+mbox1l(n1,-1+n2,2+n3,-1+n4)*prf(8*M`j'^2*q12^2*q13+8*M`j'^2*n3*q12^2*q13-4*q12^3*q13-4*n3*q12^3*q13+6*M`j'^2*q12*q13^2+6*M`j'^2*n3*q12*q13^2-6*q12^2*q13^2-6*n3*q12^2*q13^2-2*q12*q13^3-2*n3*q12*q13^3-2*q12^2*q13*q23-2*n3*q12^2*q13*q23-2*M`j'^2*q13^2*q23-2*M`j'^2*n3*q13^2*q23+2*q12*q13^2*q23+2*n3*q12*q13^2*q23+2*q13^3*q23+2*n3*q13^3*q23+2*M`j'^2*q12*q23^2+2*M`j'^2*n3*q12*q23^2+4*q12*q13*q23^2+4*n3*q12*q13*q23^2+4*q13^2*q23^2+4*n3*q13^2*q23^2+2*M`j'^2*q23^3+2*M`j'^2*n3*q23^3+2*q13*q23^3+2*n3*q13*q23^3+4*M`j'^2*q12^2*q33+4*M`j'^2*n3*q12^2*q33-4*q12^3*q33-4*n3*q12^3*q33+4*M`j'^2*q12*q13*q33+4*M`j'^2*n3*q12*q13*q33-8*q12^2*q13*q33-8*n3*q12^2*q13*q33-3*q12*q13^2*q33-3*n3*q12*q13^2*q33-6*q12^2*q23*q33-6*n3*q12^2*q23*q33-3*q12*q13*q23*q33-3*n3*q12*q13*q23*q33+q13^2*q23*q33+n3*q13^2*q23*q33-2*q12*q23^2*q33-2*n3*q12*q23^2*q33+q13*q23^2*q33+n3*q13*q23^2*q33-2*q12^2*q33^2-2*n3*q12^2*q33^2-q12*q13*q33^2-n3*q12*q13*q33^2-q12*q23*q33^2-n3*q12*q23*q33^2,-8*M`j'^2*q12*q13^2+8*M`j'^2*n4*q12*q13^2+4*q12^2*q13^2-4*n4*q12^2*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n4*q13^3+8*q12*q13^3-8*n4*q12*q13^3+4*q13^4-4*n4*q13^4-16*M`j'^2*q12*q13*q23+16*M`j'^2*n4*q12*q13*q23+8*q12^2*q13*q23-8*n4*q12^2*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n4*q13^2*q23+24*q12*q13^2*q23-24*n4*q12*q13^2*q23+16*q13^3*q23-16*n4*q13^3*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n4*q12*q23^2+4*q12^2*q23^2-4*n4*q12^2*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n4*q13*q23^2+24*q12*q13*q23^2-24*n4*q12*q13*q23^2+24*q13^2*q23^2-24*n4*q13^2*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n4*q23^3+8*q12*q23^3-8*n4*q12*q23^3+16*q13*q23^3-16*n4*q13*q23^3+4*q23^4-4*n4*q23^4+16*M`j'^2*q12^2*q33-16*M`j'^2*n4*q12^2*q33-8*q12^3*q33+8*n4*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n4*q12*q13*q33-16*q12^2*q13*q33+16*n4*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n4*q13^2*q33-4*q12*q13^2*q33+4*n4*q12*q13^2*q33+4*q13^3*q33-4*n4*q13^3*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n4*q12*q23*q33-16*q12^2*q23*q33+16*n4*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n4*q13*q23*q33-8*q12*q13*q23*q33+8*n4*q12*q13*q23*q33+12*q13^2*q23*q33-12*n4*q13^2*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n4*q23^2*q33-4*q12*q23^2*q33+4*n4*q12*q23^2*q33+12*q13*q23^2*q33-12*n4*q13*q23^2*q33+4*q23^3*q33-4*n4*q23^3*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n4*q12*q33^2-8*q12^2*q33^2+8*n4*q12^2*q33^2-8*q12*q13*q33^2+8*n4*q12*q13*q33^2+q13^2*q33^2-n4*q13^2*q33^2-8*q12*q23*q33^2+8*n4*q12*q23*q33^2+2*q13*q23*q33^2-2*n4*q13*q23*q33^2+q23^2*q33^2-n4*q23^2*q33^2-2*q12*q33^3+2*n4*q12*q33^3)+mbox1l(n1,n2,2+n3,-1+n4)*prf(16*M`j'^2*q12^3*q13+16*M`j'^2*n3*q12^3*q13-8*q12^4*q13-8*n3*q12^4*q13+4*M`j'^2*q12^2*q13^2+4*M`j'^2*n3*q12^2*q13^2-12*q12^3*q13^2-12*n3*q12^3*q13^2-4*q12^2*q13^3-4*n3*q12^2*q13^3+16*M`j'^2*q12^2*q13*q23+16*M`j'^2*n3*q12^2*q13*q23-20*q12^3*q13*q23-20*n3*q12^3*q13*q23-20*q12^2*q13^2*q23-20*n3*q12^2*q13^2*q23-4*q12*q13^3*q23-4*n3*q12*q13^3*q23-4*M`j'^2*q12^2*q23^2-4*M`j'^2*n3*q12^2*q23^2-8*M`j'^2*q12*q13*q23^2-8*M`j'^2*n3*q12*q13*q23^2-16*q12^2*q13*q23^2-16*n3*q12^2*q13*q23^2-4*M`j'^2*q13^2*q23^2-4*M`j'^2*n3*q13^2*q23^2-8*q12*q13^2*q23^2-8*n3*q12*q13^2*q23^2-8*M`j'^2*q12*q23^3-8*M`j'^2*n3*q12*q23^3-8*M`j'^2*q13*q23^3-8*M`j'^2*n3*q13*q23^3-4*q12*q13*q23^3-4*n3*q12*q13*q23^3-4*M`j'^2*q23^4-4*M`j'^2*n3*q23^4+16*M`j'^2*q12^3*q33+16*M`j'^2*n3*q12^3*q33-4*q12^4*q33-4*n3*q12^4*q33+4*M`j'^2*q12^2*q13*q33+4*M`j'^2*n3*q12^2*q13*q33-10*q12^3*q13*q33-10*n3*q12^3*q13*q33-4*q12^2*q13^2*q33-4*n3*q12^2*q13^2*q33+28*M`j'^2*q12^2*q23*q33+28*M`j'^2*n3*q12^2*q23*q33-10*q12^3*q23*q33-10*n3*q12^3*q23*q33+4*M`j'^2*q12*q13*q23*q33+4*M`j'^2*n3*q12*q13*q23*q33-16*q12^2*q13*q23*q33-16*n3*q12^2*q13*q23*q33-4*q12*q13^2*q23*q33-4*n3*q12*q13^2*q23*q33+12*M`j'^2*q12*q23^2*q33+12*M`j'^2*n3*q12*q23^2*q33-8*q12^2*q23^2*q33-8*n3*q12^2*q23^2*q33-6*q12*q13*q23^2*q33-6*n3*q12*q13*q23^2*q33-2*q12*q23^3*q33-2*n3*q12*q23^3*q33-2*q12^3*q33^2-2*n3*q12^3*q33^2-q12^2*q13*q33^2-n3*q12^2*q13*q33^2-3*q12^2*q23*q33^2-3*n3*q12^2*q23*q33^2-q12*q13*q23*q33^2-n3*q12*q13*q23*q33^2-q12*q23^2*q33^2-n3*q12*q23^2*q33^2,-8*M`j'^2*q12*q13^2+8*M`j'^2*n4*q12*q13^2+4*q12^2*q13^2-4*n4*q12^2*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n4*q13^3+8*q12*q13^3-8*n4*q12*q13^3+4*q13^4-4*n4*q13^4-16*M`j'^2*q12*q13*q23+16*M`j'^2*n4*q12*q13*q23+8*q12^2*q13*q23-8*n4*q12^2*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n4*q13^2*q23+24*q12*q13^2*q23-24*n4*q12*q13^2*q23+16*q13^3*q23-16*n4*q13^3*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n4*q12*q23^2+4*q12^2*q23^2-4*n4*q12^2*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n4*q13*q23^2+24*q12*q13*q23^2-24*n4*q12*q13*q23^2+24*q13^2*q23^2-24*n4*q13^2*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n4*q23^3+8*q12*q23^3-8*n4*q12*q23^3+16*q13*q23^3-16*n4*q13*q23^3+4*q23^4-4*n4*q23^4+16*M`j'^2*q12^2*q33-16*M`j'^2*n4*q12^2*q33-8*q12^3*q33+8*n4*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n4*q12*q13*q33-16*q12^2*q13*q33+16*n4*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n4*q13^2*q33-4*q12*q13^2*q33+4*n4*q12*q13^2*q33+4*q13^3*q33-4*n4*q13^3*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n4*q12*q23*q33-16*q12^2*q23*q33+16*n4*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n4*q13*q23*q33-8*q12*q13*q23*q33+8*n4*q12*q13*q23*q33+12*q13^2*q23*q33-12*n4*q13^2*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n4*q23^2*q33-4*q12*q23^2*q33+4*n4*q12*q23^2*q33+12*q13*q23^2*q33-12*n4*q13*q23^2*q33+4*q23^3*q33-4*n4*q23^3*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n4*q12*q33^2-8*q12^2*q33^2+8*n4*q12^2*q33^2-8*q12*q13*q33^2+8*n4*q12*q13*q33^2+q13^2*q33^2-n4*q13^2*q33^2-8*q12*q23*q33^2+8*n4*q12*q23*q33^2+2*q13*q23*q33^2-2*n4*q13*q23*q33^2+q23^2*q33^2-n4*q23^2*q33^2-2*q12*q33^3+2*n4*q12*q33^3)+mbox1l(1+n1,n2,1+n3,-1+n4)*prf(-16*M`j'^2*n1*q12^2*q13^2+8*n1*q12^3*q13^2-4*M`j'^2*n1*q12*q13^3+8*n1*q12^2*q13^3-16*M`j'^2*n1*q12^2*q13*q23+8*n1*q12^3*q13*q23-12*M`j'^2*n1*q12*q13^2*q23+16*n1*q12^2*q13^2*q23-4*M`j'^2*n1*q13^3*q23-12*M`j'^2*n1*q12*q13*q23^2+8*n1*q12^2*q13*q23^2-12*M`j'^2*n1*q13^2*q23^2-4*M`j'^2*n1*q12*q23^3-12*M`j'^2*n1*q13*q23^3-4*M`j'^2*n1*q23^4+16*M`j'^2*n1*q12^3*q33-8*n1*q12^4*q33-8*M`j'^2*n1*q12^2*q13*q33+12*n1*q12^2*q13^2*q33+24*M`j'^2*n1*q12^2*q23*q33-16*n1*q12^3*q23*q33+16*M`j'^2*n1*q12*q13*q23*q33-4*n1*q12*q13^2*q23*q33+16*M`j'^2*n1*q12*q23^2*q33-12*n1*q12^2*q23^2*q33-8*n1*q12*q13*q23^2*q33-4*n1*q12*q23^3*q33-8*M`j'^2*n1*q12^2*q33^2+8*n1*q12^2*q13*q33^2-2*n1*q12*q13*q23*q33^2-2*n1*q12*q23^2*q33^2+2*n1*q12^2*q33^3,-8*M`j'^2*q12*q13^2+8*M`j'^2*n4*q12*q13^2+4*q12^2*q13^2-4*n4*q12^2*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n4*q13^3+8*q12*q13^3-8*n4*q12*q13^3+4*q13^4-4*n4*q13^4-16*M`j'^2*q12*q13*q23+16*M`j'^2*n4*q12*q13*q23+8*q12^2*q13*q23-8*n4*q12^2*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n4*q13^2*q23+24*q12*q13^2*q23-24*n4*q12*q13^2*q23+16*q13^3*q23-16*n4*q13^3*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n4*q12*q23^2+4*q12^2*q23^2-4*n4*q12^2*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n4*q13*q23^2+24*q12*q13*q23^2-24*n4*q12*q13*q23^2+24*q13^2*q23^2-24*n4*q13^2*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n4*q23^3+8*q12*q23^3-8*n4*q12*q23^3+16*q13*q23^3-16*n4*q13*q23^3+4*q23^4-4*n4*q23^4+16*M`j'^2*q12^2*q33-16*M`j'^2*n4*q12^2*q33-8*q12^3*q33+8*n4*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n4*q12*q13*q33-16*q12^2*q13*q33+16*n4*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n4*q13^2*q33-4*q12*q13^2*q33+4*n4*q12*q13^2*q33+4*q13^3*q33-4*n4*q13^3*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n4*q12*q23*q33-16*q12^2*q23*q33+16*n4*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n4*q13*q23*q33-8*q12*q13*q23*q33+8*n4*q12*q13*q23*q33+12*q13^2*q23*q33-12*n4*q13^2*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n4*q23^2*q33-4*q12*q23^2*q33+4*n4*q12*q23^2*q33+12*q13*q23^2*q33-12*n4*q13*q23^2*q33+4*q23^3*q33-4*n4*q23^3*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n4*q12*q33^2-8*q12^2*q33^2+8*n4*q12^2*q33^2-8*q12*q13*q33^2+8*n4*q12*q13*q33^2+q13^2*q33^2-n4*q13^2*q33^2-8*q12*q23*q33^2+8*n4*q12*q23*q33^2+2*q13*q23*q33^2-2*n4*q13*q23*q33^2+q23^2*q33^2-n4*q23^2*q33^2-2*q12*q33^3+2*n4*q12*q33^3);
	Identify,ifmatch->jump mbox1l(n1?neg_,n2?pos_,n3?neg0_,n4?{,>1}) = mbox1l(2+n1,-1+n2,n3,-1+n4)*prf(2*M`j'^2*q13+2*M`j'^2*n1*q13+2*M`j'^2*q23+2*M`j'^2*n1*q23,-8*M`j'^2*q12+8*M`j'^2*n4*q12+4*q12^2-4*n4*q12^2-8*M`j'^2*q13+8*M`j'^2*n4*q13+8*q12*q13-8*n4*q12*q13+4*q13^2-4*n4*q13^2-8*M`j'^2*q23+8*M`j'^2*n4*q23+8*q12*q23-8*n4*q12*q23+8*q13*q23-8*n4*q13*q23+4*q23^2-4*n4*q23^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q12*q33-4*n4*q12*q33+4*q13*q33-4*n4*q13*q33+4*q23*q33-4*n4*q23*q33+q33^2-n4*q33^2)+mbox1l(1+n1,1+n2,n3,-2+n4)*prf(2*M`j'^2*n2*q13+2*M`j'^2*n2*q23,-8*M`j'^2*q12+8*M`j'^2*n4*q12+4*q12^2-4*n4*q12^2-8*M`j'^2*q13+8*M`j'^2*n4*q13+8*q12*q13-8*n4*q12*q13+4*q13^2-4*n4*q13^2-8*M`j'^2*q23+8*M`j'^2*n4*q23+8*q12*q23-8*n4*q12*q23+8*q13*q23-8*n4*q13*q23+4*q23^2-4*n4*q23^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q12*q33-4*n4*q12*q33+4*q13*q33-4*n4*q13*q33+4*q23*q33-4*n4*q23*q33+q33^2-n4*q33^2)+mbox1l(n1,n2,1+n3,-1+n4)*prf(-(n3*q12)-n3*q23,-2*q12+2*n4*q12-2*q13+2*n4*q13-2*q23+2*n4*q23-q33+n4*q33)+mbox1l(2+n1,n2,n3,-2+n4)*prf(-8*M`j'^2*q12-8*M`j'^2*n1*q12+4*q12^2+4*n1*q12^2-2*M`j'^2*q13-2*M`j'^2*n1*q13+4*q12*q13+4*n1*q12*q13-2*M`j'^2*q23-2*M`j'^2*n1*q23+4*q12*q23+4*n1*q12*q23+2*q12*q33+2*n1*q12*q33,8*M`j'^2*q12-8*M`j'^2*n4*q12-4*q12^2+4*n4*q12^2+8*M`j'^2*q13-8*M`j'^2*n4*q13-8*q12*q13+8*n4*q12*q13-4*q13^2+4*n4*q13^2+8*M`j'^2*q23-8*M`j'^2*n4*q23-8*q12*q23+8*n4*q12*q23-8*q13*q23+8*n4*q13*q23-4*q23^2+4*n4*q23^2+4*M`j'^2*q33-4*M`j'^2*n4*q33-4*q12*q33+4*n4*q12*q33-4*q13*q33+4*n4*q13*q33-4*q23*q33+4*n4*q23*q33-q33^2+n4*q33^2)+mbox1l(1+n1,n2,1+n3,-2+n4)*prf(-4*M`j'^2*n3*q12+2*n3*q12^2-2*M`j'^2*n3*q13+2*n3*q12*q13-2*M`j'^2*n3*q23+2*n3*q12*q23+n3*q12*q33,8*M`j'^2*q12-8*M`j'^2*n4*q12-4*q12^2+4*n4*q12^2+8*M`j'^2*q13-8*M`j'^2*n4*q13-8*q12*q13+8*n4*q12*q13-4*q13^2+4*n4*q13^2+8*M`j'^2*q23-8*M`j'^2*n4*q23-8*q12*q23+8*n4*q12*q23-8*q13*q23+8*n4*q13*q23-4*q23^2+4*n4*q23^2+4*M`j'^2*q33-4*M`j'^2*n4*q33-4*q12*q33+4*n4*q12*q33-4*q13*q33+4*n4*q13*q33-4*q23*q33+4*n4*q23*q33-q33^2+n4*q33^2)+mbox1l(1+n1,-1+n2,1+n3,-1+n4)*prf(2*M`j'^2*n3*q13-2*n3*q12*q13-2*n3*q13^2-2*M`j'^2*n3*q23-2*n3*q13*q23-n3*q13*q33,8*M`j'^2*q12-8*M`j'^2*n4*q12-4*q12^2+4*n4*q12^2+8*M`j'^2*q13-8*M`j'^2*n4*q13-8*q12*q13+8*n4*q12*q13-4*q13^2+4*n4*q13^2+8*M`j'^2*q23-8*M`j'^2*n4*q23-8*q12*q23+8*n4*q12*q23-8*q13*q23+8*n4*q13*q23-4*q23^2+4*n4*q23^2+4*M`j'^2*q33-4*M`j'^2*n4*q33-4*q12*q33+4*n4*q12*q33-4*q13*q33+4*n4*q13*q33-4*q23*q33+4*n4*q23*q33-q33^2+n4*q33^2)+mbox1l(1+n1,n2,n3,-1+n4)*(tmpprf(ep,1)*prf(-4*q12*q13-4*q13^2-4*q12*q23-8*q13*q23-4*q23^2-2*q13*q33-2*q23*q33,8*M`j'^2*q12-8*M`j'^2*n4*q12-4*q12^2+4*n4*q12^2+8*M`j'^2*q13-8*M`j'^2*n4*q13-8*q12*q13+8*n4*q12*q13-4*q13^2+4*n4*q13^2+8*M`j'^2*q23-8*M`j'^2*n4*q23-8*q12*q23+8*n4*q12*q23-8*q13*q23+8*n4*q13*q23-4*q23^2+4*n4*q23^2+4*M`j'^2*q33-4*M`j'^2*n4*q33-4*q12*q33+4*n4*q12*q33-4*q13*q33+4*n4*q13*q33-4*q23*q33+4*n4*q23*q33-q33^2+n4*q33^2)+prf(16*M`j'^2*q12+8*M`j'^2*n1*q12-8*M`j'^2*n4*q12-8*q12^2-4*n1*q12^2+4*n4*q12^2+10*M`j'^2*q13+4*M`j'^2*n1*q13+2*M`j'^2*n2*q13-6*M`j'^2*n4*q13-4*q12*q13-8*n1*q12*q13-4*n2*q12*q13-2*n3*q12*q13+4*n4*q12*q13+4*q13^2-4*n1*q13^2-4*n2*q13^2-2*n3*q13^2+10*M`j'^2*q23+4*M`j'^2*n1*q23+2*M`j'^2*n2*q23-6*M`j'^2*n4*q23-4*q12*q23-8*n1*q12*q23-4*n2*q12*q23-2*n3*q12*q23+4*n4*q12*q23+8*q13*q23-8*n1*q13*q23-8*n2*q13*q23-4*n3*q13*q23+4*q23^2-4*n1*q23^2-4*n2*q23^2-2*n3*q23^2-4*q12*q33-2*n1*q12*q33+2*n4*q12*q33+2*q13*q33-2*n1*q13*q33-2*n2*q13*q33-n3*q13*q33+2*q23*q33-2*n1*q23*q33-2*n2*q23*q33-n3*q23*q33,8*M`j'^2*q12-8*M`j'^2*n4*q12-4*q12^2+4*n4*q12^2+8*M`j'^2*q13-8*M`j'^2*n4*q13-8*q12*q13+8*n4*q12*q13-4*q13^2+4*n4*q13^2+8*M`j'^2*q23-8*M`j'^2*n4*q23-8*q12*q23+8*n4*q12*q23-8*q13*q23+8*n4*q13*q23-4*q23^2+4*n4*q23^2+4*M`j'^2*q33-4*M`j'^2*n4*q33-4*q12*q33+4*n4*q12*q33-4*q13*q33+4*n4*q13*q33-4*q23*q33+4*n4*q23*q33-q33^2+n4*q33^2))+mbox1l(1+n1,-1+n2,n3,n4)*prf(-2*M`j'^2*q13-2*M`j'^2*q23-4*M`j'^2*q33+2*q12*q33+2*q13*q33+2*q23*q33+q33^2,-8*M`j'^2*q12+4*q12^2-8*M`j'^2*q13+8*q12*q13+4*q13^2-8*M`j'^2*q23+8*q12*q23+8*q13*q23+4*q23^2-4*M`j'^2*q33+4*q12*q33+4*q13*q33+4*q23*q33+q33^2)+mbox1l(2+n1,n2,n3,-1+n4)*prf(4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2+8*M`j'^2*q13*q23+8*M`j'^2*n1*q13*q23+4*M`j'^2*q23^2+4*M`j'^2*n1*q23^2-8*M`j'^2*q12*q33-8*M`j'^2*n1*q12*q33+4*q12^2*q33+4*n1*q12^2*q33+4*q12*q13*q33+4*n1*q12*q13*q33+4*q12*q23*q33+4*n1*q12*q23*q33+2*q12*q33^2+2*n1*q12*q33^2,8*M`j'^2*q12-8*M`j'^2*n4*q12-4*q12^2+4*n4*q12^2+8*M`j'^2*q13-8*M`j'^2*n4*q13-8*q12*q13+8*n4*q12*q13-4*q13^2+4*n4*q13^2+8*M`j'^2*q23-8*M`j'^2*n4*q23-8*q12*q23+8*n4*q12*q23-8*q13*q23+8*n4*q13*q23-4*q23^2+4*n4*q23^2+4*M`j'^2*q33-4*M`j'^2*n4*q33-4*q12*q33+4*n4*q12*q33-4*q13*q33+4*n4*q13*q33-4*q23*q33+4*n4*q23*q33-q33^2+n4*q33^2)+mbox1l(1+n1,n2,1+n3,-1+n4)*prf(-4*M`j'^2*n3*q12*q13+4*n3*q12^2*q13+4*n3*q12*q13^2+4*M`j'^2*n3*q12*q23+4*M`j'^2*n3*q13*q23+4*n3*q12*q13*q23+4*M`j'^2*n3*q23^2-4*M`j'^2*n3*q12*q33+2*n3*q12^2*q33+4*n3*q12*q13*q33+2*n3*q12*q23*q33+n3*q12*q33^2,8*M`j'^2*q12-8*M`j'^2*n4*q12-4*q12^2+4*n4*q12^2+8*M`j'^2*q13-8*M`j'^2*n4*q13-8*q12*q13+8*n4*q12*q13-4*q13^2+4*n4*q13^2+8*M`j'^2*q23-8*M`j'^2*n4*q23-8*q12*q23+8*n4*q12*q23-8*q13*q23+8*n4*q13*q23-4*q23^2+4*n4*q23^2+4*M`j'^2*q33-4*M`j'^2*n4*q33-4*q12*q33+4*n4*q12*q33-4*q13*q33+4*n4*q13*q33-4*q23*q33+4*n4*q23*q33-q33^2+n4*q33^2);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?{,>1},n3?neg_,n4?pos_) = mbox1l(n1,n2,1+n3,-1+n4)*prf(2*M`j'^2*q12+2*M`j'^2*q23,8*M`j'^2*q12-4*q12^2+8*M`j'^2*q13-8*q12*q13-4*q13^2+8*M`j'^2*q23-8*q12*q23-8*q13*q23-4*q23^2+4*M`j'^2*q33-4*q12*q33-4*q13*q33-4*q23*q33-q33^2)+mbox1l(n1,-2+n2,1+n3,1+n4)*prf(2*M`j'^2*n4*q12+2*M`j'^2*n4*q23,-8*M`j'^2*q12+8*M`j'^2*n2*q12+4*q12^2-4*n2*q12^2-8*M`j'^2*q13+8*M`j'^2*n2*q13+8*q12*q13-8*n2*q12*q13+4*q13^2-4*n2*q13^2-8*M`j'^2*q23+8*M`j'^2*n2*q23+8*q12*q23-8*n2*q12*q23+8*q13*q23-8*n2*q13*q23+4*q23^2-4*n2*q23^2-4*M`j'^2*q33+4*M`j'^2*n2*q33+4*q12*q33-4*n2*q12*q33+4*q13*q33-4*n2*q13*q33+4*q23*q33-4*n2*q23*q33+q33^2-n2*q33^2)+mbox1l(-1+n1,-1+n2,2+n3,n4)*prf(q12^2*q13+n3*q12^2*q13+q12^2*q23+n3*q12^2*q23+2*q12*q13*q23+2*n3*q12*q13*q23+2*q12*q23^2+2*n3*q12*q23^2+q13*q23^2+n3*q13*q23^2+q23^3+n3*q23^3+q12^2*q33+n3*q12^2*q33+2*q12*q23*q33+2*n3*q12*q23*q33+q23^2*q33+n3*q23^2*q33,2*q12*q13^2-2*n2*q12*q13^2+2*q13^3-2*n2*q13^3+4*q12*q13*q23-4*n2*q12*q13*q23+6*q13^2*q23-6*n2*q13^2*q23+2*q12*q23^2-2*n2*q12*q23^2+6*q13*q23^2-6*n2*q13*q23^2+2*q23^3-2*n2*q23^3-4*q12^2*q33+4*n2*q12^2*q33-4*q12*q13*q33+4*n2*q12*q13*q33+q13^2*q33-n2*q13^2*q33-4*q12*q23*q33+4*n2*q12*q23*q33+2*q13*q23*q33-2*n2*q13*q23*q33+q23^2*q33-n2*q23^2*q33-2*q12*q33^2+2*n2*q12*q33^2)+mbox1l(1+n1,-1+n2,1+n3,-1+n4)*prf(-6*M`j'^2*n1*q12*q13^2+4*n1*q12^2*q13^2+4*n1*q12*q13^3-4*M`j'^2*n1*q12*q13*q23+4*n1*q12^2*q13*q23+2*M`j'^2*n1*q13^2*q23+8*n1*q12*q13^2*q23+2*M`j'^2*n1*q12*q23^2+4*M`j'^2*n1*q13*q23^2+4*n1*q12*q13*q23^2+2*M`j'^2*n1*q23^3+4*M`j'^2*n1*q12^2*q33-4*n1*q12^3*q33-4*M`j'^2*n1*q12*q13*q33-2*n1*q12^2*q13*q33+4*n1*q12*q13^2*q33-6*n1*q12^2*q23*q33+2*n1*q12*q13*q23*q33-2*n1*q12*q23^2*q33-2*n1*q12^2*q33^2+n1*q12*q13*q33^2-n1*q12*q23*q33^2,-8*M`j'^2*q12*q13^2+8*M`j'^2*n2*q12*q13^2+4*q12^2*q13^2-4*n2*q12^2*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n2*q13^3+8*q12*q13^3-8*n2*q12*q13^3+4*q13^4-4*n2*q13^4-16*M`j'^2*q12*q13*q23+16*M`j'^2*n2*q12*q13*q23+8*q12^2*q13*q23-8*n2*q12^2*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n2*q13^2*q23+24*q12*q13^2*q23-24*n2*q12*q13^2*q23+16*q13^3*q23-16*n2*q13^3*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n2*q12*q23^2+4*q12^2*q23^2-4*n2*q12^2*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n2*q13*q23^2+24*q12*q13*q23^2-24*n2*q12*q13*q23^2+24*q13^2*q23^2-24*n2*q13^2*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n2*q23^3+8*q12*q23^3-8*n2*q12*q23^3+16*q13*q23^3-16*n2*q13*q23^3+4*q23^4-4*n2*q23^4+16*M`j'^2*q12^2*q33-16*M`j'^2*n2*q12^2*q33-8*q12^3*q33+8*n2*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n2*q12*q13*q33-16*q12^2*q13*q33+16*n2*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n2*q13^2*q33-4*q12*q13^2*q33+4*n2*q12*q13^2*q33+4*q13^3*q33-4*n2*q13^3*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n2*q12*q23*q33-16*q12^2*q23*q33+16*n2*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n2*q13*q23*q33-8*q12*q13*q23*q33+8*n2*q12*q13*q23*q33+12*q13^2*q23*q33-12*n2*q13^2*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n2*q23^2*q33-4*q12*q23^2*q33+4*n2*q12*q23^2*q33+12*q13*q23^2*q33-12*n2*q13*q23^2*q33+4*q23^3*q33-4*n2*q23^3*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n2*q12*q33^2-8*q12^2*q33^2+8*n2*q12^2*q33^2-8*q12*q13*q33^2+8*n2*q12*q13*q33^2+q13^2*q33^2-n2*q13^2*q33^2-8*q12*q23*q33^2+8*n2*q12*q23*q33^2+2*q13*q23*q33^2-2*n2*q13*q23*q33^2+q23^2*q33^2-n2*q23^2*q33^2-2*q12*q33^3+2*n2*q12*q33^3)+mbox1l(n1,-1+n2,2+n3,-1+n4)*prf(4*M`j'^2*q12^2*q13+4*M`j'^2*n3*q12^2*q13-2*q12^3*q13-2*n3*q12^3*q13+2*M`j'^2*q12*q13^2+2*M`j'^2*n3*q12*q13^2-2*q12^2*q13^2-2*n3*q12^2*q13^2+4*M`j'^2*q12^2*q23+4*M`j'^2*n3*q12^2*q23-2*q12^3*q23-2*n3*q12^3*q23+8*M`j'^2*q12*q13*q23+8*M`j'^2*n3*q12*q13*q23-6*q12^2*q13*q23-6*n3*q12^2*q13*q23+2*M`j'^2*q13^2*q23+2*M`j'^2*n3*q13^2*q23-2*q12*q13^2*q23-2*n3*q12*q13^2*q23+6*M`j'^2*q12*q23^2+6*M`j'^2*n3*q12*q23^2-4*q12^2*q23^2-4*n3*q12^2*q23^2+4*M`j'^2*q13*q23^2+4*M`j'^2*n3*q13*q23^2-4*q12*q13*q23^2-4*n3*q12*q13*q23^2+2*M`j'^2*q23^3+2*M`j'^2*n3*q23^3-2*q12*q23^3-2*n3*q12*q23^3-2*q12^3*q33-2*n3*q12^3*q33-3*q12^2*q13*q33-3*n3*q12^2*q13*q33-5*q12^2*q23*q33-5*n3*q12^2*q23*q33-3*q12*q13*q23*q33-3*n3*q12*q13*q23*q33-3*q12*q23^2*q33-3*n3*q12*q23^2*q33-q12^2*q33^2-n3*q12^2*q33^2-q12*q23*q33^2-n3*q12*q23*q33^2,-8*M`j'^2*q12*q13^2+8*M`j'^2*n2*q12*q13^2+4*q12^2*q13^2-4*n2*q12^2*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n2*q13^3+8*q12*q13^3-8*n2*q12*q13^3+4*q13^4-4*n2*q13^4-16*M`j'^2*q12*q13*q23+16*M`j'^2*n2*q12*q13*q23+8*q12^2*q13*q23-8*n2*q12^2*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n2*q13^2*q23+24*q12*q13^2*q23-24*n2*q12*q13^2*q23+16*q13^3*q23-16*n2*q13^3*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n2*q12*q23^2+4*q12^2*q23^2-4*n2*q12^2*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n2*q13*q23^2+24*q12*q13*q23^2-24*n2*q12*q13*q23^2+24*q13^2*q23^2-24*n2*q13^2*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n2*q23^3+8*q12*q23^3-8*n2*q12*q23^3+16*q13*q23^3-16*n2*q13*q23^3+4*q23^4-4*n2*q23^4+16*M`j'^2*q12^2*q33-16*M`j'^2*n2*q12^2*q33-8*q12^3*q33+8*n2*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n2*q12*q13*q33-16*q12^2*q13*q33+16*n2*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n2*q13^2*q33-4*q12*q13^2*q33+4*n2*q12*q13^2*q33+4*q13^3*q33-4*n2*q13^3*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n2*q12*q23*q33-16*q12^2*q23*q33+16*n2*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n2*q13*q23*q33-8*q12*q13*q23*q33+8*n2*q12*q13*q23*q33+12*q13^2*q23*q33-12*n2*q13^2*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n2*q23^2*q33-4*q12*q23^2*q33+4*n2*q12*q23^2*q33+12*q13*q23^2*q33-12*n2*q13*q23^2*q33+4*q23^3*q33-4*n2*q23^3*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n2*q12*q33^2-8*q12^2*q33^2+8*n2*q12^2*q33^2-8*q12*q13*q33^2+8*n2*q12*q13*q33^2+q13^2*q33^2-n2*q13^2*q33^2-8*q12*q23*q33^2+8*n2*q12*q23*q33^2+2*q13*q23*q33^2-2*n2*q13*q23*q33^2+q23^2*q33^2-n2*q23^2*q33^2-2*q12*q33^3+2*n2*q12*q33^3)+mbox1l(1+n1,-2+n2,1+n3,n4)*prf(2*M`j'^2*n1*q12*q13^2+4*M`j'^2*n1*q12*q13*q23+2*M`j'^2*n1*q13^2*q23+2*M`j'^2*n1*q12*q23^2+4*M`j'^2*n1*q13*q23^2+2*M`j'^2*n1*q23^3-4*M`j'^2*n1*q12^2*q33-4*M`j'^2*n1*q12*q13*q33+2*n1*q12^2*q13*q33+2*n1*q12*q13^2*q33-2*n1*q12^2*q23*q33+4*M`j'^2*n1*q13*q23*q33-2*n1*q12*q13*q23*q33-2*n1*q13^2*q23*q33+4*M`j'^2*n1*q23^2*q33-4*n1*q12*q23^2*q33-4*n1*q13*q23^2*q33-2*n1*q23^3*q33-4*M`j'^2*n1*q12*q33^2+2*n1*q12^2*q33^2+3*n1*q12*q13*q33^2+n1*q12*q23*q33^2-n1*q13*q23*q33^2-n1*q23^2*q33^2+n1*q12*q33^3,-8*M`j'^2*q12*q13^2+8*M`j'^2*n2*q12*q13^2+4*q12^2*q13^2-4*n2*q12^2*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n2*q13^3+8*q12*q13^3-8*n2*q12*q13^3+4*q13^4-4*n2*q13^4-16*M`j'^2*q12*q13*q23+16*M`j'^2*n2*q12*q13*q23+8*q12^2*q13*q23-8*n2*q12^2*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n2*q13^2*q23+24*q12*q13^2*q23-24*n2*q12*q13^2*q23+16*q13^3*q23-16*n2*q13^3*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n2*q12*q23^2+4*q12^2*q23^2-4*n2*q12^2*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n2*q13*q23^2+24*q12*q13*q23^2-24*n2*q12*q13*q23^2+24*q13^2*q23^2-24*n2*q13^2*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n2*q23^3+8*q12*q23^3-8*n2*q12*q23^3+16*q13*q23^3-16*n2*q13*q23^3+4*q23^4-4*n2*q23^4+16*M`j'^2*q12^2*q33-16*M`j'^2*n2*q12^2*q33-8*q12^3*q33+8*n2*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n2*q12*q13*q33-16*q12^2*q13*q33+16*n2*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n2*q13^2*q33-4*q12*q13^2*q33+4*n2*q12*q13^2*q33+4*q13^3*q33-4*n2*q13^3*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n2*q12*q23*q33-16*q12^2*q23*q33+16*n2*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n2*q13*q23*q33-8*q12*q13*q23*q33+8*n2*q12*q13*q23*q33+12*q13^2*q23*q33-12*n2*q13^2*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n2*q23^2*q33-4*q12*q23^2*q33+4*n2*q12*q23^2*q33+12*q13*q23^2*q33-12*n2*q13*q23^2*q33+4*q23^3*q33-4*n2*q23^3*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n2*q12*q33^2-8*q12^2*q33^2+8*n2*q12^2*q33^2-8*q12*q13*q33^2+8*n2*q12*q13*q33^2+q13^2*q33^2-n2*q13^2*q33^2-8*q12*q23*q33^2+8*n2*q12*q23*q33^2+2*q13*q23*q33^2-2*n2*q13*q23*q33^2+q23^2*q33^2-n2*q23^2*q33^2-2*q12*q33^3+2*n2*q12*q33^3)+mbox1l(n1,-1+n2,1+n3,n4)*(tmpprf(ep,1)*prf(4*q12^2*q13^2+4*q12*q13^3+8*q12^2*q13*q23+16*q12*q13^2*q23+4*q13^3*q23+4*q12^2*q23^2+20*q12*q13*q23^2+12*q13^2*q23^2+8*q12*q23^3+12*q13*q23^3+4*q23^4-8*q12^3*q33-8*q12^2*q13*q33+2*q12*q13^2*q33-16*q12^2*q23*q33-4*q12*q13*q23*q33+2*q13^2*q23*q33-6*q12*q23^2*q33+4*q13*q23^2*q33+2*q23^3*q33-4*q12^2*q33^2-4*q12*q23*q33^2,-8*M`j'^2*q12*q13^2+8*M`j'^2*n2*q12*q13^2+4*q12^2*q13^2-4*n2*q12^2*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n2*q13^3+8*q12*q13^3-8*n2*q12*q13^3+4*q13^4-4*n2*q13^4-16*M`j'^2*q12*q13*q23+16*M`j'^2*n2*q12*q13*q23+8*q12^2*q13*q23-8*n2*q12^2*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n2*q13^2*q23+24*q12*q13^2*q23-24*n2*q12*q13^2*q23+16*q13^3*q23-16*n2*q13^3*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n2*q12*q23^2+4*q12^2*q23^2-4*n2*q12^2*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n2*q13*q23^2+24*q12*q13*q23^2-24*n2*q12*q13*q23^2+24*q13^2*q23^2-24*n2*q13^2*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n2*q23^3+8*q12*q23^3-8*n2*q12*q23^3+16*q13*q23^3-16*n2*q13*q23^3+4*q23^4-4*n2*q23^4+16*M`j'^2*q12^2*q33-16*M`j'^2*n2*q12^2*q33-8*q12^3*q33+8*n2*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n2*q12*q13*q33-16*q12^2*q13*q33+16*n2*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n2*q13^2*q33-4*q12*q13^2*q33+4*n2*q12*q13^2*q33+4*q13^3*q33-4*n2*q13^3*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n2*q12*q23*q33-16*q12^2*q23*q33+16*n2*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n2*q13*q23*q33-8*q12*q13*q23*q33+8*n2*q12*q13*q23*q33+12*q13^2*q23*q33-12*n2*q13^2*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n2*q23^2*q33-4*q12*q23^2*q33+4*n2*q12*q23^2*q33+12*q13*q23^2*q33-12*n2*q13*q23^2*q33+4*q23^3*q33-4*n2*q23^3*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n2*q12*q33^2-8*q12^2*q33^2+8*n2*q12^2*q33^2-8*q12*q13*q33^2+8*n2*q12*q13*q33^2+q13^2*q33^2-n2*q13^2*q33^2-8*q12*q23*q33^2+8*n2*q12*q23*q33^2+2*q13*q23*q33^2-2*n2*q13*q23*q33^2+q23^2*q33^2-n2*q23^2*q33^2-2*q12*q33^3+2*n2*q12*q33^3)+prf(-14*M`j'^2*q12*q13^2+4*M`j'^2*n1*q12*q13^2+6*M`j'^2*n2*q12*q13^2-8*M`j'^2*n3*q12*q13^2-2*M`j'^2*n4*q12*q13^2-2*q12^2*q13^2+6*n3*q12^2*q13^2+4*n4*q12^2*q13^2-16*M`j'^2*q13^3+8*M`j'^2*n2*q13^3-8*M`j'^2*n3*q13^3+6*q12*q13^3-4*n2*q12*q13^3+10*n3*q12*q13^3+4*n4*q12*q13^3+8*q13^4-4*n2*q13^4+4*n3*q13^4-20*M`j'^2*q12*q13*q23+12*M`j'^2*n2*q12*q13*q23-8*M`j'^2*n3*q12*q13*q23-4*M`j'^2*n4*q12*q13*q23-8*q12^2*q13*q23+4*n1*q12^2*q13*q23+8*n3*q12^2*q13*q23+8*n4*q12^2*q13*q23-38*M`j'^2*q13^2*q23-4*M`j'^2*n1*q13^2*q23+22*M`j'^2*n2*q13^2*q23-16*M`j'^2*n3*q13^2*q23-2*M`j'^2*n4*q13^2*q23+8*n1*q12*q13^2*q23-8*n2*q12*q13^2*q23+24*n3*q12*q13^2*q23+16*n4*q12*q13^2*q23+18*q13^3*q23+4*n1*q13^3*q23-12*n2*q13^3*q23+14*n3*q13^3*q23+4*n4*q13^3*q23-6*M`j'^2*q12*q23^2-4*M`j'^2*n1*q12*q23^2+6*M`j'^2*n2*q12*q23^2-2*M`j'^2*n4*q12*q23^2-6*q12^2*q23^2+4*n1*q12^2*q23^2+2*n3*q12^2*q23^2+4*n4*q12^2*q23^2-28*M`j'^2*q13*q23^2-8*M`j'^2*n1*q13*q23^2+20*M`j'^2*n2*q13*q23^2-8*M`j'^2*n3*q13*q23^2-4*M`j'^2*n4*q13*q23^2-18*q12*q13*q23^2+16*n1*q12*q13*q23^2-4*n2*q12*q13*q23^2+18*n3*q12*q13*q23^2+20*n4*q12*q13*q23^2+6*q13^2*q23^2+12*n1*q13^2*q23^2-12*n2*q13^2*q23^2+18*n3*q13^2*q23^2+12*n4*q13^2*q23^2-6*M`j'^2*q23^3-4*M`j'^2*n1*q23^3+6*M`j'^2*n2*q23^3-2*M`j'^2*n4*q23^3-12*q12*q23^3+8*n1*q12*q23^3+4*n3*q12*q23^3+8*n4*q12*q23^3-10*q13*q23^3+12*n1*q13*q23^3-4*n2*q13*q23^3+10*n3*q13*q23^3+12*n4*q13*q23^3-6*q23^4+4*n1*q23^4+2*n3*q23^4+4*n4*q23^4+20*M`j'^2*q12^2*q33-12*M`j'^2*n2*q12^2*q33+8*M`j'^2*n3*q12^2*q33+4*M`j'^2*n4*q12^2*q33+8*q12^3*q33-4*n1*q12^3*q33-8*n3*q12^3*q33-8*n4*q12^3*q33+24*M`j'^2*q12*q13*q33+8*M`j'^2*n1*q12*q13*q33-16*M`j'^2*n2*q12*q13*q33+8*M`j'^2*n3*q12*q13*q33-4*q12^2*q13*q33-8*n1*q12^2*q13*q33+8*n2*q12^2*q13*q33-12*n3*q12^2*q13*q33-8*n4*q12^2*q13*q33-8*M`j'^2*q13^2*q33+4*M`j'^2*n2*q13^2*q33-4*M`j'^2*n3*q13^2*q33-9*q12*q13^2*q33-4*n1*q12*q13^2*q33+6*n2*q12*q13^2*q33+n3*q12*q13^2*q33+2*n4*q12*q13^2*q33+8*q13^3*q33-4*n2*q13^3*q33+4*n3*q13^3*q33+20*M`j'^2*q12*q23*q33-12*M`j'^2*n2*q12*q23*q33+8*M`j'^2*n3*q12*q23*q33+4*M`j'^2*n4*q12*q23*q33+16*q12^2*q23*q33-8*n1*q12^2*q23*q33-16*n3*q12^2*q23*q33-16*n4*q12^2*q23*q33-12*M`j'^2*q13*q23*q33-4*M`j'^2*n1*q13*q23*q33+8*M`j'^2*n2*q13*q23*q33-4*M`j'^2*n3*q13*q23*q33-2*q12*q13*q23*q33-4*n1*q12*q13*q23*q33+4*n2*q12*q13*q23*q33-6*n3*q12*q13*q23*q33-4*n4*q12*q13*q23*q33+15*q13^2*q23*q33+4*n1*q13^2*q23*q33-10*n2*q13^2*q23*q33+9*n3*q13^2*q23*q33+2*n4*q13^2*q23*q33-4*M`j'^2*q23^2*q33-4*M`j'^2*n1*q23^2*q33+4*M`j'^2*n2*q23^2*q33+7*q12*q23^2*q33-2*n2*q12*q23^2*q33-7*n3*q12*q23^2*q33-6*n4*q12*q23^2*q33+6*q13*q23^2*q33+8*n1*q13*q23^2*q33-8*n2*q13*q23^2*q33+6*n3*q13*q23^2*q33+4*n4*q13*q23^2*q33-q23^3*q33+4*n1*q23^3*q33-2*n2*q23^3*q33+n3*q23^3*q33+2*n4*q23^3*q33+12*M`j'^2*q12*q33^2+4*M`j'^2*n1*q12*q33^2-8*M`j'^2*n2*q12*q33^2+4*M`j'^2*n3*q12*q33^2-2*q12^2*q33^2-4*n1*q12^2*q33^2+4*n2*q12^2*q33^2-6*n3*q12^2*q33^2-4*n4*q12^2*q33^2-12*q12*q13*q33^2-4*n1*q12*q13*q33^2+8*n2*q12*q13*q33^2-4*n3*q12*q13*q33^2+2*q13^2*q33^2-n2*q13^2*q33^2+n3*q13^2*q33^2-2*q12*q23*q33^2-4*n1*q12*q23*q33^2+4*n2*q12*q23*q33^2-6*n3*q12*q23*q33^2-4*n4*q12*q23*q33^2+3*q13*q23*q33^2+n1*q13*q23*q33^2-2*n2*q13*q23*q33^2+n3*q13*q23*q33^2+q23^2*q33^2+n1*q23^2*q33^2-n2*q23^2*q33^2-3*q12*q33^3-n1*q12*q33^3+2*n2*q12*q33^3-n3*q12*q33^3,-8*M`j'^2*q12*q13^2+8*M`j'^2*n2*q12*q13^2+4*q12^2*q13^2-4*n2*q12^2*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n2*q13^3+8*q12*q13^3-8*n2*q12*q13^3+4*q13^4-4*n2*q13^4-16*M`j'^2*q12*q13*q23+16*M`j'^2*n2*q12*q13*q23+8*q12^2*q13*q23-8*n2*q12^2*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n2*q13^2*q23+24*q12*q13^2*q23-24*n2*q12*q13^2*q23+16*q13^3*q23-16*n2*q13^3*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n2*q12*q23^2+4*q12^2*q23^2-4*n2*q12^2*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n2*q13*q23^2+24*q12*q13*q23^2-24*n2*q12*q13*q23^2+24*q13^2*q23^2-24*n2*q13^2*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n2*q23^3+8*q12*q23^3-8*n2*q12*q23^3+16*q13*q23^3-16*n2*q13*q23^3+4*q23^4-4*n2*q23^4+16*M`j'^2*q12^2*q33-16*M`j'^2*n2*q12^2*q33-8*q12^3*q33+8*n2*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n2*q12*q13*q33-16*q12^2*q13*q33+16*n2*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n2*q13^2*q33-4*q12*q13^2*q33+4*n2*q12*q13^2*q33+4*q13^3*q33-4*n2*q13^3*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n2*q12*q23*q33-16*q12^2*q23*q33+16*n2*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n2*q13*q23*q33-8*q12*q13*q23*q33+8*n2*q12*q13*q23*q33+12*q13^2*q23*q33-12*n2*q13^2*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n2*q23^2*q33-4*q12*q23^2*q33+4*n2*q12*q23^2*q33+12*q13*q23^2*q33-12*n2*q13*q23^2*q33+4*q23^3*q33-4*n2*q23^3*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n2*q12*q33^2-8*q12^2*q33^2+8*n2*q12^2*q33^2-8*q12*q13*q33^2+8*n2*q12*q13*q33^2+q13^2*q33^2-n2*q13^2*q33^2-8*q12*q23*q33^2+8*n2*q12*q23*q33^2+2*q13*q23*q33^2-2*n2*q13*q23*q33^2+q23^2*q33^2-n2*q23^2*q33^2-2*q12*q33^3+2*n2*q12*q33^3))+mbox1l(n1,-2+n2,2+n3,n4)*prf(6*M`j'^2*q12*q13^2+6*M`j'^2*n3*q12*q13^2-2*q12^2*q13^2-2*n3*q12^2*q13^2+8*M`j'^2*q13^3+8*M`j'^2*n3*q13^3-6*q12*q13^3-6*n3*q12*q13^3-4*q13^4-4*n3*q13^4+8*M`j'^2*q12*q13*q23+8*M`j'^2*n3*q12*q13*q23-2*q12^2*q13*q23-2*n3*q12^2*q13*q23+14*M`j'^2*q13^2*q23+14*M`j'^2*n3*q13^2*q23-10*q12*q13^2*q23-10*n3*q12*q13^2*q23-10*q13^3*q23-10*n3*q13^3*q23+2*M`j'^2*q12*q23^2+2*M`j'^2*n3*q12*q23^2+8*M`j'^2*q13*q23^2+8*M`j'^2*n3*q13*q23^2-4*q12*q13*q23^2-4*n3*q12*q13*q23^2-8*q13^2*q23^2-8*n3*q13^2*q23^2+2*M`j'^2*q23^3+2*M`j'^2*n3*q23^3-2*q13*q23^3-2*n3*q13*q23^3-4*M`j'^2*q12^2*q33-4*M`j'^2*n3*q12^2*q33-8*M`j'^2*q12*q13*q33-8*M`j'^2*n3*q12*q13*q33+4*q12^2*q13*q33+4*n3*q12^2*q13*q33+4*M`j'^2*q13^2*q33+4*M`j'^2*n3*q13^2*q33+q12*q13^2*q33+n3*q12*q13^2*q33-4*q13^3*q33-4*n3*q13^3*q33-2*q12^2*q23*q33-2*n3*q12^2*q23*q33+4*M`j'^2*q13*q23*q33+4*M`j'^2*n3*q13*q23*q33-q12*q13*q23*q33-n3*q12*q13*q23*q33-7*q13^2*q23*q33-7*n3*q13^2*q23*q33+4*M`j'^2*q23^2*q33+4*M`j'^2*n3*q23^2*q33-4*q12*q23^2*q33-4*n3*q12*q23^2*q33-5*q13*q23^2*q33-5*n3*q13*q23^2*q33-2*q23^3*q33-2*n3*q23^3*q33-4*M`j'^2*q12*q33^2-4*M`j'^2*n3*q12*q33^2+2*q12^2*q33^2+2*n3*q12^2*q33^2+4*q12*q13*q33^2+4*n3*q12*q13*q33^2-q13^2*q33^2-n3*q13^2*q33^2+q12*q23*q33^2+n3*q12*q23*q33^2-q13*q23*q33^2-n3*q13*q23*q33^2-q23^2*q33^2-n3*q23^2*q33^2+q12*q33^3+n3*q12*q33^3,-8*M`j'^2*q12*q13^2+8*M`j'^2*n2*q12*q13^2+4*q12^2*q13^2-4*n2*q12^2*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n2*q13^3+8*q12*q13^3-8*n2*q12*q13^3+4*q13^4-4*n2*q13^4-16*M`j'^2*q12*q13*q23+16*M`j'^2*n2*q12*q13*q23+8*q12^2*q13*q23-8*n2*q12^2*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n2*q13^2*q23+24*q12*q13^2*q23-24*n2*q12*q13^2*q23+16*q13^3*q23-16*n2*q13^3*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n2*q12*q23^2+4*q12^2*q23^2-4*n2*q12^2*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n2*q13*q23^2+24*q12*q13*q23^2-24*n2*q12*q13*q23^2+24*q13^2*q23^2-24*n2*q13^2*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n2*q23^3+8*q12*q23^3-8*n2*q12*q23^3+16*q13*q23^3-16*n2*q13*q23^3+4*q23^4-4*n2*q23^4+16*M`j'^2*q12^2*q33-16*M`j'^2*n2*q12^2*q33-8*q12^3*q33+8*n2*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n2*q12*q13*q33-16*q12^2*q13*q33+16*n2*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n2*q13^2*q33-4*q12*q13^2*q33+4*n2*q12*q13^2*q33+4*q13^3*q33-4*n2*q13^3*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n2*q12*q23*q33-16*q12^2*q23*q33+16*n2*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n2*q13*q23*q33-8*q12*q13*q23*q33+8*n2*q12*q13*q23*q33+12*q13^2*q23*q33-12*n2*q13^2*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n2*q23^2*q33-4*q12*q23^2*q33+4*n2*q12*q23^2*q33+12*q13*q23^2*q33-12*n2*q13*q23^2*q33+4*q23^3*q33-4*n2*q23^3*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n2*q12*q33^2-8*q12^2*q33^2+8*n2*q12^2*q33^2-8*q12*q13*q33^2+8*n2*q12*q13*q33^2+q13^2*q33^2-n2*q13^2*q33^2-8*q12*q23*q33^2+8*n2*q12*q23*q33^2+2*q13*q23*q33^2-2*n2*q13*q23*q33^2+q23^2*q33^2-n2*q23^2*q33^2-2*q12*q33^3+2*n2*q12*q33^3)+mbox1l(1+n1,-1+n2,1+n3,n4)*prf(-4*M`j'^2*n1*q12*q13^3-12*M`j'^2*n1*q12*q13^2*q23-4*M`j'^2*n1*q13^3*q23-12*M`j'^2*n1*q12*q13*q23^2-12*M`j'^2*n1*q13^2*q23^2-4*M`j'^2*n1*q12*q23^3-12*M`j'^2*n1*q13*q23^3-4*M`j'^2*n1*q23^4+4*n1*q12^3*q13*q33-8*M`j'^2*n1*q12*q13^2*q33+8*n1*q12^2*q13^2*q33+4*n1*q12*q13^3*q33+16*M`j'^2*n1*q12^2*q23*q33-4*n1*q12^3*q23*q33+8*M`j'^2*n1*q12*q13*q23*q33+4*n1*q12*q13^2*q23*q33+16*M`j'^2*n1*q12*q23^2*q33-8*n1*q12^2*q23^2*q33-4*n1*q12*q13*q23^2*q33-4*n1*q12*q23^3*q33-4*M`j'^2*n1*q12*q13*q33^2+4*n1*q12^2*q13*q33^2+4*n1*q12*q13^2*q33^2+4*M`j'^2*n1*q12*q23*q33^2-4*n1*q12^2*q23*q33^2-4*n1*q12*q23^2*q33^2+n1*q12*q13*q33^3-n1*q12*q23*q33^3,-8*M`j'^2*q12*q13^2+8*M`j'^2*n2*q12*q13^2+4*q12^2*q13^2-4*n2*q12^2*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n2*q13^3+8*q12*q13^3-8*n2*q12*q13^3+4*q13^4-4*n2*q13^4-16*M`j'^2*q12*q13*q23+16*M`j'^2*n2*q12*q13*q23+8*q12^2*q13*q23-8*n2*q12^2*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n2*q13^2*q23+24*q12*q13^2*q23-24*n2*q12*q13^2*q23+16*q13^3*q23-16*n2*q13^3*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n2*q12*q23^2+4*q12^2*q23^2-4*n2*q12^2*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n2*q13*q23^2+24*q12*q13*q23^2-24*n2*q12*q13*q23^2+24*q13^2*q23^2-24*n2*q13^2*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n2*q23^3+8*q12*q23^3-8*n2*q12*q23^3+16*q13*q23^3-16*n2*q13*q23^3+4*q23^4-4*n2*q23^4+16*M`j'^2*q12^2*q33-16*M`j'^2*n2*q12^2*q33-8*q12^3*q33+8*n2*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n2*q12*q13*q33-16*q12^2*q13*q33+16*n2*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n2*q13^2*q33-4*q12*q13^2*q33+4*n2*q12*q13^2*q33+4*q13^3*q33-4*n2*q13^3*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n2*q12*q23*q33-16*q12^2*q23*q33+16*n2*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n2*q13*q23*q33-8*q12*q13*q23*q33+8*n2*q12*q13*q23*q33+12*q13^2*q23*q33-12*n2*q13^2*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n2*q23^2*q33-4*q12*q23^2*q33+4*n2*q12*q23^2*q33+12*q13*q23^2*q33-12*n2*q13*q23^2*q33+4*q23^3*q33-4*n2*q23^3*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n2*q12*q33^2-8*q12^2*q33^2+8*n2*q12^2*q33^2-8*q12*q13*q33^2+8*n2*q12*q13*q33^2+q13^2*q33^2-n2*q13^2*q33^2-8*q12*q23*q33^2+8*n2*q12*q23*q33^2+2*q13*q23*q33^2-2*n2*q13*q23*q33^2+q23^2*q33^2-n2*q23^2*q33^2-2*q12*q33^3+2*n2*q12*q33^3)+mbox1l(n1,-1+n2,2+n3,n4)*prf(4*M`j'^2*q12^2*q13^2+4*M`j'^2*n3*q12^2*q13^2-4*q12^3*q13^2-4*n3*q12^3*q13^2-4*q12^2*q13^3-4*n3*q12^2*q13^3-4*q12^3*q13*q23-4*n3*q12^3*q13*q23-12*q12^2*q13^2*q23-12*n3*q12^2*q13^2*q23-4*q12*q13^3*q23-4*n3*q12*q13^3*q23-4*M`j'^2*q12^2*q23^2-4*M`j'^2*n3*q12^2*q23^2-8*M`j'^2*q12*q13*q23^2-8*M`j'^2*n3*q12*q13*q23^2-8*q12^2*q13*q23^2-8*n3*q12^2*q13*q23^2-4*M`j'^2*q13^2*q23^2-4*M`j'^2*n3*q13^2*q23^2-8*q12*q13^2*q23^2-8*n3*q12*q13^2*q23^2-8*M`j'^2*q12*q23^3-8*M`j'^2*n3*q12*q23^3-8*M`j'^2*q13*q23^3-8*M`j'^2*n3*q13*q23^3-4*q12*q13*q23^3-4*n3*q12*q13*q23^3-4*M`j'^2*q23^4-4*M`j'^2*n3*q23^4+8*M`j'^2*q12^3*q33+8*M`j'^2*n3*q12^3*q33+12*M`j'^2*q12^2*q13*q33+12*M`j'^2*n3*q12^2*q13*q33-6*q12^3*q13*q33-6*n3*q12^3*q13*q33-8*q12^2*q13^2*q33-8*n3*q12^2*q13^2*q33+20*M`j'^2*q12^2*q23*q33+20*M`j'^2*n3*q12^2*q23*q33-2*q12^3*q23*q33-2*n3*q12^3*q23*q33+12*M`j'^2*q12*q13*q23*q33+12*M`j'^2*n3*q12*q13*q23*q33-16*q12^2*q13*q23*q33-16*n3*q12^2*q13*q23*q33-8*q12*q13^2*q23*q33-8*n3*q12*q13^2*q23*q33+12*M`j'^2*q12*q23^2*q33+12*M`j'^2*n3*q12*q23^2*q33-4*q12^2*q23^2*q33-4*n3*q12^2*q23^2*q33-10*q12*q13*q23^2*q33-10*n3*q12*q13*q23^2*q33-2*q12*q23^3*q33-2*n3*q12*q23^3*q33+4*M`j'^2*q12^2*q33^2+4*M`j'^2*n3*q12^2*q33^2-2*q12^3*q33^2-2*n3*q12^3*q33^2-5*q12^2*q13*q33^2-5*n3*q12^2*q13*q33^2+4*M`j'^2*q12*q23*q33^2+4*M`j'^2*n3*q12*q23*q33^2-5*q12^2*q23*q33^2-5*n3*q12^2*q23*q33^2-5*q12*q13*q23*q33^2-5*n3*q12*q13*q23*q33^2-3*q12*q23^2*q33^2-3*n3*q12*q23^2*q33^2-q12^2*q33^3-n3*q12^2*q33^3-q12*q23*q33^3-n3*q12*q23*q33^3,-8*M`j'^2*q12*q13^2+8*M`j'^2*n2*q12*q13^2+4*q12^2*q13^2-4*n2*q12^2*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n2*q13^3+8*q12*q13^3-8*n2*q12*q13^3+4*q13^4-4*n2*q13^4-16*M`j'^2*q12*q13*q23+16*M`j'^2*n2*q12*q13*q23+8*q12^2*q13*q23-8*n2*q12^2*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n2*q13^2*q23+24*q12*q13^2*q23-24*n2*q12*q13^2*q23+16*q13^3*q23-16*n2*q13^3*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n2*q12*q23^2+4*q12^2*q23^2-4*n2*q12^2*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n2*q13*q23^2+24*q12*q13*q23^2-24*n2*q12*q13*q23^2+24*q13^2*q23^2-24*n2*q13^2*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n2*q23^3+8*q12*q23^3-8*n2*q12*q23^3+16*q13*q23^3-16*n2*q13*q23^3+4*q23^4-4*n2*q23^4+16*M`j'^2*q12^2*q33-16*M`j'^2*n2*q12^2*q33-8*q12^3*q33+8*n2*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n2*q12*q13*q33-16*q12^2*q13*q33+16*n2*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n2*q13^2*q33-4*q12*q13^2*q33+4*n2*q12*q13^2*q33+4*q13^3*q33-4*n2*q13^3*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n2*q12*q23*q33-16*q12^2*q23*q33+16*n2*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n2*q13*q23*q33-8*q12*q13*q23*q33+8*n2*q12*q13*q23*q33+12*q13^2*q23*q33-12*n2*q13^2*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n2*q23^2*q33-4*q12*q23^2*q33+4*n2*q12*q23^2*q33+12*q13*q23^2*q33-12*n2*q13*q23^2*q33+4*q23^3*q33-4*n2*q23^3*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n2*q12*q33^2-8*q12^2*q33^2+8*n2*q12^2*q33^2-8*q12*q13*q33^2+8*n2*q12*q13*q33^2+q13^2*q33^2-n2*q13^2*q33^2-8*q12*q23*q33^2+8*n2*q12*q23*q33^2+2*q13*q23*q33^2-2*n2*q13*q23*q33^2+q23^2*q33^2-n2*q23^2*q33^2-2*q12*q33^3+2*n2*q12*q33^3);
	Identify,ifmatch->jump mbox1l(n1?neg_,n2?{,>1},n3?neg0_,n4?pos_) = mbox1l(2+n1,-1+n2,n3,-1+n4)*prf(2*M`j'^2*q13+2*M`j'^2*n1*q13+2*M`j'^2*q23+2*M`j'^2*n1*q23,-8*M`j'^2*q12+8*M`j'^2*n2*q12+4*q12^2-4*n2*q12^2-8*M`j'^2*q13+8*M`j'^2*n2*q13+8*q12*q13-8*n2*q12*q13+4*q13^2-4*n2*q13^2-8*M`j'^2*q23+8*M`j'^2*n2*q23+8*q12*q23-8*n2*q12*q23+8*q13*q23-8*n2*q13*q23+4*q23^2-4*n2*q23^2-4*M`j'^2*q33+4*M`j'^2*n2*q33+4*q12*q33-4*n2*q12*q33+4*q13*q33-4*n2*q13*q33+4*q23*q33-4*n2*q23*q33+q33^2-n2*q33^2)+mbox1l(1+n1,-2+n2,n3,1+n4)*prf(2*M`j'^2*n4*q13+2*M`j'^2*n4*q23,-8*M`j'^2*q12+8*M`j'^2*n2*q12+4*q12^2-4*n2*q12^2-8*M`j'^2*q13+8*M`j'^2*n2*q13+8*q12*q13-8*n2*q12*q13+4*q13^2-4*n2*q13^2-8*M`j'^2*q23+8*M`j'^2*n2*q23+8*q12*q23-8*n2*q12*q23+8*q13*q23-8*n2*q13*q23+4*q23^2-4*n2*q23^2-4*M`j'^2*q33+4*M`j'^2*n2*q33+4*q12*q33-4*n2*q12*q33+4*q13*q33-4*n2*q13*q33+4*q23*q33-4*n2*q23*q33+q33^2-n2*q33^2)+mbox1l(n1,-1+n2,1+n3,n4)*prf(-(n3*q12)-2*n3*q13-n3*q23-n3*q33,-2*q12+2*n2*q12-2*q13+2*n2*q13-2*q23+2*n2*q23-q33+n2*q33)+mbox1l(1+n1,n2,n3,-1+n4)*prf(-8*M`j'^2*q12+4*q12^2-2*M`j'^2*q13+4*q12*q13-2*M`j'^2*q23+4*q12*q23+2*q12*q33,-8*M`j'^2*q12+4*q12^2-8*M`j'^2*q13+8*q12*q13+4*q13^2-8*M`j'^2*q23+8*q12*q23+8*q13*q23+4*q23^2-4*M`j'^2*q33+4*q12*q33+4*q13*q33+4*q23*q33+q33^2)+mbox1l(1+n1,-1+n2,1+n3,-1+n4)*prf(-4*M`j'^2*n3*q12+2*n3*q12^2-2*M`j'^2*n3*q13+2*n3*q12*q13-2*M`j'^2*n3*q23+2*n3*q12*q23+n3*q12*q33,8*M`j'^2*q12-8*M`j'^2*n2*q12-4*q12^2+4*n2*q12^2+8*M`j'^2*q13-8*M`j'^2*n2*q13-8*q12*q13+8*n2*q12*q13-4*q13^2+4*n2*q13^2+8*M`j'^2*q23-8*M`j'^2*n2*q23-8*q12*q23+8*n2*q12*q23-8*q13*q23+8*n2*q13*q23-4*q23^2+4*n2*q23^2+4*M`j'^2*q33-4*M`j'^2*n2*q33-4*q12*q33+4*n2*q12*q33-4*q13*q33+4*n2*q13*q33-4*q23*q33+4*n2*q23*q33-q33^2+n2*q33^2)+mbox1l(2+n1,-2+n2,n3,n4)*prf(-2*M`j'^2*q13-2*M`j'^2*n1*q13-2*M`j'^2*q23-2*M`j'^2*n1*q23-4*M`j'^2*q33-4*M`j'^2*n1*q33+2*q12*q33+2*n1*q12*q33+2*q13*q33+2*n1*q13*q33+2*q23*q33+2*n1*q23*q33+q33^2+n1*q33^2,8*M`j'^2*q12-8*M`j'^2*n2*q12-4*q12^2+4*n2*q12^2+8*M`j'^2*q13-8*M`j'^2*n2*q13-8*q12*q13+8*n2*q12*q13-4*q13^2+4*n2*q13^2+8*M`j'^2*q23-8*M`j'^2*n2*q23-8*q12*q23+8*n2*q12*q23-8*q13*q23+8*n2*q13*q23-4*q23^2+4*n2*q23^2+4*M`j'^2*q33-4*M`j'^2*n2*q33-4*q12*q33+4*n2*q12*q33-4*q13*q33+4*n2*q13*q33-4*q23*q33+4*n2*q23*q33-q33^2+n2*q33^2)+mbox1l(1+n1,-1+n2,n3,n4)*(tmpprf(ep,1)*prf(-4*q12*q13-4*q13^2-4*q12*q23-8*q13*q23-4*q23^2-2*q13*q33-2*q23*q33,8*M`j'^2*q12-8*M`j'^2*n2*q12-4*q12^2+4*n2*q12^2+8*M`j'^2*q13-8*M`j'^2*n2*q13-8*q12*q13+8*n2*q12*q13-4*q13^2+4*n2*q13^2+8*M`j'^2*q23-8*M`j'^2*n2*q23-8*q12*q23+8*n2*q12*q23-8*q13*q23+8*n2*q13*q23-4*q23^2+4*n2*q23^2+4*M`j'^2*q33-4*M`j'^2*n2*q33-4*q12*q33+4*n2*q12*q33-4*q13*q33+4*n2*q13*q33-4*q23*q33+4*n2*q23*q33-q33^2+n2*q33^2)+prf(10*M`j'^2*q13+4*M`j'^2*n1*q13-6*M`j'^2*n2*q13+2*M`j'^2*n4*q13+4*q12*q13-4*n1*q12*q13-2*n3*q12*q13-4*n4*q12*q13+4*q13^2-4*n1*q13^2-2*n3*q13^2-4*n4*q13^2+10*M`j'^2*q23+4*M`j'^2*n1*q23-6*M`j'^2*n2*q23+2*M`j'^2*n4*q23+4*q12*q23-4*n1*q12*q23-2*n3*q12*q23-4*n4*q12*q23+8*q13*q23-8*n1*q13*q23-4*n3*q13*q23-8*n4*q13*q23+4*q23^2-4*n1*q23^2-2*n3*q23^2-4*n4*q23^2+8*M`j'^2*q33+4*M`j'^2*n1*q33-4*M`j'^2*n2*q33-4*q12*q33-2*n1*q12*q33+2*n2*q12*q33-2*q13*q33-4*n1*q13*q33+2*n2*q13*q33-n3*q13*q33-2*n4*q13*q33-2*q23*q33-4*n1*q23*q33+2*n2*q23*q33-n3*q23*q33-2*n4*q23*q33-2*q33^2-n1*q33^2+n2*q33^2,8*M`j'^2*q12-8*M`j'^2*n2*q12-4*q12^2+4*n2*q12^2+8*M`j'^2*q13-8*M`j'^2*n2*q13-8*q12*q13+8*n2*q12*q13-4*q13^2+4*n2*q13^2+8*M`j'^2*q23-8*M`j'^2*n2*q23-8*q12*q23+8*n2*q12*q23-8*q13*q23+8*n2*q13*q23-4*q23^2+4*n2*q23^2+4*M`j'^2*q33-4*M`j'^2*n2*q33-4*q12*q33+4*n2*q12*q33-4*q13*q33+4*n2*q13*q33-4*q23*q33+4*n2*q23*q33-q33^2+n2*q33^2))+mbox1l(1+n1,-2+n2,1+n3,n4)*prf(-6*M`j'^2*n3*q13+2*n3*q12*q13+2*n3*q13^2-2*M`j'^2*n3*q23+2*n3*q13*q23-4*M`j'^2*n3*q33+2*n3*q12*q33+3*n3*q13*q33+2*n3*q23*q33+n3*q33^2,8*M`j'^2*q12-8*M`j'^2*n2*q12-4*q12^2+4*n2*q12^2+8*M`j'^2*q13-8*M`j'^2*n2*q13-8*q12*q13+8*n2*q12*q13-4*q13^2+4*n2*q13^2+8*M`j'^2*q23-8*M`j'^2*n2*q23-8*q12*q23+8*n2*q12*q23-8*q13*q23+8*n2*q13*q23-4*q23^2+4*n2*q23^2+4*M`j'^2*q33-4*M`j'^2*n2*q33-4*q12*q33+4*n2*q12*q33-4*q13*q33+4*n2*q13*q33-4*q23*q33+4*n2*q23*q33-q33^2+n2*q33^2)+mbox1l(2+n1,-1+n2,n3,n4)*prf(4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2+8*M`j'^2*q13*q23+8*M`j'^2*n1*q13*q23+4*M`j'^2*q23^2+4*M`j'^2*n1*q23^2-8*M`j'^2*q12*q33-8*M`j'^2*n1*q12*q33+4*q12^2*q33+4*n1*q12^2*q33+4*q12*q13*q33+4*n1*q12*q13*q33+4*q12*q23*q33+4*n1*q12*q23*q33+2*q12*q33^2+2*n1*q12*q33^2,8*M`j'^2*q12-8*M`j'^2*n2*q12-4*q12^2+4*n2*q12^2+8*M`j'^2*q13-8*M`j'^2*n2*q13-8*q12*q13+8*n2*q12*q13-4*q13^2+4*n2*q13^2+8*M`j'^2*q23-8*M`j'^2*n2*q23-8*q12*q23+8*n2*q12*q23-8*q13*q23+8*n2*q13*q23-4*q23^2+4*n2*q23^2+4*M`j'^2*q33-4*M`j'^2*n2*q33-4*q12*q33+4*n2*q12*q33-4*q13*q33+4*n2*q13*q33-4*q23*q33+4*n2*q23*q33-q33^2+n2*q33^2)+mbox1l(1+n1,-1+n2,1+n3,n4)*prf(-4*M`j'^2*n3*q12*q13+4*n3*q12^2*q13+4*n3*q12*q13^2+4*M`j'^2*n3*q12*q23+4*M`j'^2*n3*q13*q23+4*n3*q12*q13*q23+4*M`j'^2*n3*q23^2-4*M`j'^2*n3*q12*q33+2*n3*q12^2*q33+4*n3*q12*q13*q33+2*n3*q12*q23*q33+n3*q12*q33^2,8*M`j'^2*q12-8*M`j'^2*n2*q12-4*q12^2+4*n2*q12^2+8*M`j'^2*q13-8*M`j'^2*n2*q13-8*q12*q13+8*n2*q12*q13-4*q13^2+4*n2*q13^2+8*M`j'^2*q23-8*M`j'^2*n2*q23-8*q12*q23+8*n2*q12*q23-8*q13*q23+8*n2*q13*q23-4*q23^2+4*n2*q23^2+4*M`j'^2*q33-4*M`j'^2*n2*q33-4*q12*q33+4*n2*q12*q33-4*q13*q33+4*n2*q13*q33-4*q23*q33+4*n2*q23*q33-q33^2+n2*q33^2);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?pos_,n3?neg0_,n4?{,>1}) = mbox1l(1+n1,n2,n3,-2+n4)*prf(2*M`j'^2*n1,-8*M`j'^2*q12+8*M`j'^2*n4*q12+4*q12^2-4*n4*q12^2-8*M`j'^2*q13+8*M`j'^2*n4*q13+8*q12*q13-8*n4*q12*q13+4*q13^2-4*n4*q13^2-8*M`j'^2*q23+8*M`j'^2*n4*q23+8*q12*q23-8*n4*q12*q23+8*q13*q23-8*n4*q13*q23+4*q23^2-4*n4*q23^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q12*q33-4*n4*q12*q33+4*q13*q33-4*n4*q13*q33+4*q23*q33-4*n4*q23*q33+q33^2-n4*q33^2)+mbox1l(n1,1+n2,n3,-2+n4)*prf(2*M`j'^2*n2,-8*M`j'^2*q12+8*M`j'^2*n4*q12+4*q12^2-4*n4*q12^2-8*M`j'^2*q13+8*M`j'^2*n4*q13+8*q12*q13-8*n4*q12*q13+4*q13^2-4*n4*q13^2-8*M`j'^2*q23+8*M`j'^2*n4*q23+8*q12*q23-8*n4*q12*q23+8*q13*q23-8*n4*q13*q23+4*q23^2-4*n4*q23^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q12*q33-4*n4*q12*q33+4*q13*q33-4*n4*q13*q33+4*q23*q33-4*n4*q23*q33+q33^2-n4*q33^2)+mbox1l(n1,n2,1+n3,-2+n4)*prf(2*M`j'^2*n3,-8*M`j'^2*q12+8*M`j'^2*n4*q12+4*q12^2-4*n4*q12^2-8*M`j'^2*q13+8*M`j'^2*n4*q13+8*q12*q13-8*n4*q12*q13+4*q13^2-4*n4*q13^2-8*M`j'^2*q23+8*M`j'^2*n4*q23+8*q12*q23-8*n4*q12*q23+8*q13*q23-8*n4*q13*q23+4*q23^2-4*n4*q23^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q12*q33-4*n4*q12*q33+4*q13*q33-4*n4*q13*q33+4*q23*q33-4*n4*q23*q33+q33^2-n4*q33^2)+mbox1l(n1,n2,1+n3,-1+n4)*prf(-4*M`j'^2*n3*q12-4*M`j'^2*n3*q23,-8*M`j'^2*q12+8*M`j'^2*n4*q12+4*q12^2-4*n4*q12^2-8*M`j'^2*q13+8*M`j'^2*n4*q13+8*q12*q13-8*n4*q12*q13+4*q13^2-4*n4*q13^2-8*M`j'^2*q23+8*M`j'^2*n4*q23+8*q12*q23-8*n4*q12*q23+8*q13*q23-8*n4*q13*q23+4*q23^2-4*n4*q23^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q12*q33-4*n4*q12*q33+4*q13*q33-4*n4*q13*q33+4*q23*q33-4*n4*q23*q33+q33^2-n4*q33^2)+mbox1l(n1,-1+n2,n3,n4)*prf(-2*M`j'^2+2*q12+2*q13+2*q23+q33,8*M`j'^2*q12-4*q12^2+8*M`j'^2*q13-8*q12*q13-4*q13^2+8*M`j'^2*q23-8*q12*q23-8*q13*q23-4*q23^2+4*M`j'^2*q33-4*q12*q33-4*q13*q33-4*q23*q33-q33^2)+mbox1l(1+n1,-1+n2,n3,-1+n4)*prf(-2*M`j'^2*n1+2*n1*q12+2*n1*q13+2*n1*q23+n1*q33,-8*M`j'^2*q12+8*M`j'^2*n4*q12+4*q12^2-4*n4*q12^2-8*M`j'^2*q13+8*M`j'^2*n4*q13+8*q12*q13-8*n4*q12*q13+4*q13^2-4*n4*q13^2-8*M`j'^2*q23+8*M`j'^2*n4*q23+8*q12*q23-8*n4*q12*q23+8*q13*q23-8*n4*q13*q23+4*q23^2-4*n4*q23^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q12*q33-4*n4*q12*q33+4*q13*q33-4*n4*q13*q33+4*q23*q33-4*n4*q23*q33+q33^2-n4*q33^2)+mbox1l(n1,-1+n2,1+n3,-1+n4)*prf(-2*M`j'^2*n3+2*n3*q12+2*n3*q13+2*n3*q23+n3*q33,-8*M`j'^2*q12+8*M`j'^2*n4*q12+4*q12^2-4*n4*q12^2-8*M`j'^2*q13+8*M`j'^2*n4*q13+8*q12*q13-8*n4*q12*q13+4*q13^2-4*n4*q13^2-8*M`j'^2*q23+8*M`j'^2*n4*q23+8*q12*q23-8*n4*q12*q23+8*q13*q23-8*n4*q13*q23+4*q23^2-4*n4*q23^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q12*q33-4*n4*q12*q33+4*q13*q33-4*n4*q13*q33+4*q23*q33-4*n4*q23*q33+q33^2-n4*q33^2)+mbox1l(n1,n2,n3,-1+n4)*(tmpprf(ep,1)*prf(4*q12+4*q13+4*q23+2*q33,-8*M`j'^2*q12+8*M`j'^2*n4*q12+4*q12^2-4*n4*q12^2-8*M`j'^2*q13+8*M`j'^2*n4*q13+8*q12*q13-8*n4*q12*q13+4*q13^2-4*n4*q13^2-8*M`j'^2*q23+8*M`j'^2*n4*q23+8*q12*q23-8*n4*q12*q23+8*q13*q23-8*n4*q13*q23+4*q23^2-4*n4*q23^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q12*q33-4*n4*q12*q33+4*q13*q33-4*n4*q13*q33+4*q23*q33-4*n4*q23*q33+q33^2-n4*q33^2)+prf(-2*M`j'^2-2*M`j'^2*n2+2*M`j'^2*n4-10*q12+2*n1*q12+4*n2*q12+2*n3*q12+2*n4*q12-10*q13+2*n1*q13+4*n2*q13+2*n3*q13+2*n4*q13-10*q23+2*n1*q23+4*n2*q23+2*n3*q23+2*n4*q23-5*q33+n1*q33+2*n2*q33+n3*q33+n4*q33,-8*M`j'^2*q12+8*M`j'^2*n4*q12+4*q12^2-4*n4*q12^2-8*M`j'^2*q13+8*M`j'^2*n4*q13+8*q12*q13-8*n4*q12*q13+4*q13^2-4*n4*q13^2-8*M`j'^2*q23+8*M`j'^2*n4*q23+8*q12*q23-8*n4*q12*q23+8*q13*q23-8*n4*q13*q23+4*q23^2-4*n4*q23^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q12*q33-4*n4*q12*q33+4*q13*q33-4*n4*q13*q33+4*q23*q33-4*n4*q23*q33+q33^2-n4*q33^2))+mbox1l(1+n1,n2,n3,-1+n4)*prf(-8*M`j'^2*n1*q12+4*n1*q12^2-4*M`j'^2*n1*q13+4*n1*q12*q13-4*M`j'^2*n1*q23+4*n1*q12*q23+2*n1*q12*q33,-8*M`j'^2*q12+8*M`j'^2*n4*q12+4*q12^2-4*n4*q12^2-8*M`j'^2*q13+8*M`j'^2*n4*q13+8*q12*q13-8*n4*q12*q13+4*q13^2-4*n4*q13^2-8*M`j'^2*q23+8*M`j'^2*n4*q23+8*q12*q23-8*n4*q12*q23+8*q13*q23-8*n4*q13*q23+4*q23^2-4*n4*q23^2-4*M`j'^2*q33+4*M`j'^2*n4*q33+4*q12*q33-4*n4*q12*q33+4*q13*q33-4*n4*q13*q33+4*q23*q33-4*n4*q23*q33+q33^2-n4*q33^2);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?{,>1},n3?neg0_,n4?pos_) = mbox1l(1+n1,-2+n2,n3,n4)*prf(2*M`j'^2*n1,-8*M`j'^2*q12+8*M`j'^2*n2*q12+4*q12^2-4*n2*q12^2-8*M`j'^2*q13+8*M`j'^2*n2*q13+8*q12*q13-8*n2*q12*q13+4*q13^2-4*n2*q13^2-8*M`j'^2*q23+8*M`j'^2*n2*q23+8*q12*q23-8*n2*q12*q23+8*q13*q23-8*n2*q13*q23+4*q23^2-4*n2*q23^2-4*M`j'^2*q33+4*M`j'^2*n2*q33+4*q12*q33-4*n2*q12*q33+4*q13*q33-4*n2*q13*q33+4*q23*q33-4*n2*q23*q33+q33^2-n2*q33^2)+mbox1l(n1,-2+n2,1+n3,n4)*prf(2*M`j'^2*n3,-8*M`j'^2*q12+8*M`j'^2*n2*q12+4*q12^2-4*n2*q12^2-8*M`j'^2*q13+8*M`j'^2*n2*q13+8*q12*q13-8*n2*q12*q13+4*q13^2-4*n2*q13^2-8*M`j'^2*q23+8*M`j'^2*n2*q23+8*q12*q23-8*n2*q12*q23+8*q13*q23-8*n2*q13*q23+4*q23^2-4*n2*q23^2-4*M`j'^2*q33+4*M`j'^2*n2*q33+4*q12*q33-4*n2*q12*q33+4*q13*q33-4*n2*q13*q33+4*q23*q33-4*n2*q23*q33+q33^2-n2*q33^2)+mbox1l(n1,-2+n2,n3,1+n4)*prf(2*M`j'^2*n4,-8*M`j'^2*q12+8*M`j'^2*n2*q12+4*q12^2-4*n2*q12^2-8*M`j'^2*q13+8*M`j'^2*n2*q13+8*q12*q13-8*n2*q12*q13+4*q13^2-4*n2*q13^2-8*M`j'^2*q23+8*M`j'^2*n2*q23+8*q12*q23-8*n2*q12*q23+8*q13*q23-8*n2*q13*q23+4*q23^2-4*n2*q23^2-4*M`j'^2*q33+4*M`j'^2*n2*q33+4*q12*q33-4*n2*q12*q33+4*q13*q33-4*n2*q13*q33+4*q23*q33-4*n2*q23*q33+q33^2-n2*q33^2)+mbox1l(n1,n2,n3,-1+n4)*prf(-2*M`j'^2+2*q12+2*q13+2*q23+q33,8*M`j'^2*q12-4*q12^2+8*M`j'^2*q13-8*q12*q13-4*q13^2+8*M`j'^2*q23-8*q12*q23-8*q13*q23-4*q23^2+4*M`j'^2*q33-4*q12*q33-4*q13*q33-4*q23*q33-q33^2)+mbox1l(1+n1,-1+n2,n3,-1+n4)*prf(-2*M`j'^2*n1+2*n1*q12+2*n1*q13+2*n1*q23+n1*q33,-8*M`j'^2*q12+8*M`j'^2*n2*q12+4*q12^2-4*n2*q12^2-8*M`j'^2*q13+8*M`j'^2*n2*q13+8*q12*q13-8*n2*q12*q13+4*q13^2-4*n2*q13^2-8*M`j'^2*q23+8*M`j'^2*n2*q23+8*q12*q23-8*n2*q12*q23+8*q13*q23-8*n2*q13*q23+4*q23^2-4*n2*q23^2-4*M`j'^2*q33+4*M`j'^2*n2*q33+4*q12*q33-4*n2*q12*q33+4*q13*q33-4*n2*q13*q33+4*q23*q33-4*n2*q23*q33+q33^2-n2*q33^2)+mbox1l(n1,-1+n2,1+n3,-1+n4)*prf(-2*M`j'^2*n3+2*n3*q12+2*n3*q13+2*n3*q23+n3*q33,-8*M`j'^2*q12+8*M`j'^2*n2*q12+4*q12^2-4*n2*q12^2-8*M`j'^2*q13+8*M`j'^2*n2*q13+8*q12*q13-8*n2*q12*q13+4*q13^2-4*n2*q13^2-8*M`j'^2*q23+8*M`j'^2*n2*q23+8*q12*q23-8*n2*q12*q23+8*q13*q23-8*n2*q13*q23+4*q23^2-4*n2*q23^2-4*M`j'^2*q33+4*M`j'^2*n2*q33+4*q12*q33-4*n2*q12*q33+4*q13*q33-4*n2*q13*q33+4*q23*q33-4*n2*q23*q33+q33^2-n2*q33^2)+mbox1l(n1,-1+n2,n3,n4)*(tmpprf(ep,1)*prf(4*q12+4*q13+4*q23+2*q33,-8*M`j'^2*q12+8*M`j'^2*n2*q12+4*q12^2-4*n2*q12^2-8*M`j'^2*q13+8*M`j'^2*n2*q13+8*q12*q13-8*n2*q12*q13+4*q13^2-4*n2*q13^2-8*M`j'^2*q23+8*M`j'^2*n2*q23+8*q12*q23-8*n2*q12*q23+8*q13*q23-8*n2*q13*q23+4*q23^2-4*n2*q23^2-4*M`j'^2*q33+4*M`j'^2*n2*q33+4*q12*q33-4*n2*q12*q33+4*q13*q33-4*n2*q13*q33+4*q23*q33-4*n2*q23*q33+q33^2-n2*q33^2)+prf(-2*M`j'^2+2*M`j'^2*n2-2*M`j'^2*n4-10*q12+2*n1*q12+2*n2*q12+2*n3*q12+4*n4*q12-10*q13+2*n1*q13+2*n2*q13+2*n3*q13+4*n4*q13-10*q23+2*n1*q23+2*n2*q23+2*n3*q23+4*n4*q23-5*q33+n1*q33+n2*q33+n3*q33+2*n4*q33,-8*M`j'^2*q12+8*M`j'^2*n2*q12+4*q12^2-4*n2*q12^2-8*M`j'^2*q13+8*M`j'^2*n2*q13+8*q12*q13-8*n2*q12*q13+4*q13^2-4*n2*q13^2-8*M`j'^2*q23+8*M`j'^2*n2*q23+8*q12*q23-8*n2*q12*q23+8*q13*q23-8*n2*q13*q23+4*q23^2-4*n2*q23^2-4*M`j'^2*q33+4*M`j'^2*n2*q33+4*q12*q33-4*n2*q12*q33+4*q13*q33-4*n2*q13*q33+4*q23*q33-4*n2*q23*q33+q33^2-n2*q33^2))+mbox1l(1+n1,-1+n2,n3,n4)*prf(-4*M`j'^2*n1*q13-4*M`j'^2*n1*q23-4*M`j'^2*n1*q33+2*n1*q12*q33+2*n1*q13*q33+2*n1*q23*q33+n1*q33^2,-8*M`j'^2*q12+8*M`j'^2*n2*q12+4*q12^2-4*n2*q12^2-8*M`j'^2*q13+8*M`j'^2*n2*q13+8*q12*q13-8*n2*q12*q13+4*q13^2-4*n2*q13^2-8*M`j'^2*q23+8*M`j'^2*n2*q23+8*q12*q23-8*n2*q12*q23+8*q13*q23-8*n2*q13*q23+4*q23^2-4*n2*q23^2-4*M`j'^2*q33+4*M`j'^2*n2*q33+4*q12*q33-4*n2*q12*q33+4*q13*q33-4*n2*q13*q33+4*q23*q33-4*n2*q23*q33+q33^2-n2*q33^2)+mbox1l(n1,-1+n2,1+n3,n4)*prf(-4*M`j'^2*n3*q12-8*M`j'^2*n3*q13+4*n3*q12*q13+4*n3*q13^2-4*M`j'^2*n3*q23+4*n3*q13*q23-4*M`j'^2*n3*q33+2*n3*q12*q33+4*n3*q13*q33+2*n3*q23*q33+n3*q33^2,-8*M`j'^2*q12+8*M`j'^2*n2*q12+4*q12^2-4*n2*q12^2-8*M`j'^2*q13+8*M`j'^2*n2*q13+8*q12*q13-8*n2*q12*q13+4*q13^2-4*n2*q13^2-8*M`j'^2*q23+8*M`j'^2*n2*q23+8*q12*q23-8*n2*q12*q23+8*q13*q23-8*n2*q13*q23+4*q23^2-4*n2*q23^2-4*M`j'^2*q33+4*M`j'^2*n2*q33+4*q12*q33-4*n2*q12*q33+4*q13*q33-4*n2*q13*q33+4*q23*q33-4*n2*q23*q33+q33^2-n2*q33^2);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?pos_,n3?neg_,n4?pos_) = mbox1l(n1,n2,1+n3,-1+n4)*prf(-(q12*q13)+q12*q23,-q13^2-2*q13*q23-q23^2+2*q12*q33)+mbox1l(-1+n1,n2,2+n3,-1+n4)*prf(-q12^2-n3*q12^2-q12*q23-n3*q12*q23,-q13^2+n1*q13^2-2*q13*q23+2*n1*q13*q23-q23^2+n1*q23^2+2*q12*q33-2*n1*q12*q33)+mbox1l(-2+n1,n2,2+n3,n4)*prf(q12^2+n3*q12^2+2*q12*q23+2*n3*q12*q23+q23^2+n3*q23^2,-q13^2+n1*q13^2-2*q13*q23+2*n1*q13*q23-q23^2+n1*q23^2+2*q12*q33-2*n1*q12*q33)+mbox1l(n1,-1+n2,1+n3,n4)*prf(q13^2+q13*q23-q12*q33,q13^2+2*q13*q23+q23^2-2*q12*q33)+mbox1l(-1+n1,-1+n2,2+n3,n4)*prf(-(q12*q13)-n3*q12*q13+q13*q23+n3*q13*q23-q12*q33-n3*q12*q33,-q13^2+n1*q13^2-2*q13*q23+2*n1*q13*q23-q23^2+n1*q23^2+2*q12*q33-2*n1*q12*q33)+mbox1l(-1+n1,n2,1+n3,n4)*prf(2*q12*q13-n1*q12*q13+n3*q12*q13-2*q12*q23+n1*q12*q23-n3*q12*q23-2*q13*q23+n1*q13*q23-n3*q13*q23-2*q23^2+n1*q23^2-n3*q23^2+2*q12*q33-n1*q12*q33+n3*q12*q33,-q13^2+n1*q13^2-2*q13*q23+2*n1*q13*q23-q23^2+n1*q23^2+2*q12*q33-2*n1*q12*q33)+mbox1l(n1,n2,1+n3,n4)*prf(-2*q12*q13^2-2*q12*q13*q23+2*q12^2*q33-q12*q13*q33+q12*q23*q33,-q13^2-2*q13*q23-q23^2+2*q12*q33)+mbox1l(-1+n1,n2,2+n3,n4)*prf(-2*q12^2*q13-2*n3*q12^2*q13-2*q12*q13*q23-2*n3*q12*q13*q23-q12^2*q33-n3*q12^2*q33-q12*q23*q33-n3*q12*q23*q33,-q13^2+n1*q13^2-2*q13*q23+2*n1*q13*q23-q23^2+n1*q23^2+2*q12*q33-2*n1*q12*q33);
	Identify,ifmatch->jump mbox1l(n1?neg_,1,0,1) = tmpprf(1,-1+2*ep+n1)*mbox1l(n1,0,0,2)*prf(-2*M`j'^2,2*q12+2*q13+2*q23+q33)+tmpprf(1,-1+2*ep+n1)*mbox1l(1+n1,0,0,1)*prf(-2*M`j'^2*n1,2*q12+2*q13+2*q23+q33)+tmpprf(1,-1+2*ep+n1)*mbox1l(1+n1,0,0,2)*prf(2*M`j'^2*q13+2*M`j'^2*q23,2*q12+2*q13+2*q23+q33)+mbox1l(1+n1,1,0,1)*(tmpprf(ep,-1+2*ep+n1)*prf(2*q13+2*q23,1)+tmpprf(1,-1+2*ep+n1)*prf(2*n1*q13+2*n1*q23,1))+tmpprf(1,-1+2*ep+n1)*mbox1l(2+n1,1,0,0)*prf(2*M`j'^2*q13+2*M`j'^2*n1*q13+2*M`j'^2*q23+2*M`j'^2*n1*q23,2*q12+2*q13+2*q23+q33)+tmpprf(1,-1+2*ep+n1)*mbox1l(n1,2,0,0)*prf(2*M`j'^2-2*q12-2*q13-2*q23-q33,2*q12+2*q13+2*q23+q33)+tmpprf(1,-1+2*ep+n1)*mbox1l(1+n1,1,0,0)*prf(2*M`j'^2*n1-2*n1*q12-2*n1*q13-2*n1*q23-n1*q33,2*q12+2*q13+2*q23+q33)+tmpprf(1,-1+2*ep+n1)*mbox1l(1+n1,2,0,0)*prf(8*M`j'^2*q12-4*q12^2+2*M`j'^2*q13-4*q12*q13+2*M`j'^2*q23-4*q12*q23-2*q12*q33,2*q12+2*q13+2*q23+q33)+tmpprf(1,-1+2*ep+n1)*mbox1l(2+n1,0,0,1)*prf(2*M`j'^2*q13+2*M`j'^2*n1*q13+2*M`j'^2*q23+2*M`j'^2*n1*q23+4*M`j'^2*q33+4*M`j'^2*n1*q33-2*q12*q33-2*n1*q12*q33-2*q13*q33-2*n1*q13*q33-2*q23*q33-2*n1*q23*q33-q33^2-n1*q33^2,2*q12+2*q13+2*q23+q33)+tmpprf(1,-1+2*ep+n1)*mbox1l(2+n1,1,0,1)*prf(-4*M`j'^2*q13^2-4*M`j'^2*n1*q13^2-8*M`j'^2*q13*q23-8*M`j'^2*n1*q13*q23-4*M`j'^2*q23^2-4*M`j'^2*n1*q23^2+8*M`j'^2*q12*q33+8*M`j'^2*n1*q12*q33-4*q12^2*q33-4*n1*q12^2*q33-4*q12*q13*q33-4*n1*q12*q13*q33-4*q12*q23*q33-4*n1*q12*q23*q33-2*q12*q33^2-2*n1*q12*q33^2,2*q12+2*q13+2*q23+q33);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?pos_,n3?{,>1},n4?neg_) = mbox1l(1+n1,-1+n2,-1+n3,1+n4)*prf(n1*q13,-q12+n3*q12)+mbox1l(-1+n1,1+n2,-1+n3,1+n4)*prf(-(n2*q12)-n2*q23,-q12+n3*q12)+mbox1l(1+n1,n2,-1+n3,1+n4)*prf(4*n1*q13+n1*q33,-1+n3)+mbox1l(n1,1+n2,-1+n3,1+n4)*prf(-2*n2*q12+2*n2*q13-2*n2*q23+n2*q33,-1+n3)+mbox1l(n1,-1+n2,-1+n3,2+n4)*prf(q13+n4*q13+q33+n4*q33,-q12+n3*q12)+mbox1l(-1+n1,n2,-1+n3,2+n4)*prf(-q12-n4*q12+2*q13+2*n4*q13-q23-n4*q23+q33+n4*q33,-q12+n3*q12)+mbox1l(1+n1,n2,-2+n3,1+n4)*prf(2*M`j'^2*n1*q12-4*M`j'^2*n1*q13-2*n1*q12*q13-n1*q12*q33,-2*M`j'^2*q12+2*M`j'^2*n3*q12)+mbox1l(n1,1+n2,-2+n3,1+n4)*prf(2*M`j'^2*n2*q12-2*n2*q12*q13+4*M`j'^2*n2*q23-n2*q12*q33,-2*M`j'^2*q12+2*M`j'^2*n3*q12)+mbox1l(n1,n2,-2+n3,2+n4)*prf(2*M`j'^2*q12+2*M`j'^2*n4*q12-4*M`j'^2*q13-4*M`j'^2*n4*q13-2*q12*q13-2*n4*q12*q13-4*M`j'^2*q33-4*M`j'^2*n4*q33-q12*q33-n4*q12*q33,-2*M`j'^2*q12+2*M`j'^2*n3*q12)+mbox1l(n1,n2,-1+n3,1+n4)*(tmpprf(ep,1)*prf(-4*q12*q13-2*q12*q33,-2*M`j'^2*q12+2*M`j'^2*n3*q12)+prf(-2*M`j'^2*q12-2*M`j'^2*n1*q12+2*M`j'^2*n3*q12-2*M`j'^2*q13+2*M`j'^2*n1*q13-2*M`j'^2*n4*q13+10*q12*q13-2*n1*q12*q13-2*n2*q12*q13-4*n3*q12*q13-2*n4*q12*q13+2*M`j'^2*q23-2*M`j'^2*n2*q23+2*M`j'^2*n4*q23+5*q12*q33-n1*q12*q33-n2*q12*q33-2*n3*q12*q33-n4*q12*q33,-2*M`j'^2*q12+2*M`j'^2*n3*q12))+mbox1l(n1,n2,-1+n3,2+n4)*prf(12*M`j'^2*q12*q13+12*M`j'^2*n4*q12*q13-4*M`j'^2*q13^2-4*M`j'^2*n4*q13^2-4*q12*q13^2-4*n4*q12*q13^2+4*M`j'^2*q13*q23+4*M`j'^2*n4*q13*q23+6*M`j'^2*q12*q33+6*M`j'^2*n4*q12*q33-2*M`j'^2*q13*q33-2*M`j'^2*n4*q13*q33-4*q12*q13*q33-4*n4*q12*q13*q33+2*M`j'^2*q23*q33+2*M`j'^2*n4*q23*q33-q12*q33^2-n4*q12*q33^2,-2*M`j'^2*q12+2*M`j'^2*n3*q12);
	Identify,ifmatch->jump mbox1l(n1?neg_,n2?pos_,n3?{,>1},n4?neg0_) = mbox1l(2+n1,n2,-2+n3,n4)*prf(1+n1,-1+n3)+mbox1l(n1,1+n2,-1+n3,n4)*prf(-n2,-1+n3)+mbox1l(1+n1,1+n2,-2+n3,n4)*prf(n2,-1+n3)+mbox1l(1+n1,n2,-1+n3,n4)*prf(-2-n1+n3,-1+n3)+mbox1l(n1,n2,-1+n3,1+n4)*prf(-n4,-1+n3)+mbox1l(1+n1,n2,-2+n3,1+n4)*prf(n4,-1+n3)+mbox1l(1+n1,1+n2,-1+n3,n4)*prf(-2*n2*q12,-1+n3)+mbox1l(1+n1,n2,-1+n3,1+n4)*prf(2*n4*q13,-1+n3);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?{,>1},n3?pos_,n4?neg_) = mbox1l(1+n1,-1+n2,-1+n3,1+n4)*prf(n1*q13,-q12+n2*q12)+mbox1l(n1,-1+n2,n3,1+n4)*prf(q13-n1*q13+n4*q13,-q12+n2*q12)+mbox1l(n1,n2,-1+n3,1+n4)*prf(-q23,q12)+mbox1l(-1+n1,n2,n3,1+n4)*prf(q12+q23,q12)+mbox1l(n1,n2,n3,1+n4)*prf(-2*q13-q33,1)+mbox1l(-1+n1,-1+n2,n3,2+n4)*prf(-2*q13-2*n4*q13-q33-n4*q33,-q12+n2*q12)+mbox1l(n1,-1+n2,-1+n3,2+n4)*prf(q13+n4*q13+q33+n4*q33,-q12+n2*q12)+mbox1l(n1,-1+n2,n3,2+n4)*prf(2*q13^2+2*n4*q13^2+q13*q33+n4*q13*q33,-q12+n2*q12);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?pos_,n3?{,>1},n4?neg0_) = mbox1l(1+n1,n2,-1+n3,n4)*prf(-n1,-1+n3)+mbox1l(1+n1,n2,-2+n3,n4)*prf(n1,-2*M`j'^2+2*M`j'^2*n3)+mbox1l(n1,1+n2,-1+n3,n4)*prf(-n2,-1+n3)+mbox1l(n1,1+n2,-2+n3,n4)*prf(n2,-2*M`j'^2+2*M`j'^2*n3)+mbox1l(n1,n2,-2+n3,1+n4)*prf(n4,-2*M`j'^2+2*M`j'^2*n3)+mbox1l(n1,n2,-1+n3,n4)*(tmpprf(ep,1)*prf(1,-M`j'^2+M`j'^2*n3)+prf(-6+n1+n2+2*n3+n4,-2*M`j'^2+2*M`j'^2*n3))+mbox1l(n1,n2,-1+n3,1+n4)*prf(-2*M`j'^2*n4+2*n4*q13+n4*q33,-2*M`j'^2+2*M`j'^2*n3);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?pos_,n3?{,>1},n4?neg0_) = mbox1l(1+n1,n2,-1+n3,n4)*prf(-n1,-1+n3)+mbox1l(1+n1,1+n2,-2+n3,n4)*prf(n1,-1+n3)+mbox1l(n1,2+n2,-2+n3,n4)*prf(1+n2,-1+n3)+mbox1l(n1,1+n2,-1+n3,n4)*prf(-2-n2+n3,-1+n3)+mbox1l(n1,n2,-1+n3,1+n4)*prf(-n4,-1+n3)+mbox1l(n1,1+n2,-2+n3,1+n4)*prf(n4,-1+n3)+mbox1l(1+n1,1+n2,-1+n3,n4)*prf(-2*n1*q12,-1+n3)+mbox1l(n1,1+n2,-1+n3,1+n4)*prf(-2*n4*q12-2*n4*q23,-1+n3);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?pos_,n3?pos_,n4?neg_) = mbox1l(n1,-1+n2,n3,1+n4)*prf(-q13,q12)+mbox1l(n1,n2,-1+n3,1+n4)*prf(q13,q12)+mbox1l(-1+n1,1+n2,-1+n3,1+n4)*prf(-(n2*q23),-q12+n1*q12)+mbox1l(-1+n1,n2,n3,1+n4)*prf(-2*q12+n1*q12-n4*q12-q23+n2*q23-n4*q23,-q12+n1*q12)+mbox1l(-2+n1,n2,n3,2+n4)*prf(q12+n4*q12+q23+n4*q23,-q12+n1*q12)+mbox1l(n1,n2,n3,1+n4)*prf(-2*q13-q33,1)+mbox1l(-1+n1,-1+n2,n3,2+n4)*prf(-q13-n4*q13-q33-n4*q33,-q12+n1*q12)+mbox1l(-1+n1,n2,-1+n3,2+n4)*prf(q13+n4*q13+q33+n4*q33,-q12+n1*q12)+mbox1l(-1+n1,n2,n3,2+n4)*prf(-2*q12*q13-2*n4*q12*q13-2*q13*q23-2*n4*q13*q23-q12*q33-n4*q12*q33-q23*q33-n4*q23*q33,-q12+n1*q12);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?pos_,n3?pos_,n4?neg0_) = mbox1l(1+n1,n2,-1+n3,n4)*prf(n1,n1-n2)+mbox1l(n1,1+n2,-1+n3,n4)*prf(-n2,n1-n2)+mbox1l(n1,-1+n2,n3,1+n4)*prf(-(n4*q13),n1*q12-n2*q12)+mbox1l(-1+n1,n2,n3,1+n4)*prf(-(n4*q12)-n4*q23,n1*q12-n2*q12)+mbox1l(n1,n2,-1+n3,1+n4)*prf(n4*q12+n4*q13+n4*q23,n1*q12-n2*q12);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?neg0_,n3?neg_,n4?{,>1}) = mbox1l(1+n1,n2,1+n3,-2+n4)*prf(-2*M`j'^2*n1*q13,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2)+mbox1l(n1,-1+n2,2+n3,-1+n4)*prf(-q13^3-n3*q13^3-q13^2*q23-n3*q13^2*q23,q13^2*q33-n4*q13^2*q33+2*q13*q23*q33-2*n4*q13*q23*q33+q23^2*q33-n4*q23^2*q33-2*q12*q33^2+2*n4*q12*q33^2)+mbox1l(n1,n2,2+n3,-2+n4)*prf(-4*M`j'^2*q12*q13^2-4*M`j'^2*n3*q12*q13^2+2*M`j'^2*q13^3+2*M`j'^2*n3*q13^3-4*M`j'^2*q12*q13*q23-4*M`j'^2*n3*q12*q13*q23+4*M`j'^2*q13^2*q23+4*M`j'^2*n3*q13^2*q23+2*M`j'^2*q13*q23^2+2*M`j'^2*n3*q13*q23^2-4*M`j'^2*q12*q13*q33-4*M`j'^2*n3*q12*q13*q33+q12*q13^2*q33+n3*q12*q13^2*q33+q12*q13*q23*q33+n3*q12*q13*q23*q33,4*M`j'^2*q13^2*q33-4*M`j'^2*n4*q13^2*q33+8*M`j'^2*q13*q23*q33-8*M`j'^2*n4*q13*q23*q33+4*M`j'^2*q23^2*q33-4*M`j'^2*n4*q23^2*q33-8*M`j'^2*q12*q33^2+8*M`j'^2*n4*q12*q33^2-q13^2*q33^2+n4*q13^2*q33^2-2*q13*q23*q33^2+2*n4*q13*q23*q33^2-q23^2*q33^2+n4*q23^2*q33^2+2*q12*q33^3-2*n4*q12*q33^3)+mbox1l(-1+n1,n2,1+n3,n4)*prf(6*M`j'^2*q13+4*M`j'^2*q33-2*q13*q33-q33^2,4*M`j'^2*q33-q33^2)+mbox1l(n1,1+n2,1+n3,-2+n4)*prf(-8*M`j'^2*n2*q12*q13^2+2*M`j'^2*n2*q13^3-8*M`j'^2*n2*q12*q13*q23+4*M`j'^2*n2*q13^2*q23+2*M`j'^2*n2*q13*q23^2+8*M`j'^2*n2*q12^2*q33-4*M`j'^2*n2*q12*q13*q33+2*n2*q12*q13^2*q33+2*n2*q12*q13*q23*q33-2*n2*q12^2*q33^2,4*M`j'^2*q13^2*q33-4*M`j'^2*n4*q13^2*q33+8*M`j'^2*q13*q23*q33-8*M`j'^2*n4*q13*q23*q33+4*M`j'^2*q23^2*q33-4*M`j'^2*n4*q23^2*q33-8*M`j'^2*q12*q33^2+8*M`j'^2*n4*q12*q33^2-q13^2*q33^2+n4*q13^2*q33^2-2*q13*q23*q33^2+2*n4*q13*q23*q33^2-q23^2*q33^2+n4*q23^2*q33^2+2*q12*q33^3-2*n4*q12*q33^3)+mbox1l(-1+n1,1+n2,1+n3,-1+n4)*prf(8*M`j'^2*n2*q12*q13^2+2*M`j'^2*n2*q13^3+8*M`j'^2*n2*q12*q13*q23+4*M`j'^2*n2*q13^2*q23+2*M`j'^2*n2*q13*q23^2-8*M`j'^2*n2*q12^2*q33-2*n2*q12*q13^2*q33-4*M`j'^2*n2*q12*q23*q33-2*n2*q12*q13*q23*q33+2*n2*q12^2*q33^2-n2*q12*q13*q33^2+n2*q12*q23*q33^2,4*M`j'^2*q13^2*q33-4*M`j'^2*n4*q13^2*q33+8*M`j'^2*q13*q23*q33-8*M`j'^2*n4*q13*q23*q33+4*M`j'^2*q23^2*q33-4*M`j'^2*n4*q23^2*q33-8*M`j'^2*q12*q33^2+8*M`j'^2*n4*q12*q33^2-q13^2*q33^2+n4*q13^2*q33^2-2*q13*q23*q33^2+2*n4*q13*q23*q33^2-q23^2*q33^2+n4*q23^2*q33^2+2*q12*q33^3-2*n4*q12*q33^3)+mbox1l(-1+n1,n2,2+n3,-1+n4)*prf(4*M`j'^2*q12*q13^2+4*M`j'^2*n3*q12*q13^2+2*M`j'^2*q13^3+2*M`j'^2*n3*q13^3+4*M`j'^2*q12*q13*q23+4*M`j'^2*n3*q12*q13*q23-2*M`j'^2*q13*q23^2-2*M`j'^2*n3*q13*q23^2-q12*q13^2*q33-n3*q12*q13^2*q33+4*M`j'^2*q12*q23*q33+4*M`j'^2*n3*q12*q23*q33-q12*q13*q23*q33-n3*q12*q13*q23*q33+q13^2*q23*q33+n3*q13^2*q23*q33+q13*q23^2*q33+n3*q13*q23^2*q33-q12*q13*q33^2-n3*q12*q13*q33^2-q12*q23*q33^2-n3*q12*q23*q33^2,4*M`j'^2*q13^2*q33-4*M`j'^2*n4*q13^2*q33+8*M`j'^2*q13*q23*q33-8*M`j'^2*n4*q13*q23*q33+4*M`j'^2*q23^2*q33-4*M`j'^2*n4*q23^2*q33-8*M`j'^2*q12*q33^2+8*M`j'^2*n4*q12*q33^2-q13^2*q33^2+n4*q13^2*q33^2-2*q13*q23*q33^2+2*n4*q13*q23*q33^2-q23^2*q33^2+n4*q23^2*q33^2+2*q12*q33^3-2*n4*q12*q33^3)+mbox1l(n1,n2,1+n3,-1+n4)*(tmpprf(ep,1)*prf(2*q13^3*q33+4*q13^2*q23*q33+2*q13*q23^2*q33-4*q12*q13*q33^2,4*M`j'^2*q13^2*q33-4*M`j'^2*n4*q13^2*q33+8*M`j'^2*q13*q23*q33-8*M`j'^2*n4*q13*q23*q33+4*M`j'^2*q23^2*q33-4*M`j'^2*n4*q23^2*q33-8*M`j'^2*q12*q33^2+8*M`j'^2*n4*q12*q33^2-q13^2*q33^2+n4*q13^2*q33^2-2*q13*q23*q33^2+2*n4*q13*q23*q33^2-q23^2*q33^2+n4*q23^2*q33^2+2*q12*q33^3-2*n4*q12*q33^3)+prf(-6*M`j'^2*q13^3-2*M`j'^2*n1*q13^3-4*M`j'^2*n2*q13^3+6*M`j'^2*n4*q13^3-12*M`j'^2*q13^2*q23-4*M`j'^2*n1*q13^2*q23-8*M`j'^2*n2*q13^2*q23+12*M`j'^2*n4*q13^2*q23-6*M`j'^2*q13*q23^2-2*M`j'^2*n1*q13*q23^2-4*M`j'^2*n2*q13*q23^2+6*M`j'^2*n4*q13*q23^2+16*M`j'^2*q12*q13*q33+4*M`j'^2*n1*q12*q13*q33+4*M`j'^2*n2*q12*q13*q33+4*M`j'^2*n3*q12*q13*q33-12*M`j'^2*n4*q12*q13*q33-3*q13^3*q33+2*n1*q13^3*q33+2*n2*q13^3*q33+n3*q13^3*q33-4*M`j'^2*q12*q23*q33+4*M`j'^2*n2*q12*q23*q33-4*M`j'^2*n3*q12*q23*q33-6*q13^2*q23*q33+4*n1*q13^2*q23*q33+4*n2*q13^2*q23*q33+2*n3*q13^2*q23*q33-3*q13*q23^2*q33+2*n1*q13*q23^2*q33+2*n2*q13*q23^2*q33+n3*q13*q23^2*q33+5*q12*q13*q33^2-4*n1*q12*q13*q33^2-3*n2*q12*q13*q33^2-3*n3*q12*q13*q33^2+q12*q23*q33^2-n2*q12*q23*q33^2+n3*q12*q23*q33^2,4*M`j'^2*q13^2*q33-4*M`j'^2*n4*q13^2*q33+8*M`j'^2*q13*q23*q33-8*M`j'^2*n4*q13*q23*q33+4*M`j'^2*q23^2*q33-4*M`j'^2*n4*q23^2*q33-8*M`j'^2*q12*q33^2+8*M`j'^2*n4*q12*q33^2-q13^2*q33^2+n4*q13^2*q33^2-2*q13*q23*q33^2+2*n4*q13*q23*q33^2-q23^2*q33^2+n4*q23^2*q33^2+2*q12*q33^3-2*n4*q12*q33^3))+mbox1l(n1,n2,2+n3,-1+n4)*prf(-8*M`j'^2*q12*q13^3-8*M`j'^2*n3*q12*q13^3+4*M`j'^2*q13^4+4*M`j'^2*n3*q13^4-8*M`j'^2*q12*q13^2*q23-8*M`j'^2*n3*q12*q13^2*q23+8*M`j'^2*q13^3*q23+8*M`j'^2*n3*q13^3*q23+4*M`j'^2*q13^2*q23^2+4*M`j'^2*n3*q13^2*q23^2-12*M`j'^2*q12*q13^2*q33-12*M`j'^2*n3*q12*q13^2*q33+2*q12*q13^3*q33+2*n3*q12*q13^3*q33-4*M`j'^2*q12*q13*q23*q33-4*M`j'^2*n3*q12*q13*q23*q33+2*q12*q13^2*q23*q33+2*n3*q12*q13^2*q23*q33+q12*q13^2*q33^2+n3*q12*q13^2*q33^2+q12*q13*q23*q33^2+n3*q12*q13*q23*q33^2,4*M`j'^2*q13^2*q33-4*M`j'^2*n4*q13^2*q33+8*M`j'^2*q13*q23*q33-8*M`j'^2*n4*q13*q23*q33+4*M`j'^2*q23^2*q33-4*M`j'^2*n4*q23^2*q33-8*M`j'^2*q12*q33^2+8*M`j'^2*n4*q12*q33^2-q13^2*q33^2+n4*q13^2*q33^2-2*q13*q23*q33^2+2*n4*q13*q23*q33^2-q23^2*q33^2+n4*q23^2*q33^2+2*q12*q33^3-2*n4*q12*q33^3)+mbox1l(n1,1+n2,1+n3,-1+n4)*prf(-8*M`j'^2*n2*q12*q13^3+4*M`j'^2*n2*q13^4-16*M`j'^2*n2*q12*q13^2*q23+12*M`j'^2*n2*q13^3*q23-8*M`j'^2*n2*q12*q13*q23^2+12*M`j'^2*n2*q13^2*q23^2+4*M`j'^2*n2*q13*q23^3+8*M`j'^2*n2*q12^2*q13*q33-16*M`j'^2*n2*q12*q13^2*q33+4*n2*q12*q13^3*q33+8*M`j'^2*n2*q12^2*q23*q33-16*M`j'^2*n2*q12*q13*q23*q33+8*n2*q12*q13^2*q23*q33+4*n2*q12*q13*q23^2*q33+8*M`j'^2*n2*q12^2*q33^2-6*n2*q12^2*q13*q33^2+2*n2*q12*q13^2*q33^2-2*n2*q12^2*q23*q33^2+2*n2*q12*q13*q23*q33^2-2*n2*q12^2*q33^3,4*M`j'^2*q13^2*q33-4*M`j'^2*n4*q13^2*q33+8*M`j'^2*q13*q23*q33-8*M`j'^2*n4*q13*q23*q33+4*M`j'^2*q23^2*q33-4*M`j'^2*n4*q23^2*q33-8*M`j'^2*q12*q33^2+8*M`j'^2*n4*q12*q33^2-q13^2*q33^2+n4*q13^2*q33^2-2*q13*q23*q33^2+2*n4*q13*q23*q33^2-q23^2*q33^2+n4*q23^2*q33^2+2*q12*q33^3-2*n4*q12*q33^3);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?neg_,n3?neg0_,n4?{,>1}) = mbox1l(n1,n2,1+n3,-1+n4)*prf(n3*q13,-q33+n4*q33)+mbox1l(1+n1,1+n2,n3,-2+n4)*prf(-4*M`j'^2*n1*q12-2*M`j'^2*n1*q13-2*M`j'^2*n1*q23,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2)+mbox1l(-1+n1,2+n2,n3,-1+n4)*prf(-4*M`j'^2*q12-4*M`j'^2*n2*q12-2*M`j'^2*q13-2*M`j'^2*n2*q13-2*M`j'^2*q23-2*M`j'^2*n2*q23,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2)+mbox1l(n1,2+n2,n3,-2+n4)*prf(4*M`j'^2*q12+4*M`j'^2*n2*q12-2*M`j'^2*q13-2*M`j'^2*n2*q13-2*M`j'^2*q23-2*M`j'^2*n2*q23-2*q12*q33-2*n2*q12*q33,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2)+mbox1l(n1,1+n2,1+n3,-2+n4)*prf(-2*M`j'^2*n3*q13-2*M`j'^2*n3*q23-n3*q12*q33,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2)+mbox1l(-1+n1,1+n2,1+n3,-1+n4)*prf(-2*M`j'^2*n3*q13+2*M`j'^2*n3*q23-n3*q12*q33-n3*q23*q33,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2)+mbox1l(n1,1+n2,n3,-1+n4)*(tmpprf(ep,1)*prf(-4*q12*q33-2*q13*q33-2*q23*q33,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2)+prf(4*M`j'^2*q12+4*M`j'^2*n1*q12-4*M`j'^2*n4*q12+10*M`j'^2*q13+2*M`j'^2*n1*q13+4*M`j'^2*n2*q13-6*M`j'^2*n4*q13+10*M`j'^2*q23+2*M`j'^2*n1*q23+4*M`j'^2*n2*q23-6*M`j'^2*n4*q23+8*q12*q33-4*n1*q12*q33-2*n2*q12*q33-2*n3*q12*q33-2*n4*q12*q33+2*q13*q33-2*n1*q13*q33-2*n2*q13*q33-n3*q13*q33+2*q23*q33-2*n1*q23*q33-2*n2*q23*q33-n3*q23*q33,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2))+mbox1l(-1+n1,1+n2,n3,n4)*prf(4*M`j'^2*q12+6*M`j'^2*q13+6*M`j'^2*q23+4*M`j'^2*q33-2*q12*q33-2*q13*q33-2*q23*q33-q33^2,4*M`j'^2*q33-q33^2)+mbox1l(n1,2+n2,n3,-1+n4)*prf(-4*M`j'^2*q13^2-4*M`j'^2*n2*q13^2-8*M`j'^2*q13*q23-8*M`j'^2*n2*q13*q23-4*M`j'^2*q23^2-4*M`j'^2*n2*q23^2+8*M`j'^2*q12*q33+8*M`j'^2*n2*q12*q33-4*q12^2*q33-4*n2*q12^2*q33-4*q12*q13*q33-4*n2*q12*q13*q33-4*q12*q23*q33-4*n2*q12*q23*q33-2*q12*q33^2-2*n2*q12*q33^2,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2)+mbox1l(n1,1+n2,1+n3,-1+n4)*prf(-4*M`j'^2*n3*q13^2-4*M`j'^2*n3*q13*q23+4*M`j'^2*n3*q12*q33-2*n3*q12*q13*q33-n3*q12*q33^2,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2);
	Identify,ifmatch->jump mbox1l(n1?{,>1},n2?neg0_,n3?neg_,n4?pos_) = mbox1l(n1,n2,1+n3,-1+n4)*prf(-2*M`j'^2*q13,4*M`j'^2*q33-q33^2)+mbox1l(-2+n1,n2,1+n3,1+n4)*prf(-2*M`j'^2*n4*q13,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2)+mbox1l(-1+n1,-1+n2,2+n3,n4)*prf(q13^3+n3*q13^3+q13^2*q23+n3*q13^2*q23+q13^2*q33+n3*q13^2*q33,q13^2*q33-n1*q13^2*q33+2*q13*q23*q33-2*n1*q13*q23*q33+q23^2*q33-n1*q23^2*q33-2*q12*q33^2+2*n1*q12*q33^2)+mbox1l(-1+n1,n2,2+n3,-1+n4)*prf(4*M`j'^2*q12*q13^2+4*M`j'^2*n3*q12*q13^2+2*M`j'^2*q13^3+2*M`j'^2*n3*q13^3+4*M`j'^2*q12*q13*q23+4*M`j'^2*n3*q12*q13*q23+4*M`j'^2*q13^2*q23+4*M`j'^2*n3*q13^2*q23+2*M`j'^2*q13*q23^2+2*M`j'^2*n3*q13*q23^2-q12*q13^2*q33-n3*q12*q13^2*q33-q12*q13*q23*q33-n3*q12*q13*q23*q33-q12*q13*q33^2-n3*q12*q13*q33^2,4*M`j'^2*q13^2*q33-4*M`j'^2*n1*q13^2*q33+8*M`j'^2*q13*q23*q33-8*M`j'^2*n1*q13*q23*q33+4*M`j'^2*q23^2*q33-4*M`j'^2*n1*q23^2*q33-8*M`j'^2*q12*q33^2+8*M`j'^2*n1*q12*q33^2-q13^2*q33^2+n1*q13^2*q33^2-2*q13*q23*q33^2+2*n1*q13*q23*q33^2-q23^2*q33^2+n1*q23^2*q33^2+2*q12*q33^3-2*n1*q12*q33^3)+mbox1l(-1+n1,1+n2,1+n3,-1+n4)*prf(8*M`j'^2*n2*q12*q13^2+2*M`j'^2*n2*q13^3+8*M`j'^2*n2*q12*q13*q23+4*M`j'^2*n2*q13^2*q23+2*M`j'^2*n2*q13*q23^2-8*M`j'^2*n2*q12^2*q33-2*n2*q12*q13^2*q33-4*M`j'^2*n2*q12*q23*q33-2*n2*q12*q13*q23*q33+2*n2*q12^2*q33^2-n2*q12*q13*q33^2+n2*q12*q23*q33^2,4*M`j'^2*q13^2*q33-4*M`j'^2*n1*q13^2*q33+8*M`j'^2*q13*q23*q33-8*M`j'^2*n1*q13*q23*q33+4*M`j'^2*q23^2*q33-4*M`j'^2*n1*q23^2*q33-8*M`j'^2*q12*q33^2+8*M`j'^2*n1*q12*q33^2-q13^2*q33^2+n1*q13^2*q33^2-2*q13*q23*q33^2+2*n1*q13*q23*q33^2-q23^2*q33^2+n1*q23^2*q33^2+2*q12*q33^3-2*n1*q12*q33^3)+mbox1l(-2+n1,1+n2,1+n3,n4)*prf(-8*M`j'^2*n2*q12*q13^2-6*M`j'^2*n2*q13^3-8*M`j'^2*n2*q12*q13*q23-12*M`j'^2*n2*q13^2*q23-6*M`j'^2*n2*q13*q23^2+8*M`j'^2*n2*q12^2*q33+4*M`j'^2*n2*q12*q13*q33-4*M`j'^2*n2*q13^2*q33+2*n2*q12*q13^2*q33+2*n2*q13^3*q33+8*M`j'^2*n2*q12*q23*q33-4*M`j'^2*n2*q13*q23*q33+2*n2*q12*q13*q23*q33+4*n2*q13^2*q23*q33+2*n2*q13*q23^2*q33+4*M`j'^2*n2*q12*q33^2-2*n2*q12^2*q33^2-2*n2*q12*q13*q33^2+n2*q13^2*q33^2-2*n2*q12*q23*q33^2+n2*q13*q23*q33^2-n2*q12*q33^3,4*M`j'^2*q13^2*q33-4*M`j'^2*n1*q13^2*q33+8*M`j'^2*q13*q23*q33-8*M`j'^2*n1*q13*q23*q33+4*M`j'^2*q23^2*q33-4*M`j'^2*n1*q23^2*q33-8*M`j'^2*q12*q33^2+8*M`j'^2*n1*q12*q33^2-q13^2*q33^2+n1*q13^2*q33^2-2*q13*q23*q33^2+2*n1*q13*q23*q33^2-q23^2*q33^2+n1*q23^2*q33^2+2*q12*q33^3-2*n1*q12*q33^3)+mbox1l(-2+n1,n2,2+n3,n4)*prf(-4*M`j'^2*q12*q13^2-4*M`j'^2*n3*q12*q13^2-6*M`j'^2*q13^3-6*M`j'^2*n3*q13^3-4*M`j'^2*q12*q13*q23-4*M`j'^2*n3*q12*q13*q23-8*M`j'^2*q13^2*q23-8*M`j'^2*n3*q13^2*q23-2*M`j'^2*q13*q23^2-2*M`j'^2*n3*q13*q23^2+4*M`j'^2*q12*q13*q33+4*M`j'^2*n3*q12*q13*q33-4*M`j'^2*q13^2*q33-4*M`j'^2*n3*q13^2*q33+q12*q13^2*q33+n3*q12*q13^2*q33+2*q13^3*q33+2*n3*q13^3*q33-4*M`j'^2*q12*q23*q33-4*M`j'^2*n3*q12*q23*q33-4*M`j'^2*q13*q23*q33-4*M`j'^2*n3*q13*q23*q33+q12*q13*q23*q33+n3*q12*q13*q23*q33+3*q13^2*q23*q33+3*n3*q13^2*q23*q33-4*M`j'^2*q23^2*q33-4*M`j'^2*n3*q23^2*q33+q13*q23^2*q33+n3*q13*q23^2*q33+4*M`j'^2*q12*q33^2+4*M`j'^2*n3*q12*q33^2-2*q12*q13*q33^2-2*n3*q12*q13*q33^2+q13^2*q33^2+n3*q13^2*q33^2+q12*q23*q33^2+n3*q12*q23*q33^2+q13*q23*q33^2+n3*q13*q23*q33^2+q23^2*q33^2+n3*q23^2*q33^2-q12*q33^3-n3*q12*q33^3,4*M`j'^2*q13^2*q33-4*M`j'^2*n1*q13^2*q33+8*M`j'^2*q13*q23*q33-8*M`j'^2*n1*q13*q23*q33+4*M`j'^2*q23^2*q33-4*M`j'^2*n1*q23^2*q33-8*M`j'^2*q12*q33^2+8*M`j'^2*n1*q12*q33^2-q13^2*q33^2+n1*q13^2*q33^2-2*q13*q23*q33^2+2*n1*q13*q23*q33^2-q23^2*q33^2+n1*q23^2*q33^2+2*q12*q33^3-2*n1*q12*q33^3)+mbox1l(-1+n1,n2,1+n3,n4)*(tmpprf(ep,1)*prf(2*q13^3*q33+4*q13^2*q23*q33+2*q13*q23^2*q33-4*q12*q13*q33^2,4*M`j'^2*q13^2*q33-4*M`j'^2*n1*q13^2*q33+8*M`j'^2*q13*q23*q33-8*M`j'^2*n1*q13*q23*q33+4*M`j'^2*q23^2*q33-4*M`j'^2*n1*q23^2*q33-8*M`j'^2*q12*q33^2+8*M`j'^2*n1*q12*q33^2-q13^2*q33^2+n1*q13^2*q33^2-2*q13*q23*q33^2+2*n1*q13*q23*q33^2-q23^2*q33^2+n1*q23^2*q33^2+2*q12*q33^3-2*n1*q12*q33^3)+prf(2*M`j'^2*q13^3-2*M`j'^2*n1*q13^3+4*M`j'^2*n2*q13^3-2*M`j'^2*n4*q13^3+4*M`j'^2*q13^2*q23-4*M`j'^2*n1*q13^2*q23+8*M`j'^2*n2*q13^2*q23-4*M`j'^2*n4*q13^2*q23+2*M`j'^2*q13*q23^2-2*M`j'^2*n1*q13*q23^2+4*M`j'^2*n2*q13*q23^2-2*M`j'^2*n4*q13*q23^2-8*M`j'^2*q12*q13*q33+4*M`j'^2*n1*q12*q13*q33-4*M`j'^2*n2*q12*q13*q33-4*M`j'^2*n3*q12*q13*q33+4*M`j'^2*n4*q12*q13*q33+4*M`j'^2*q13^2*q33-4*M`j'^2*n1*q13^2*q33+4*M`j'^2*n2*q13^2*q33-5*q13^3*q33+2*n1*q13^3*q33+n3*q13^3*q33+2*n4*q13^3*q33+4*M`j'^2*q12*q23*q33-4*M`j'^2*n2*q12*q23*q33+4*M`j'^2*n3*q12*q23*q33+12*M`j'^2*q13*q23*q33-8*M`j'^2*n1*q13*q23*q33+4*M`j'^2*n2*q13*q23*q33+4*M`j'^2*n3*q13*q23*q33-10*q13^2*q23*q33+4*n1*q13^2*q23*q33+2*n3*q13^2*q23*q33+4*n4*q13^2*q23*q33+8*M`j'^2*q23^2*q33-4*M`j'^2*n1*q23^2*q33+4*M`j'^2*n3*q23^2*q33-5*q13*q23^2*q33+2*n1*q13*q23^2*q33+n3*q13*q23^2*q33+2*n4*q13*q23^2*q33-12*M`j'^2*q12*q33^2+8*M`j'^2*n1*q12*q33^2-4*M`j'^2*n2*q12*q33^2-4*M`j'^2*n3*q12*q33^2+11*q12*q13*q33^2-4*n1*q12*q13*q33^2-n2*q12*q13*q33^2-n3*q12*q13*q33^2-4*n4*q12*q13*q33^2-q13^2*q33^2+n1*q13^2*q33^2-n2*q13^2*q33^2-q12*q23*q33^2+n2*q12*q23*q33^2-n3*q12*q23*q33^2-3*q13*q23*q33^2+2*n1*q13*q23*q33^2-n2*q13*q23*q33^2-n3*q13*q23*q33^2-2*q23^2*q33^2+n1*q23^2*q33^2-n3*q23^2*q33^2+3*q12*q33^3-2*n1*q12*q33^3+n2*q12*q33^3+n3*q12*q33^3,4*M`j'^2*q13^2*q33-4*M`j'^2*n1*q13^2*q33+8*M`j'^2*q13*q23*q33-8*M`j'^2*n1*q13*q23*q33+4*M`j'^2*q23^2*q33-4*M`j'^2*n1*q23^2*q33-8*M`j'^2*q12*q33^2+8*M`j'^2*n1*q12*q33^2-q13^2*q33^2+n1*q13^2*q33^2-2*q13*q23*q33^2+2*n1*q13*q23*q33^2-q23^2*q33^2+n1*q23^2*q33^2+2*q12*q33^3-2*n1*q12*q33^3))+mbox1l(-1+n1,n2,2+n3,n4)*prf(8*M`j'^2*q12*q13^3+8*M`j'^2*n3*q12*q13^3+4*M`j'^2*q13^4+4*M`j'^2*n3*q13^4+8*M`j'^2*q12*q13^2*q23+8*M`j'^2*n3*q12*q13^2*q23+8*M`j'^2*q13^3*q23+8*M`j'^2*n3*q13^3*q23+4*M`j'^2*q13^2*q23^2+4*M`j'^2*n3*q13^2*q23^2+4*M`j'^2*q12*q13^2*q33+4*M`j'^2*n3*q12*q13^2*q33-2*q12*q13^3*q33-2*n3*q12*q13^3*q33+4*M`j'^2*q12*q13*q23*q33+4*M`j'^2*n3*q12*q13*q23*q33-2*q12*q13^2*q23*q33-2*n3*q12*q13^2*q23*q33+4*M`j'^2*q12*q13*q33^2+4*M`j'^2*n3*q12*q13*q33^2-3*q12*q13^2*q33^2-3*n3*q12*q13^2*q33^2-q12*q13*q23*q33^2-n3*q12*q13*q23*q33^2-q12*q13*q33^3-n3*q12*q13*q33^3,4*M`j'^2*q13^2*q33-4*M`j'^2*n1*q13^2*q33+8*M`j'^2*q13*q23*q33-8*M`j'^2*n1*q13*q23*q33+4*M`j'^2*q23^2*q33-4*M`j'^2*n1*q23^2*q33-8*M`j'^2*q12*q33^2+8*M`j'^2*n1*q12*q33^2-q13^2*q33^2+n1*q13^2*q33^2-2*q13*q23*q33^2+2*n1*q13*q23*q33^2-q23^2*q33^2+n1*q23^2*q33^2+2*q12*q33^3-2*n1*q12*q33^3)+mbox1l(-1+n1,1+n2,1+n3,n4)*prf(8*M`j'^2*n2*q12*q13^3+4*M`j'^2*n2*q13^4+16*M`j'^2*n2*q12*q13^2*q23+12*M`j'^2*n2*q13^3*q23+8*M`j'^2*n2*q12*q13*q23^2+12*M`j'^2*n2*q13^2*q23^2+4*M`j'^2*n2*q13*q23^3-8*M`j'^2*n2*q12^2*q13*q33-8*M`j'^2*n2*q12^2*q23*q33-8*M`j'^2*n2*q12*q13*q23*q33-8*M`j'^2*n2*q12*q23^2*q33+4*M`j'^2*n2*q12*q13*q33^2-2*n2*q12^2*q13*q33^2-2*n2*q12*q13^2*q33^2-4*M`j'^2*n2*q12*q23*q33^2+2*n2*q12^2*q23*q33^2+2*n2*q12*q23^2*q33^2-n2*q12*q13*q33^3+n2*q12*q23*q33^3,4*M`j'^2*q13^2*q33-4*M`j'^2*n1*q13^2*q33+8*M`j'^2*q13*q23*q33-8*M`j'^2*n1*q13*q23*q33+4*M`j'^2*q23^2*q33-4*M`j'^2*n1*q23^2*q33-8*M`j'^2*q12*q33^2+8*M`j'^2*n1*q12*q33^2-q13^2*q33^2+n1*q13^2*q33^2-2*q13*q23*q33^2+2*n1*q13*q23*q33^2-q23^2*q33^2+n1*q23^2*q33^2+2*q12*q33^3-2*n1*q12*q33^3);
	Identify,ifmatch->jump mbox1l(n1?{,>1},n2?neg_,n3?neg0_,n4?pos_) = mbox1l(-1+n1,2+n2,n3,-1+n4)*prf(-4*M`j'^2*q12-4*M`j'^2*n2*q12-2*M`j'^2*q13-2*M`j'^2*n2*q13-2*M`j'^2*q23-2*M`j'^2*n2*q23,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2)+mbox1l(-2+n1,1+n2,n3,1+n4)*prf(-4*M`j'^2*n4*q12-2*M`j'^2*n4*q13-2*M`j'^2*n4*q23,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2)+mbox1l(-1+n1,n2,1+n3,n4)*prf(-(n3*q13)-n3*q33,-q33+n1*q33)+mbox1l(n1,1+n2,n3,-1+n4)*prf(4*M`j'^2*q12-2*M`j'^2*q13-2*M`j'^2*q23-2*q12*q33,4*M`j'^2*q33-q33^2)+mbox1l(-1+n1,1+n2,1+n3,-1+n4)*prf(-2*M`j'^2*n3*q13-2*M`j'^2*n3*q23-n3*q12*q33,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2)+mbox1l(-2+n1,2+n2,n3,n4)*prf(4*M`j'^2*q12+4*M`j'^2*n2*q12+6*M`j'^2*q13+6*M`j'^2*n2*q13+6*M`j'^2*q23+6*M`j'^2*n2*q23+4*M`j'^2*q33+4*M`j'^2*n2*q33-2*q12*q33-2*n2*q12*q33-2*q13*q33-2*n2*q13*q33-2*q23*q33-2*n2*q23*q33-q33^2-n2*q33^2,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2)+mbox1l(-1+n1,1+n2,n3,n4)*(tmpprf(ep,1)*prf(-4*q12*q33-2*q13*q33-2*q23*q33,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2)+prf(4*M`j'^2*q12-4*M`j'^2*n1*q12+4*M`j'^2*n4*q12-6*M`j'^2*q13+2*M`j'^2*n1*q13-4*M`j'^2*n2*q13+2*M`j'^2*n4*q13-6*M`j'^2*q23+2*M`j'^2*n1*q23-4*M`j'^2*n2*q23+2*M`j'^2*n4*q23-8*M`j'^2*q33+4*M`j'^2*n1*q33-4*M`j'^2*n2*q33+8*q12*q33-2*n1*q12*q33-2*n2*q12*q33-2*n3*q12*q33-4*n4*q12*q33+6*q13*q33-2*n1*q13*q33-n3*q13*q33-2*n4*q13*q33+6*q23*q33-2*n1*q23*q33-n3*q23*q33-2*n4*q23*q33+2*q33^2-n1*q33^2+n2*q33^2,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2))+mbox1l(-2+n1,1+n2,1+n3,n4)*prf(6*M`j'^2*n3*q13+2*M`j'^2*n3*q23+4*M`j'^2*n3*q33-n3*q12*q33-2*n3*q13*q33-n3*q23*q33-n3*q33^2,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2)+mbox1l(-1+n1,2+n2,n3,n4)*prf(-4*M`j'^2*q13^2-4*M`j'^2*n2*q13^2-8*M`j'^2*q13*q23-8*M`j'^2*n2*q13*q23-4*M`j'^2*q23^2-4*M`j'^2*n2*q23^2+8*M`j'^2*q12*q33+8*M`j'^2*n2*q12*q33-4*q12^2*q33-4*n2*q12^2*q33-4*q12*q13*q33-4*n2*q12*q13*q33-4*q12*q23*q33-4*n2*q12*q23*q33-2*q12*q33^2-2*n2*q12*q33^2,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2)+mbox1l(-1+n1,1+n2,1+n3,n4)*prf(-4*M`j'^2*n3*q13^2-4*M`j'^2*n3*q13*q23+4*M`j'^2*n3*q12*q33-2*n3*q12*q13*q33-n3*q12*q33^2,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?neg0_,n3?neg0_,n4?{,>1}) = mbox1l(1+n1,n2,n3,-2+n4)*prf(2*M`j'^2*n1,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2)+mbox1l(n1,1+n2,n3,-2+n4)*prf(2*M`j'^2*n2,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2)+mbox1l(n1,n2,1+n3,-2+n4)*prf(2*M`j'^2*n3,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2)+mbox1l(n1,n2,1+n3,-1+n4)*prf(4*M`j'^2*n3*q13,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2)+mbox1l(-1+n1,n2,n3,n4)*prf(-2*M`j'^2+q33,4*M`j'^2*q33-q33^2)+mbox1l(-1+n1,1+n2,n3,-1+n4)*prf(-2*M`j'^2*n2+n2*q33,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2)+mbox1l(-1+n1,n2,1+n3,-1+n4)*prf(-2*M`j'^2*n3+n3*q33,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2)+mbox1l(n1,n2,n3,-1+n4)*(tmpprf(ep,1)*prf(2,-4*M`j'^2+4*M`j'^2*n4+q33-n4*q33)+prf(-2*M`j'^2-2*M`j'^2*n1+2*M`j'^2*n4-5*q33+2*n1*q33+n2*q33+n3*q33+n4*q33,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2))+mbox1l(n1,1+n2,n3,-1+n4)*prf(4*M`j'^2*n2*q13+4*M`j'^2*n2*q23+2*n2*q12*q33,-4*M`j'^2*q33+4*M`j'^2*n4*q33+q33^2-n4*q33^2);
	Identify,ifmatch->jump mbox1l(n1?{,>1},n2?neg0_,n3?neg0_,n4?pos_) = mbox1l(-2+n1,1+n2,n3,n4)*prf(2*M`j'^2*n2,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2)+mbox1l(-2+n1,n2,1+n3,n4)*prf(2*M`j'^2*n3,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2)+mbox1l(-2+n1,n2,n3,1+n4)*prf(2*M`j'^2*n4,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2)+mbox1l(n1,n2,n3,-1+n4)*prf(-2*M`j'^2+q33,4*M`j'^2*q33-q33^2)+mbox1l(-1+n1,1+n2,n3,-1+n4)*prf(-2*M`j'^2*n2+n2*q33,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2)+mbox1l(-1+n1,n2,1+n3,-1+n4)*prf(-2*M`j'^2*n3+n3*q33,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2)+mbox1l(-1+n1,n2,n3,n4)*(tmpprf(ep,1)*prf(2,-4*M`j'^2+4*M`j'^2*n1+q33-n1*q33)+prf(-2*M`j'^2+2*M`j'^2*n1-2*M`j'^2*n4-5*q33+n1*q33+n2*q33+n3*q33+2*n4*q33,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2))+mbox1l(-1+n1,1+n2,n3,n4)*prf(-4*M`j'^2*n2*q13-4*M`j'^2*n2*q23-4*M`j'^2*n2*q33+2*n2*q12*q33+2*n2*q13*q33+2*n2*q23*q33+n2*q33^2,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2)+mbox1l(-1+n1,n2,1+n3,n4)*prf(-4*M`j'^2*n3*q13-4*M`j'^2*n3*q33+2*n3*q13*q33+n3*q33^2,-4*M`j'^2*q33+4*M`j'^2*n1*q33+q33^2-n1*q33^2);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?neg0_,n3?neg_,n4?pos_) = mbox1l(n1,-1+n2,2+n3,-1+n4)*prf(q12*q13+n3*q12*q13,-q13^2+n2*q13^2-2*q13*q23+2*n2*q13*q23-q23^2+n2*q23^2+2*q12*q33-2*n2*q12*q33)+mbox1l(n1,-2+n2,2+n3,n4)*prf(q13^2+n3*q13^2,-q13^2+n2*q13^2-2*q13*q23+2*n2*q13*q23-q23^2+n2*q23^2+2*q12*q33-2*n2*q12*q33)+mbox1l(n1,n2,1+n3,-1+n4)*prf(-(q12*q13)+q12*q23,-q13^2-2*q13*q23-q23^2+2*q12*q33)+mbox1l(-1+n1,n2,1+n3,n4)*prf(-(q12*q13)+q12*q23+q13*q23+q23^2-q12*q33,q13^2+2*q13*q23+q23^2-2*q12*q33)+mbox1l(-1+n1,-1+n2,2+n3,n4)*prf(-(q12*q13)-n3*q12*q13+q13*q23+n3*q13*q23-q12*q33-n3*q12*q33,-q13^2+n2*q13^2-2*q13*q23+2*n2*q13*q23-q23^2+n2*q23^2+2*q12*q33-2*n2*q12*q33)+mbox1l(n1,-1+n2,1+n3,n4)*prf(-2*q13^2+n2*q13^2-n3*q13^2-2*q13*q23+n2*q13*q23-n3*q13*q23+2*q12*q33-n2*q12*q33+n3*q12*q33,-q13^2+n2*q13^2-2*q13*q23+2*n2*q13*q23-q23^2+n2*q23^2+2*q12*q33-2*n2*q12*q33)+mbox1l(n1,-1+n2,2+n3,n4)*prf(2*q12*q13^2+2*n3*q12*q13^2+q12*q13*q33+n3*q12*q13*q33,-q13^2+n2*q13^2-2*q13*q23+2*n2*q13*q23-q23^2+n2*q23^2+2*q12*q33-2*n2*q12*q33)+mbox1l(n1,n2,1+n3,n4)*prf(-2*q12*q13^2-2*q12*q13*q23+2*q12^2*q33-q12*q13*q33+q12*q23*q33,-q13^2-2*q13*q23-q23^2+2*q12*q33);
	Identify,ifmatch->jump mbox1l(1,n2?neg_,0,1) = tmpprf(1,-1+2*ep+n2)*mbox1l(0,n2,0,2)*prf(-2*M`j'^2,q33)+tmpprf(1,-1+2*ep+n2)*mbox1l(0,1+n2,0,1)*prf(-2*M`j'^2*n2,q33)+tmpprf(1,-1+2*ep+n2)*mbox1l(0,1+n2,0,2)*prf(-4*M`j'^2*q12-2*M`j'^2*q13-2*M`j'^2*q23,q33)+mbox1l(1,1+n2,0,1)*(tmpprf(ep,-1+2*ep+n2)*prf(-4*q12-2*q13-2*q23,1)+tmpprf(1,-1+2*ep+n2)*prf(-4*n2*q12-2*n2*q13-2*n2*q23,1))+tmpprf(1,-1+2*ep+n2)*mbox1l(1,2+n2,0,0)*prf(-4*M`j'^2*q12-4*M`j'^2*n2*q12-2*M`j'^2*q13-2*M`j'^2*n2*q13-2*M`j'^2*q23-2*M`j'^2*n2*q23,q33)+tmpprf(1,-1+2*ep+n2)*mbox1l(2,n2,0,0)*prf(2*M`j'^2-q33,q33)+tmpprf(1,-1+2*ep+n2)*mbox1l(1,1+n2,0,0)*prf(2*M`j'^2*n2-n2*q33,q33)+tmpprf(1,-1+2*ep+n2)*mbox1l(2,1+n2,0,0)*prf(4*M`j'^2*q12-2*M`j'^2*q13-2*M`j'^2*q23-2*q12*q33,q33)+tmpprf(1,-1+2*ep+n2)*mbox1l(0,2+n2,0,1)*prf(4*M`j'^2*q12+4*M`j'^2*n2*q12+6*M`j'^2*q13+6*M`j'^2*n2*q13+6*M`j'^2*q23+6*M`j'^2*n2*q23+4*M`j'^2*q33+4*M`j'^2*n2*q33-2*q12*q33-2*n2*q12*q33-2*q13*q33-2*n2*q13*q33-2*q23*q33-2*n2*q23*q33-q33^2-n2*q33^2,q33)+tmpprf(1,-1+2*ep+n2)*mbox1l(1,2+n2,0,1)*prf(-4*M`j'^2*q13^2-4*M`j'^2*n2*q13^2-8*M`j'^2*q13*q23-8*M`j'^2*n2*q13*q23-4*M`j'^2*q23^2-4*M`j'^2*n2*q23^2+8*M`j'^2*q12*q33+8*M`j'^2*n2*q12*q33-4*q12^2*q33-4*n2*q12^2*q33-4*q12*q13*q33-4*n2*q12*q13*q33-4*q12*q23*q33-4*n2*q12*q23*q33-2*q12*q33^2-2*n2*q12*q33^2,q33);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?neg0_,n3?{,>1},n4?neg_) = mbox1l(1+n1,-1+n2,-1+n3,1+n4)*prf(n1*q13,-q12+n3*q12)+mbox1l(-1+n1,1+n2,-1+n3,1+n4)*prf(-(n2*q12)-n2*q23,-q12+n3*q12)+mbox1l(1+n1,n2,-1+n3,1+n4)*prf(4*n1*q13+n1*q33,-1+n3)+mbox1l(n1,1+n2,-1+n3,1+n4)*prf(-2*n2*q12+2*n2*q13-2*n2*q23+n2*q33,-1+n3)+mbox1l(n1,-1+n2,-1+n3,2+n4)*prf(q13+n4*q13+q33+n4*q33,-q12+n3*q12)+mbox1l(-1+n1,n2,-1+n3,2+n4)*prf(-q12-n4*q12+2*q13+2*n4*q13-q23-n4*q23+q33+n4*q33,-q12+n3*q12)+mbox1l(1+n1,n2,-2+n3,1+n4)*prf(2*M`j'^2*n1*q12-4*M`j'^2*n1*q13-2*n1*q12*q13-n1*q12*q33,-2*M`j'^2*q12+2*M`j'^2*n3*q12)+mbox1l(n1,1+n2,-2+n3,1+n4)*prf(2*M`j'^2*n2*q12-2*n2*q12*q13+4*M`j'^2*n2*q23-n2*q12*q33,-2*M`j'^2*q12+2*M`j'^2*n3*q12)+mbox1l(n1,n2,-2+n3,2+n4)*prf(2*M`j'^2*q12+2*M`j'^2*n4*q12-4*M`j'^2*q13-4*M`j'^2*n4*q13-2*q12*q13-2*n4*q12*q13-4*M`j'^2*q33-4*M`j'^2*n4*q33-q12*q33-n4*q12*q33,-2*M`j'^2*q12+2*M`j'^2*n3*q12)+mbox1l(n1,n2,-1+n3,1+n4)*(tmpprf(ep,1)*prf(-4*q12*q13-2*q12*q33,-2*M`j'^2*q12+2*M`j'^2*n3*q12)+prf(-2*M`j'^2*q12-2*M`j'^2*n1*q12+2*M`j'^2*n3*q12-2*M`j'^2*q13+2*M`j'^2*n1*q13-2*M`j'^2*n4*q13+10*q12*q13-2*n1*q12*q13-2*n2*q12*q13-4*n3*q12*q13-2*n4*q12*q13+2*M`j'^2*q23-2*M`j'^2*n2*q23+2*M`j'^2*n4*q23+5*q12*q33-n1*q12*q33-n2*q12*q33-2*n3*q12*q33-n4*q12*q33,-2*M`j'^2*q12+2*M`j'^2*n3*q12))+mbox1l(n1,n2,-1+n3,2+n4)*prf(12*M`j'^2*q12*q13+12*M`j'^2*n4*q12*q13-4*M`j'^2*q13^2-4*M`j'^2*n4*q13^2-4*q12*q13^2-4*n4*q12*q13^2+4*M`j'^2*q13*q23+4*M`j'^2*n4*q13*q23+6*M`j'^2*q12*q33+6*M`j'^2*n4*q12*q33-2*M`j'^2*q13*q33-2*M`j'^2*n4*q13*q33-4*q12*q13*q33-4*n4*q12*q13*q33+2*M`j'^2*q23*q33+2*M`j'^2*n4*q23*q33-q12*q33^2-n4*q12*q33^2,-2*M`j'^2*q12+2*M`j'^2*n3*q12);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?neg_,n3?{,>1},n4?neg0_) = mbox1l(1+n1,n2,-1+n3,n4)*prf(-n1,-1+n3)+mbox1l(1+n1,1+n2,-2+n3,n4)*prf(n1,-1+n3)+mbox1l(n1,2+n2,-2+n3,n4)*prf(1+n2,-1+n3)+mbox1l(n1,1+n2,-1+n3,n4)*prf(-2-n2+n3,-1+n3)+mbox1l(n1,n2,-1+n3,1+n4)*prf(-n4,-1+n3)+mbox1l(n1,1+n2,-2+n3,1+n4)*prf(n4,-1+n3)+mbox1l(1+n1,1+n2,-1+n3,n4)*prf(-2*n1*q12,-1+n3)+mbox1l(n1,1+n2,-1+n3,1+n4)*prf(-2*n4*q12-2*n4*q23,-1+n3);
	Identify,ifmatch->jump mbox1l(n1?{,>1},n2?neg0_,n3?pos_,n4?neg_) = mbox1l(n1,-1+n2,n3,1+n4)*prf(-q13,q12)+mbox1l(n1,n2,-1+n3,1+n4)*prf(q13,q12)+mbox1l(-1+n1,1+n2,-1+n3,1+n4)*prf(-(n2*q23),-q12+n1*q12)+mbox1l(-1+n1,n2,n3,1+n4)*prf(-2*q12+n1*q12-n4*q12-q23+n2*q23-n4*q23,-q12+n1*q12)+mbox1l(-2+n1,n2,n3,2+n4)*prf(q12+n4*q12+q23+n4*q23,-q12+n1*q12)+mbox1l(n1,n2,n3,1+n4)*prf(-2*q13-q33,1)+mbox1l(-1+n1,-1+n2,n3,2+n4)*prf(-q13-n4*q13-q33-n4*q33,-q12+n1*q12)+mbox1l(-1+n1,n2,-1+n3,2+n4)*prf(q13+n4*q13+q33+n4*q33,-q12+n1*q12)+mbox1l(-1+n1,n2,n3,2+n4)*prf(-2*q12*q13-2*n4*q12*q13-2*q13*q23-2*n4*q13*q23-q12*q33-n4*q12*q33-q23*q33-n4*q23*q33,-q12+n1*q12);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?neg0_,n3?{,>1},n4?neg0_) = mbox1l(1+n1,n2,-1+n3,n4)*prf(-n1,-1+n3)+mbox1l(1+n1,n2,-2+n3,n4)*prf(n1,-2*M`j'^2+2*M`j'^2*n3)+mbox1l(n1,1+n2,-1+n3,n4)*prf(-n2,-1+n3)+mbox1l(n1,1+n2,-2+n3,n4)*prf(n2,-2*M`j'^2+2*M`j'^2*n3)+mbox1l(n1,n2,-2+n3,1+n4)*prf(n4,-2*M`j'^2+2*M`j'^2*n3)+mbox1l(n1,n2,-1+n3,n4)*(tmpprf(ep,1)*prf(1,-M`j'^2+M`j'^2*n3)+prf(-6+n1+n2+2*n3+n4,-2*M`j'^2+2*M`j'^2*n3))+mbox1l(n1,n2,-1+n3,1+n4)*prf(-2*M`j'^2*n4+2*n4*q13+n4*q33,-2*M`j'^2+2*M`j'^2*n3);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?neg0_,n3?{,>1},n4?neg0_) = mbox1l(2+n1,n2,-2+n3,n4)*prf(1+n1,-1+n3)+mbox1l(n1,1+n2,-1+n3,n4)*prf(-n2,-1+n3)+mbox1l(1+n1,1+n2,-2+n3,n4)*prf(n2,-1+n3)+mbox1l(1+n1,n2,-1+n3,n4)*prf(-2-n1+n3,-1+n3)+mbox1l(n1,n2,-1+n3,1+n4)*prf(-n4,-1+n3)+mbox1l(1+n1,n2,-2+n3,1+n4)*prf(n4,-1+n3)+mbox1l(1+n1,1+n2,-1+n3,n4)*prf(-2*n2*q12,-1+n3)+mbox1l(1+n1,n2,-1+n3,1+n4)*prf(2*n4*q13,-1+n3);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?neg0_,n3?pos_,n4?neg_) = mbox1l(1+n1,-1+n2,-1+n3,1+n4)*prf(n1*q13,-q12+n2*q12)+mbox1l(n1,-1+n2,n3,1+n4)*prf(q13-n1*q13+n4*q13,-q12+n2*q12)+mbox1l(n1,n2,-1+n3,1+n4)*prf(-q23,q12)+mbox1l(-1+n1,n2,n3,1+n4)*prf(q12+q23,q12)+mbox1l(n1,n2,n3,1+n4)*prf(-2*q13-q33,1)+mbox1l(-1+n1,-1+n2,n3,2+n4)*prf(-2*q13-2*n4*q13-q33-n4*q33,-q12+n2*q12)+mbox1l(n1,-1+n2,-1+n3,2+n4)*prf(q13+n4*q13+q33+n4*q33,-q12+n2*q12)+mbox1l(n1,-1+n2,n3,2+n4)*prf(2*q13^2+2*n4*q13^2+q13*q33+n4*q13*q33,-q12+n2*q12);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?neg0_,n3?pos_,n4?neg0_) = mbox1l(1+n1,n2,-1+n3,n4)*prf(n1,n1-n2)+mbox1l(n1,1+n2,-1+n3,n4)*prf(-n2,n1-n2)+mbox1l(n1,-1+n2,n3,1+n4)*prf(-(n4*q13),n1*q12-n2*q12)+mbox1l(-1+n1,n2,n3,1+n4)*prf(-(n4*q12)-n4*q23,n1*q12-n2*q12)+mbox1l(n1,n2,-1+n3,1+n4)*prf(n4*q12+n4*q13+n4*q23,n1*q12-n2*q12);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?{,>1},n3?neg0_,n4?neg_) = mbox1l(1+n1,-2+n2,n3,1+n4)*prf(-(M`j'^2*n1*q13)-M`j'^2*n1*q23-M`j'^2*n1*q33,-4*M`j'^2*q12+4*M`j'^2*n2*q12+2*q12^2-2*n2*q12^2)+mbox1l(n1,-2+n2,1+n3,1+n4)*prf(-(M`j'^2*n3*q13)-M`j'^2*n3*q23-M`j'^2*n3*q33,-4*M`j'^2*q12+4*M`j'^2*n2*q12+2*q12^2-2*n2*q12^2)+mbox1l(n1,-1+n2,1+n3,1+n4)*prf(M`j'^2*n3*q13+M`j'^2*n3*q23+M`j'^2*n3*q33,-2*M`j'^2+2*M`j'^2*n2+q12-n2*q12)+mbox1l(-1+n1,n2,n3,1+n4)*prf(4*M`j'^2*q12-2*q12^2+3*M`j'^2*q13-2*q12*q13+3*M`j'^2*q23-2*q12*q23+M`j'^2*q33-q12*q33,4*M`j'^2*q12-2*q12^2)+mbox1l(-1+n1,-1+n2,1+n3,1+n4)*prf(3*M`j'^2*n3*q13-2*n3*q12*q13-M`j'^2*n3*q23+M`j'^2*n3*q33-n3*q12*q33,-4*M`j'^2*q12+4*M`j'^2*n2*q12+2*q12^2-2*n2*q12^2)+mbox1l(n1,-1+n2,n3,1+n4)*(tmpprf(ep,1)*prf(-2*q12*q13-2*q12*q23-2*q12*q33,-4*M`j'^2*q12+4*M`j'^2*n2*q12+2*q12^2-2*n2*q12^2)+prf(7*M`j'^2*q13+M`j'^2*n1*q13-3*M`j'^2*n2*q13-2*M`j'^2*n3*q13+4*M`j'^2*n4*q13+q12*q13-2*n1*q12*q13-3*n4*q12*q13+3*M`j'^2*q23+M`j'^2*n1*q23-3*M`j'^2*n2*q23+2*M`j'^2*n3*q23+3*q12*q23-2*n1*q12*q23-2*n3*q12*q23-n4*q12*q23+M`j'^2*q33+M`j'^2*n1*q33-M`j'^2*n2*q33+4*q12*q33-2*n1*q12*q33-n2*q12*q33-n3*q12*q33-n4*q12*q33,-4*M`j'^2*q12+4*M`j'^2*n2*q12+2*q12^2-2*n2*q12^2))+mbox1l(n1,-1+n2,-1+n3,2+n4)*prf(-q13^2-n4*q13^2-2*q13*q23-2*n4*q13*q23-q23^2-n4*q23^2+2*q12*q33+2*n4*q12*q33,-2*q12^2+2*n2*q12^2)+mbox1l(n1,-2+n2,n3,2+n4)*prf(-(M`j'^2*q12*q13)-M`j'^2*n4*q12*q13+2*M`j'^2*q13^2+2*M`j'^2*n4*q13^2-q12*q13^2-n4*q12*q13^2-M`j'^2*q12*q23-M`j'^2*n4*q12*q23+2*M`j'^2*q13*q23+2*M`j'^2*n4*q13*q23-q12*q13*q23-n4*q12*q13*q23-M`j'^2*q12*q33-M`j'^2*n4*q12*q33,-4*M`j'^2*q12^2+4*M`j'^2*n2*q12^2+2*q12^3-2*n2*q12^3)+mbox1l(-1+n1,-1+n2,n3,2+n4)*prf(-3*M`j'^2*q12*q13-3*M`j'^2*n4*q12*q13+q12^2*q13+n4*q12^2*q13+M`j'^2*q12*q23+M`j'^2*n4*q12*q23-q12^2*q23-n4*q12^2*q23+2*M`j'^2*q13*q23+2*M`j'^2*n4*q13*q23-q12*q13*q23-n4*q12*q13*q23+2*M`j'^2*q23^2+2*M`j'^2*n4*q23^2-q12*q23^2-n4*q12*q23^2-3*M`j'^2*q12*q33-3*M`j'^2*n4*q12*q33+q12^2*q33+n4*q12^2*q33,-4*M`j'^2*q12^2+4*M`j'^2*n2*q12^2+2*q12^3-2*n2*q12^3)+mbox1l(n1,-1+n2,n3,2+n4)*prf(2*M`j'^2*q13^2+2*M`j'^2*n4*q13^2-2*q12*q13^2-2*n4*q12*q13^2-2*q12*q13*q23-2*n4*q12*q13*q23-2*M`j'^2*q23^2-2*M`j'^2*n4*q23^2+2*M`j'^2*q13*q33+2*M`j'^2*n4*q13*q33-3*q12*q13*q33-3*n4*q12*q13*q33-2*M`j'^2*q23*q33-2*M`j'^2*n4*q23*q33-q12*q23*q33-n4*q12*q23*q33-q12*q33^2-n4*q12*q33^2,-4*M`j'^2*q12+4*M`j'^2*n2*q12+2*q12^2-2*n2*q12^2);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?{,>1},n3?neg_,n4?neg0_) = mbox1l(-1+n1,n2,1+n3,n4)*prf(M`j'^2,4*M`j'^2-2*q12)+mbox1l(1+n1,-2+n2,1+n3,n4)*prf(M`j'^2*n1,-4*M`j'^2+4*M`j'^2*n2+2*q12-2*n2*q12)+mbox1l(-1+n1,-1+n2,2+n3,n4)*prf(M`j'^2+M`j'^2*n3,-4*M`j'^2+4*M`j'^2*n2+2*q12-2*n2*q12)+mbox1l(n1,-2+n2,2+n3,n4)*prf(M`j'^2+M`j'^2*n3,-4*M`j'^2+4*M`j'^2*n2+2*q12-2*n2*q12)+mbox1l(n1,-1+n2,2+n3,n4)*prf(-(M`j'^2*q12)-M`j'^2*n3*q12,-2*M`j'^2+2*M`j'^2*n2+q12-n2*q12)+mbox1l(n1,-1+n2,1+n3,n4)*(tmpprf(ep,1)*prf(q12,-2*M`j'^2+2*M`j'^2*n2+q12-n2*q12)+prf(-5*M`j'^2-M`j'^2*n1+3*M`j'^2*n2-2*M`j'^2*n3-2*q12+2*n1*q12+2*n3*q12+n4*q12,-4*M`j'^2+4*M`j'^2*n2+2*q12-2*n2*q12))+mbox1l(n1,-2+n2,1+n3,1+n4)*prf(M`j'^2*n4*q12-2*M`j'^2*n4*q13+n4*q12*q13,-4*M`j'^2*q12+4*M`j'^2*n2*q12+2*q12^2-2*n2*q12^2)+mbox1l(n1,-1+n2,n3,1+n4)*prf(n4*q13+n4*q23,-2*q12+2*n2*q12)+mbox1l(-1+n1,-1+n2,1+n3,1+n4)*prf(-(M`j'^2*n4*q12)+n4*q12^2-2*M`j'^2*n4*q23+n4*q12*q23,-4*M`j'^2*q12+4*M`j'^2*n2*q12+2*q12^2-2*n2*q12^2)+mbox1l(n1,-1+n2,1+n3,1+n4)*prf(-2*M`j'^2*n4*q13+2*n4*q12*q13+2*M`j'^2*n4*q23+n4*q12*q33,-4*M`j'^2+4*M`j'^2*n2+2*q12-2*n2*q12);
	Identify,ifmatch->jump mbox1l(n1?{,>1},n2?pos_,n3?neg0_,n4?neg_) = mbox1l(-2+n1,1+n2,n3,1+n4)*prf(-(M`j'^2*n2*q13)-M`j'^2*n2*q23-M`j'^2*n2*q33,-4*M`j'^2*q12+4*M`j'^2*n1*q12+2*q12^2-2*n1*q12^2)+mbox1l(-2+n1,n2,1+n3,1+n4)*prf(-(M`j'^2*n3*q13)-M`j'^2*n3*q23-M`j'^2*n3*q33,-4*M`j'^2*q12+4*M`j'^2*n1*q12+2*q12^2-2*n1*q12^2)+mbox1l(-1+n1,n2,1+n3,1+n4)*prf(M`j'^2*n3*q13+M`j'^2*n3*q23+M`j'^2*n3*q33,-2*M`j'^2+2*M`j'^2*n1+q12-n1*q12)+mbox1l(n1,-1+n2,n3,1+n4)*prf(-(M`j'^2*q13)-M`j'^2*q23+M`j'^2*q33-q12*q33,4*M`j'^2*q12-2*q12^2)+mbox1l(-1+n1,-1+n2,1+n3,1+n4)*prf(3*M`j'^2*n3*q13-2*n3*q12*q13-M`j'^2*n3*q23+M`j'^2*n3*q33-n3*q12*q33,-4*M`j'^2*q12+4*M`j'^2*n1*q12+2*q12^2-2*n1*q12^2)+mbox1l(-1+n1,n2,n3,1+n4)*(tmpprf(ep,1)*prf(-2*q12*q13-2*q12*q23-2*q12*q33,-4*M`j'^2*q12+4*M`j'^2*n1*q12+2*q12^2-2*n1*q12^2)+prf(-8*M`j'^2*q12+4*M`j'^2*n1*q12-4*M`j'^2*n4*q12+4*q12^2-2*n1*q12^2+2*n4*q12^2-M`j'^2*q13+M`j'^2*n1*q13+M`j'^2*n2*q13-2*M`j'^2*n3*q13+5*q12*q13-2*n1*q12*q13-2*n2*q12*q13-n4*q12*q13-5*M`j'^2*q23+M`j'^2*n1*q23+M`j'^2*n2*q23+2*M`j'^2*n3*q23-4*M`j'^2*n4*q23+7*q12*q23-2*n1*q12*q23-2*n2*q12*q23-2*n3*q12*q23+n4*q12*q23+M`j'^2*q33-M`j'^2*n1*q33+M`j'^2*n2*q33+4*q12*q33-n1*q12*q33-2*n2*q12*q33-n3*q12*q33-n4*q12*q33,-4*M`j'^2*q12+4*M`j'^2*n1*q12+2*q12^2-2*n1*q12^2))+mbox1l(-1+n1,n2,-1+n3,2+n4)*prf(-q13^2-n4*q13^2-2*q13*q23-2*n4*q13*q23-q23^2-n4*q23^2+2*q12*q33+2*n4*q12*q33,-2*q12^2+2*n1*q12^2)+mbox1l(-2+n1,n2,n3,2+n4)*prf(4*M`j'^2*q12^2+4*M`j'^2*n4*q12^2-2*q12^3-2*n4*q12^3+M`j'^2*q12*q13+M`j'^2*n4*q12*q13-q12^2*q13-n4*q12^2*q13+5*M`j'^2*q12*q23+5*M`j'^2*n4*q12*q23-3*q12^2*q23-3*n4*q12^2*q23+2*M`j'^2*q13*q23+2*M`j'^2*n4*q13*q23-q12*q13*q23-n4*q12*q13*q23+2*M`j'^2*q23^2+2*M`j'^2*n4*q23^2-q12*q23^2-n4*q12*q23^2-M`j'^2*q12*q33-M`j'^2*n4*q12*q33,-4*M`j'^2*q12^2+4*M`j'^2*n1*q12^2+2*q12^3-2*n1*q12^3)+mbox1l(-1+n1,-1+n2,n3,2+n4)*prf(-(M`j'^2*q12*q13)-M`j'^2*n4*q12*q13+2*M`j'^2*q13^2+2*M`j'^2*n4*q13^2-q12*q13^2-n4*q12*q13^2-M`j'^2*q12*q23-M`j'^2*n4*q12*q23+2*M`j'^2*q13*q23+2*M`j'^2*n4*q13*q23-q12*q13*q23-n4*q12*q13*q23-3*M`j'^2*q12*q33-3*M`j'^2*n4*q12*q33+q12^2*q33+n4*q12^2*q33,-4*M`j'^2*q12^2+4*M`j'^2*n1*q12^2+2*q12^3-2*n1*q12^3)+mbox1l(-1+n1,n2,n3,2+n4)*prf(2*M`j'^2*q13^2+2*M`j'^2*n4*q13^2-2*q12*q13^2-2*n4*q12*q13^2-2*q12*q13*q23-2*n4*q12*q13*q23-2*M`j'^2*q23^2-2*M`j'^2*n4*q23^2+2*M`j'^2*q13*q33+2*M`j'^2*n4*q13*q33-3*q12*q13*q33-3*n4*q12*q13*q33-2*M`j'^2*q23*q33-2*M`j'^2*n4*q23*q33-q12*q23*q33-n4*q12*q23*q33-q12*q33^2-n4*q12*q33^2,-4*M`j'^2*q12+4*M`j'^2*n1*q12+2*q12^2-2*n1*q12^2);
	Identify,ifmatch->jump mbox1l(n1?{,>1},n2?pos_,n3?neg_,n4?neg0_) = mbox1l(n1,-1+n2,1+n3,n4)*prf(M`j'^2,4*M`j'^2-2*q12)+mbox1l(-2+n1,1+n2,1+n3,n4)*prf(M`j'^2*n2,-4*M`j'^2+4*M`j'^2*n1+2*q12-2*n1*q12)+mbox1l(-2+n1,n2,2+n3,n4)*prf(M`j'^2+M`j'^2*n3,-4*M`j'^2+4*M`j'^2*n1+2*q12-2*n1*q12)+mbox1l(-1+n1,-1+n2,2+n3,n4)*prf(M`j'^2+M`j'^2*n3,-4*M`j'^2+4*M`j'^2*n1+2*q12-2*n1*q12)+mbox1l(-1+n1,n2,2+n3,n4)*prf(-(M`j'^2*q12)-M`j'^2*n3*q12,-2*M`j'^2+2*M`j'^2*n1+q12-n1*q12)+mbox1l(-1+n1,n2,1+n3,n4)*(tmpprf(ep,1)*prf(q12,-2*M`j'^2+2*M`j'^2*n1+q12-n1*q12)+prf(-5*M`j'^2+3*M`j'^2*n1-M`j'^2*n2-2*M`j'^2*n3-2*q12+2*n2*q12+2*n3*q12+n4*q12,-4*M`j'^2+4*M`j'^2*n1+2*q12-2*n1*q12))+mbox1l(-1+n1,-1+n2,1+n3,1+n4)*prf(-(M`j'^2*n4*q12)-2*M`j'^2*n4*q13+n4*q12*q13,4*M`j'^2*q12-4*M`j'^2*n1*q12-2*q12^2+2*n1*q12^2)+mbox1l(-1+n1,n2,n3,1+n4)*prf(-2*n4*q12-n4*q13-n4*q23,-2*q12+2*n1*q12)+mbox1l(-2+n1,n2,1+n3,1+n4)*prf(-3*M`j'^2*n4*q12+n4*q12^2-2*M`j'^2*n4*q23+n4*q12*q23,4*M`j'^2*q12-4*M`j'^2*n1*q12-2*q12^2+2*n1*q12^2)+mbox1l(-1+n1,n2,1+n3,1+n4)*prf(-2*M`j'^2*n4*q13+2*n4*q12*q13+2*M`j'^2*n4*q23+n4*q12*q33,-4*M`j'^2+4*M`j'^2*n1+2*q12-2*n1*q12);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?{,>1},n3?neg0_,n4?neg0_) = mbox1l(1+n1,-2+n2,n3,n4)*prf(M`j'^2*n1,-4*M`j'^2*q12+4*M`j'^2*n2*q12+2*q12^2-2*n2*q12^2)+mbox1l(n1,-1+n2,1+n3,n4)*prf(-(M`j'^2*n3),-2*M`j'^2+2*M`j'^2*n2+q12-n2*q12)+mbox1l(n1,-2+n2,1+n3,n4)*prf(M`j'^2*n3,-4*M`j'^2*q12+4*M`j'^2*n2*q12+2*q12^2-2*n2*q12^2)+mbox1l(n1,-2+n2,n3,1+n4)*prf(M`j'^2*n4,-4*M`j'^2*q12+4*M`j'^2*n2*q12+2*q12^2-2*n2*q12^2)+mbox1l(-1+n1,n2,n3,n4)*prf(-M`j'^2+q12,4*M`j'^2*q12-2*q12^2)+mbox1l(-1+n1,-1+n2,1+n3,n4)*prf(-(M`j'^2*n3)+n3*q12,-4*M`j'^2*q12+4*M`j'^2*n2*q12+2*q12^2-2*n2*q12^2)+mbox1l(-1+n1,-1+n2,n3,1+n4)*prf(-(M`j'^2*n4)+n4*q12,-4*M`j'^2*q12+4*M`j'^2*n2*q12+2*q12^2-2*n2*q12^2)+mbox1l(n1,-1+n2,n3,n4)*(tmpprf(ep,1)*prf(1,-2*M`j'^2+2*M`j'^2*n2+q12-n2*q12)+prf(-M`j'^2-M`j'^2*n1+M`j'^2*n2-5*q12+2*n1*q12+n2*q12+n3*q12+n4*q12,-4*M`j'^2*q12+4*M`j'^2*n2*q12+2*q12^2-2*n2*q12^2))+mbox1l(n1,-1+n2,n3,1+n4)*prf(2*M`j'^2*n4*q13+2*M`j'^2*n4*q23+n4*q12*q33,-4*M`j'^2*q12+4*M`j'^2*n2*q12+2*q12^2-2*n2*q12^2);
	Identify,ifmatch->jump mbox1l(n1?{,>1},n2?pos_,n3?neg0_,n4?neg0_) = mbox1l(-2+n1,1+n2,n3,n4)*prf(M`j'^2*n2,-4*M`j'^2*q12+4*M`j'^2*n1*q12+2*q12^2-2*n1*q12^2)+mbox1l(-1+n1,n2,1+n3,n4)*prf(-(M`j'^2*n3),-2*M`j'^2+2*M`j'^2*n1+q12-n1*q12)+mbox1l(-2+n1,n2,1+n3,n4)*prf(M`j'^2*n3,-4*M`j'^2*q12+4*M`j'^2*n1*q12+2*q12^2-2*n1*q12^2)+mbox1l(-2+n1,n2,n3,1+n4)*prf(M`j'^2*n4,-4*M`j'^2*q12+4*M`j'^2*n1*q12+2*q12^2-2*n1*q12^2)+mbox1l(n1,-1+n2,n3,n4)*prf(-M`j'^2+q12,4*M`j'^2*q12-2*q12^2)+mbox1l(-1+n1,-1+n2,1+n3,n4)*prf(-(M`j'^2*n3)+n3*q12,-4*M`j'^2*q12+4*M`j'^2*n1*q12+2*q12^2-2*n1*q12^2)+mbox1l(-1+n1,-1+n2,n3,1+n4)*prf(-(M`j'^2*n4)+n4*q12,-4*M`j'^2*q12+4*M`j'^2*n1*q12+2*q12^2-2*n1*q12^2)+mbox1l(-1+n1,n2,n3,n4)*(tmpprf(ep,1)*prf(1,-2*M`j'^2+2*M`j'^2*n1+q12-n1*q12)+prf(-M`j'^2+M`j'^2*n1-M`j'^2*n2-5*q12+n1*q12+2*n2*q12+n3*q12+n4*q12,-4*M`j'^2*q12+4*M`j'^2*n1*q12+2*q12^2-2*n1*q12^2))+mbox1l(-1+n1,n2,n3,1+n4)*prf(-4*M`j'^2*n4*q12+2*n4*q12^2-2*M`j'^2*n4*q13+2*n4*q12*q13-2*M`j'^2*n4*q23+2*n4*q12*q23+n4*q12*q33,-4*M`j'^2*q12+4*M`j'^2*n1*q12+2*q12^2-2*n1*q12^2);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?pos_,n3?neg0_,n4?neg_) = mbox1l(n1,-1+n2,n3,1+n4)*prf(-q13,q12)+mbox1l(-1+n1,n2,n3,1+n4)*prf(q12+q23,q12)+mbox1l(n1,n2,-1+n3,1+n4)*prf(-2*q13+n3*q13-n4*q13+2*q23-n3*q23+n4*q23,-q12+n3*q12)+mbox1l(n1,n2,n3,1+n4)*prf(-2*q13-q33,1)+mbox1l(n1,n2,-2+n3,2+n4)*prf(q13^2+n4*q13^2+2*q13*q23+2*n4*q13*q23+q23^2+n4*q23^2-2*q12*q33-2*n4*q12*q33,-q12^2+n3*q12^2)+mbox1l(n1,-1+n2,-1+n3,2+n4)*prf(-q13^2-n4*q13^2-q13*q23-n4*q13*q23+q12*q33+n4*q12*q33,-q12^2+n3*q12^2)+mbox1l(-1+n1,n2,-1+n3,2+n4)*prf(q12*q13+n4*q12*q13-q12*q23-n4*q12*q23-q13*q23-n4*q13*q23-q23^2-n4*q23^2+q12*q33+n4*q12*q33,-q12^2+n3*q12^2)+mbox1l(n1,n2,-1+n3,2+n4)*prf(-2*q13^2-2*n4*q13^2-2*q13*q23-2*n4*q13*q23+2*q12*q33+2*n4*q12*q33-q13*q33-n4*q13*q33+q23*q33+n4*q23*q33,-q12+n3*q12);
	Identify,ifmatch->jump mbox1l(1,1,n3?neg_,0) = tmpprf(1,-1+2*ep+n3)*mbox1l(0,2,n3,0)*prf(-M`j'^2,q12)+tmpprf(1,-1+2*ep+n3)*mbox1l(0,2,1+n3,0)*prf(M`j'^2,1)+tmpprf(1,-1+2*ep+n3)*mbox1l(2,0,1+n3,0)*prf(M`j'^2,1)+tmpprf(1,-1+2*ep+n3)*mbox1l(0,1,1+n3,0)*prf(-(M`j'^2*n3),q12)+tmpprf(1,-1+2*ep+n3)*mbox1l(0,1,2+n3,0)*prf(M`j'^2+M`j'^2*n3,1)+tmpprf(1,-1+2*ep+n3)*mbox1l(1,0,2+n3,0)*prf(M`j'^2+M`j'^2*n3,1)+tmpprf(1,-1+2*ep+n3)*mbox1l(2,0,n3,0)*prf(M`j'^2-q12,q12)+mbox1l(1,1,1+n3,0)*(tmpprf(ep,-1+2*ep+n3)*prf(2*q12,1)+tmpprf(1,-1+2*ep+n3)*prf(2*n3*q12,1))+tmpprf(1,-1+2*ep+n3)*mbox1l(1,0,1+n3,0)*prf(M`j'^2*n3-n3*q12,q12)+tmpprf(1,-1+2*ep+n3)*mbox1l(1,1,2+n3,0)*prf(-2*M`j'^2*q12-2*M`j'^2*n3*q12,1);
	Identify,ifmatch->jump mbox1l(n1?neg_,n2?pos_,n3?pos_,n4?{,>1}) = mbox1l(1+n1,-1+n2,1+n3,-1+n4)*prf(-(n3*q13),-q12+n4*q12-q23+n4*q23)+mbox1l(2+n1,n2,n3,-2+n4)*prf(2*q12*q13+2*n1*q12*q13,-2*q12*q13+2*n4*q12*q13-2*q13*q23+2*n4*q13*q23-q12*q33+n4*q12*q33-q23*q33+n4*q23*q33)+mbox1l(1+n1,n2,-1+n3,n4)*prf(q33,2*q13+q33)+mbox1l(2+n1,-1+n2,n3,-1+n4)*prf(-(q13*q33)-n1*q13*q33,-2*q12*q13+2*n4*q12*q13-2*q13*q23+2*n4*q13*q23-q12*q33+n4*q12*q33-q23*q33+n4*q23*q33)+mbox1l(2+n1,n2,-1+n3,-1+n4)*prf(q12*q33+n1*q12*q33+q13*q33+n1*q13*q33,-2*q12*q13+2*n4*q12*q13-2*q13*q23+2*n4*q13*q23-q12*q33+n4*q12*q33-q23*q33+n4*q23*q33)+mbox1l(1+n1,1+n2,-1+n3,-1+n4)*prf(2*n2*q13^2+2*n2*q13*q23-n2*q12*q33+n2*q13*q33,-2*q12*q13+2*n4*q12*q13-2*q13*q23+2*n4*q13*q23-q12*q33+n4*q12*q33-q23*q33+n4*q23*q33)+mbox1l(1+n1,n2,n3,-1+n4)*prf(-4*q12*q13-2*n1*q12*q13+2*n4*q12*q13-2*n2*q13^2+2*n3*q13^2-2*q13*q23-2*n2*q13*q23+2*n4*q13*q23-q12*q33-n1*q12*q33+n2*q12*q33-n2*q13*q33+n3*q13*q33,-2*q12*q13+2*n4*q12*q13-2*q13*q23+2*n4*q13*q23-q12*q33+n4*q12*q33-q23*q33+n4*q23*q33);
	Identify,ifmatch->jump mbox1l(n1?neg_,n2?pos_,n3?{,>1},n4?pos_) = mbox1l(1+n1,n2,n3,-1+n4)*prf(2*q12^2+2*q12*q13+2*q12*q23+q12*q33,2*q12^2+4*q12*q23+2*q23^2)+mbox1l(1+n1,1+n2,-1+n3,-1+n4)*prf(2*n2*q12*q13+n2*q12*q33,-2*q12^2+2*n3*q12^2-4*q12*q23+4*n3*q12*q23-2*q23^2+2*n3*q23^2)+mbox1l(1+n1,n2,-2+n3,1+n4)*prf(2*n4*q12^2+2*n4*q12*q13+2*n4*q12*q23+n4*q12*q33,-2*q12^2+2*n3*q12^2-4*q12*q23+4*n3*q12*q23-2*q23^2+2*n3*q23^2)+mbox1l(2+n1,n2,-1+n3,-1+n4)*prf(-4*M`j'^2*q12^3-4*M`j'^2*n1*q12^3-8*M`j'^2*q12^2*q13-8*M`j'^2*n1*q12^2*q13+4*q12^3*q13+4*n1*q12^3*q13+4*q12^2*q13^2+4*n1*q12^2*q13^2+4*q12^2*q13*q23+4*n1*q12^2*q13*q23+4*M`j'^2*q12*q23^2+4*M`j'^2*n1*q12*q23^2-2*M`j'^2*q12^2*q33-2*M`j'^2*n1*q12^2*q33+2*q12^3*q33+2*n1*q12^3*q33+4*q12^2*q13*q33+4*n1*q12^2*q13*q33+2*M`j'^2*q12*q23*q33+2*M`j'^2*n1*q12*q23*q33+2*q12^2*q23*q33+2*n1*q12^2*q23*q33+q12^2*q33^2+n1*q12^2*q33^2,-4*M`j'^2*q12^3+4*M`j'^2*n3*q12^3-12*M`j'^2*q12^2*q23+12*M`j'^2*n3*q12^2*q23-12*M`j'^2*q12*q23^2+12*M`j'^2*n3*q12*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n3*q23^3)+mbox1l(1+n1,-1+n2,n3,n4)*prf(12*M`j'^2*q12^2*q13+16*M`j'^2*q12*q13^2-8*q12^2*q13^2-8*q12*q13^3+8*M`j'^2*q12*q13*q23-8*q12*q13^2*q23-4*M`j'^2*q13*q23^2+8*M`j'^2*q12^2*q33+16*M`j'^2*q12*q13*q33-8*q12^2*q13*q33-12*q12*q13^2*q33+8*M`j'^2*q12*q23*q33-8*q12*q13*q23*q33+4*M`j'^2*q12*q33^2-2*q12^2*q33^2-6*q12*q13*q33^2-2*q12*q23*q33^2-q12*q33^3,4*M`j'^2*q12^3+12*M`j'^2*q12^2*q23+12*M`j'^2*q12*q23^2+4*M`j'^2*q23^3)+mbox1l(2+n1,-1+n2,-1+n3,n4)*prf(4*M`j'^2*q12^2*q13+4*M`j'^2*n1*q12^2*q13+4*M`j'^2*q12*q13^2+4*M`j'^2*n1*q12*q13^2-4*q12^2*q13^2-4*n1*q12^2*q13^2-4*q12*q13^3-4*n1*q12*q13^3-4*M`j'^2*q13^2*q23-4*M`j'^2*n1*q13^2*q23-4*q12*q13^2*q23-4*n1*q12*q13^2*q23-4*M`j'^2*q13*q23^2-4*M`j'^2*n1*q13*q23^2+8*M`j'^2*q12^2*q33+8*M`j'^2*n1*q12^2*q33+12*M`j'^2*q12*q13*q33+12*M`j'^2*n1*q12*q13*q33-6*q12^2*q13*q33-6*n1*q12^2*q13*q33-8*q12*q13^2*q33-8*n1*q12*q13^2*q33+8*M`j'^2*q12*q23*q33+8*M`j'^2*n1*q12*q23*q33-6*q12*q13*q23*q33-6*n1*q12*q13*q23*q33+4*M`j'^2*q12*q33^2+4*M`j'^2*n1*q12*q33^2-2*q12^2*q33^2-2*n1*q12^2*q33^2-5*q12*q13*q33^2-5*n1*q12*q13*q33^2-2*q12*q23*q33^2-2*n1*q12*q23*q33^2-q12*q33^3-n1*q12*q33^3,-4*M`j'^2*q12^3+4*M`j'^2*n3*q12^3-12*M`j'^2*q12^2*q23+12*M`j'^2*n3*q12^2*q23-12*M`j'^2*q12*q23^2+12*M`j'^2*n3*q12*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n3*q23^3)+mbox1l(2+n1,n2,-2+n3,n4)*prf(4*M`j'^2*q12^3+4*M`j'^2*n1*q12^3-4*M`j'^2*q12*q13^2-4*M`j'^2*n1*q12*q13^2+4*q12^2*q13^2+4*n1*q12^2*q13^2+4*q12*q13^3+4*n1*q12*q13^3+4*M`j'^2*q12^2*q23+4*M`j'^2*n1*q12^2*q23+4*q12^2*q13*q23+4*n1*q12^2*q13*q23+4*M`j'^2*q13^2*q23+4*M`j'^2*n1*q13^2*q23+8*q12*q13^2*q23+8*n1*q12*q13^2*q23+4*M`j'^2*q12*q23^2+4*M`j'^2*n1*q12*q23^2+8*M`j'^2*q13*q23^2+8*M`j'^2*n1*q13*q23^2+4*q12*q13*q23^2+4*n1*q12*q13*q23^2+4*M`j'^2*q23^3+4*M`j'^2*n1*q23^3-10*M`j'^2*q12^2*q33-10*M`j'^2*n1*q12^2*q33-12*M`j'^2*q12*q13*q33-12*M`j'^2*n1*q12*q13*q33+6*q12^2*q13*q33+6*n1*q12^2*q13*q33+8*q12*q13^2*q33+8*n1*q12*q13^2*q33-14*M`j'^2*q12*q23*q33-14*M`j'^2*n1*q12*q23*q33+2*q12^2*q23*q33+2*n1*q12^2*q23*q33+10*q12*q13*q23*q33+10*n1*q12*q13*q23*q33+2*q12*q23^2*q33+2*n1*q12*q23^2*q33-4*M`j'^2*q12*q33^2-4*M`j'^2*n1*q12*q33^2+2*q12^2*q33^2+2*n1*q12^2*q33^2+5*q12*q13*q33^2+5*n1*q12*q13*q33^2+3*q12*q23*q33^2+3*n1*q12*q23*q33^2+q12*q33^3+n1*q12*q33^3,-4*M`j'^2*q12^3+4*M`j'^2*n3*q12^3-12*M`j'^2*q12^2*q23+12*M`j'^2*n3*q12^2*q23-12*M`j'^2*q12*q23^2+12*M`j'^2*n3*q12*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n3*q23^3)+mbox1l(1+n1,1+n2,-2+n3,n4)*prf(-4*M`j'^2*n2*q12^3-20*M`j'^2*n2*q12^2*q13+8*n2*q12^3*q13-16*M`j'^2*n2*q12*q13^2+16*n2*q12^2*q13^2+8*n2*q12*q13^3-8*M`j'^2*n2*q12^2*q23-20*M`j'^2*n2*q12*q13*q23+16*n2*q12^2*q13*q23+16*n2*q12*q13^2*q23-4*M`j'^2*n2*q12*q23^2+8*n2*q12*q13*q23^2-10*M`j'^2*n2*q12^2*q33+4*n2*q12^3*q33-16*M`j'^2*n2*q12*q13*q33+16*n2*q12^2*q13*q33+12*n2*q12*q13^2*q33-10*M`j'^2*n2*q12*q23*q33+8*n2*q12^2*q23*q33+16*n2*q12*q13*q23*q33+4*n2*q12*q23^2*q33-4*M`j'^2*n2*q12*q33^2+4*n2*q12^2*q33^2+6*n2*q12*q13*q33^2+4*n2*q12*q23*q33^2+n2*q12*q33^3,-4*M`j'^2*q12^3+4*M`j'^2*n3*q12^3-12*M`j'^2*q12^2*q23+12*M`j'^2*n3*q12^2*q23-12*M`j'^2*q12*q23^2+12*M`j'^2*n3*q12*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n3*q23^3)+mbox1l(1+n1,n2,-1+n3,n4)*(tmpprf(ep,1)*prf(8*q12^3*q13+8*q12^2*q13^2+16*q12^2*q13*q23+8*q12*q13^2*q23+8*q12*q13*q23^2+4*q12^3*q33+8*q12^2*q13*q33+8*q12^2*q23*q33+8*q12*q13*q23*q33+4*q12*q23^2*q33+2*q12^2*q33^2+2*q12*q23*q33^2,-4*M`j'^2*q12^3+4*M`j'^2*n3*q12^3-12*M`j'^2*q12^2*q23+12*M`j'^2*n3*q12^2*q23-12*M`j'^2*q12*q23^2+12*M`j'^2*n3*q12*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n3*q23^3)+prf(4*M`j'^2*n2*q12^3-4*M`j'^2*n4*q12^3+20*M`j'^2*q12^2*q13+4*M`j'^2*n1*q12^2*q13+16*M`j'^2*n2*q12^2*q13-16*M`j'^2*n3*q12^2*q13-4*M`j'^2*n4*q12^2*q13-20*q12^3*q13+4*n1*q12^3*q13+8*n3*q12^3*q13+8*n4*q12^3*q13+16*M`j'^2*q12*q13^2+16*M`j'^2*n2*q12*q13^2-16*M`j'^2*n3*q12*q13^2-28*q12^2*q13^2+4*n1*q12^2*q13^2-8*n2*q12^2*q13^2+16*n3*q12^2*q13^2+8*n4*q12^2*q13^2-8*q12*q13^3-8*n2*q12*q13^3+8*n3*q12*q13^3-8*M`j'^2*q12^2*q23-4*M`j'^2*n1*q12^2*q23+8*M`j'^2*n2*q12^2*q23+4*M`j'^2*n3*q12^2*q23-8*M`j'^2*n4*q12^2*q23+12*M`j'^2*q12*q13*q23+16*M`j'^2*n2*q12*q13*q23-12*M`j'^2*n3*q12*q13*q23-4*M`j'^2*n4*q12*q13*q23-40*q12^2*q13*q23+8*n1*q12^2*q13*q23+16*n3*q12^2*q13*q23+16*n4*q12^2*q13*q23-28*q12*q13^2*q23+4*n1*q12*q13^2*q23-8*n2*q12*q13^2*q23+16*n3*q12*q13^2*q23+8*n4*q12*q13^2*q23-16*M`j'^2*q12*q23^2-8*M`j'^2*n1*q12*q23^2+4*M`j'^2*n2*q12*q23^2+8*M`j'^2*n3*q12*q23^2-4*M`j'^2*n4*q12*q23^2-8*M`j'^2*q13*q23^2-4*M`j'^2*n1*q13*q23^2+4*M`j'^2*n3*q13*q23^2-20*q12*q13*q23^2+4*n1*q12*q13*q23^2+8*n3*q12*q13*q23^2+8*n4*q12*q13*q23^2-8*M`j'^2*q23^3-4*M`j'^2*n1*q23^3+4*M`j'^2*n3*q23^3+14*M`j'^2*q12^2*q33+4*M`j'^2*n1*q12^2*q33+8*M`j'^2*n2*q12^2*q33-10*M`j'^2*n3*q12^2*q33-2*M`j'^2*n4*q12^2*q33-10*q12^3*q33+2*n1*q12^3*q33+4*n3*q12^3*q33+4*n4*q12^3*q33+16*M`j'^2*q12*q13*q33+16*M`j'^2*n2*q12*q13*q33-16*M`j'^2*n3*q12*q13*q33-28*q12^2*q13*q33+4*n1*q12^2*q13*q33-8*n2*q12^2*q13*q33+16*n3*q12^2*q13*q33+8*n4*q12^2*q13*q33-12*q12*q13^2*q33-12*n2*q12*q13^2*q33+12*n3*q12*q13^2*q33+14*M`j'^2*q12*q23*q33+4*M`j'^2*n1*q12*q23*q33+8*M`j'^2*n2*q12*q23*q33-10*M`j'^2*n3*q12*q23*q33-2*M`j'^2*n4*q12*q23*q33-20*q12^2*q23*q33+4*n1*q12^2*q23*q33+8*n3*q12^2*q23*q33+8*n4*q12^2*q23*q33-28*q12*q13*q23*q33+4*n1*q12*q13*q23*q33-8*n2*q12*q13*q23*q33+16*n3*q12*q13*q23*q33+8*n4*q12*q13*q23*q33-10*q12*q23^2*q33+2*n1*q12*q23^2*q33+4*n3*q12*q23^2*q33+4*n4*q12*q23^2*q33+4*M`j'^2*q12*q33^2+4*M`j'^2*n2*q12*q33^2-4*M`j'^2*n3*q12*q33^2-7*q12^2*q33^2+n1*q12^2*q33^2-2*n2*q12^2*q33^2+4*n3*q12^2*q33^2+2*n4*q12^2*q33^2-6*q12*q13*q33^2-6*n2*q12*q13*q33^2+6*n3*q12*q13*q33^2-7*q12*q23*q33^2+n1*q12*q23*q33^2-2*n2*q12*q23*q33^2+4*n3*q12*q23*q33^2+2*n4*q12*q23*q33^2-q12*q33^3-n2*q12*q33^3+n3*q12*q33^3,-4*M`j'^2*q12^3+4*M`j'^2*n3*q12^3-12*M`j'^2*q12^2*q23+12*M`j'^2*n3*q12^2*q23-12*M`j'^2*q12*q23^2+12*M`j'^2*n3*q12*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n3*q23^3))+mbox1l(2+n1,n2,-1+n3,n4)*prf(-8*q12^3*q13^2-8*n1*q12^3*q13^2-8*q12^2*q13^3-8*n1*q12^2*q13^3-16*M`j'^2*q12^2*q13*q23-16*M`j'^2*n1*q12^2*q13*q23-16*M`j'^2*q12*q13^2*q23-16*M`j'^2*n1*q12*q13^2*q23-8*q12^2*q13^2*q23-8*n1*q12^2*q13^2*q23-16*M`j'^2*q12*q13*q23^2-16*M`j'^2*n1*q12*q13*q23^2+8*M`j'^2*q12^3*q33+8*M`j'^2*n1*q12^3*q33+8*M`j'^2*q12^2*q13*q33+8*M`j'^2*n1*q12^2*q13*q33-8*q12^3*q13*q33-8*n1*q12^3*q13*q33-12*q12^2*q13^2*q33-12*n1*q12^2*q13^2*q33+8*M`j'^2*q12^2*q23*q33+8*M`j'^2*n1*q12^2*q23*q33-8*M`j'^2*q12*q13*q23*q33-8*M`j'^2*n1*q12*q13*q23*q33-8*q12^2*q13*q23*q33-8*n1*q12^2*q13*q23*q33+4*M`j'^2*q12^2*q33^2+4*M`j'^2*n1*q12^2*q33^2-2*q12^3*q33^2-2*n1*q12^3*q33^2-6*q12^2*q13*q33^2-6*n1*q12^2*q13*q33^2-2*q12^2*q23*q33^2-2*n1*q12^2*q23*q33^2-q12^2*q33^3-n1*q12^2*q33^3,-4*M`j'^2*q12^3+4*M`j'^2*n3*q12^3-12*M`j'^2*q12^2*q23+12*M`j'^2*n3*q12^2*q23-12*M`j'^2*q12*q23^2+12*M`j'^2*n3*q12*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n3*q23^3);
	Identify,ifmatch->jump mbox1l(n1?neg_,n2?{,>1},n3?pos_,n4?pos_) = mbox1l(1+n1,n2,n3,-1+n4)*prf(2*q12^2-2*q12*q13+2*q12*q23-q12*q33,2*q12^2+4*q12*q23+2*q23^2)+mbox1l(1+n1,-1+n2,1+n3,-1+n4)*prf(-2*n3*q12*q13-n3*q12*q33,-2*q12^2+2*n2*q12^2-4*q12*q23+4*n2*q12*q23-2*q23^2+2*n2*q23^2)+mbox1l(1+n1,-1+n2,-1+n3,1+n4)*prf(-2*n4*q12*q13-n4*q12*q33,-2*q12^2+2*n2*q12^2-4*q12*q23+4*n2*q12*q23-2*q23^2+2*n2*q23^2)+mbox1l(2+n1,-1+n2,n3,-1+n4)*prf(8*M`j'^2*q12^2*q13+8*M`j'^2*n1*q12^2*q13-4*q12^2*q13^2-4*n1*q12^2*q13^2+2*M`j'^2*q12^2*q33+2*M`j'^2*n1*q12^2*q33-4*q12^2*q13*q33-4*n1*q12^2*q13*q33-2*M`j'^2*q12*q23*q33-2*M`j'^2*n1*q12*q23*q33-q12^2*q33^2-n1*q12^2*q33^2,-4*M`j'^2*q12^3+4*M`j'^2*n2*q12^3-12*M`j'^2*q12^2*q23+12*M`j'^2*n2*q12^2*q23-12*M`j'^2*q12*q23^2+12*M`j'^2*n2*q12*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n2*q23^3)+mbox1l(1+n1,n2,-1+n3,n4)*prf(8*M`j'^2*q12^2*q13+16*M`j'^2*q12*q13^2-8*q12^2*q13^2-8*q12*q13^3+4*M`j'^2*q12^2*q23+12*M`j'^2*q12*q13*q23-8*q12*q13^2*q23+8*M`j'^2*q12*q23^2+4*M`j'^2*q13*q23^2+4*M`j'^2*q23^3+2*M`j'^2*q12^2*q33+16*M`j'^2*q12*q13*q33-8*q12^2*q13*q33-12*q12*q13^2*q33+2*M`j'^2*q12*q23*q33-8*q12*q13*q23*q33+4*M`j'^2*q12*q33^2-2*q12^2*q33^2-6*q12*q13*q33^2-2*q12*q23*q33^2-q12*q33^3,4*M`j'^2*q12^3+12*M`j'^2*q12^2*q23+12*M`j'^2*q12*q23^2+4*M`j'^2*q23^3)+mbox1l(2+n1,-1+n2,-1+n3,n4)*prf(-4*M`j'^2*q12^2*q13-4*M`j'^2*n1*q12^2*q13+4*M`j'^2*q12*q13^2+4*M`j'^2*n1*q12*q13^2-4*q12*q13^3-4*n1*q12*q13^3-4*M`j'^2*q13^2*q23-4*M`j'^2*n1*q13^2*q23-4*q12*q13^2*q23-4*n1*q12*q13^2*q23-4*M`j'^2*q13*q23^2-4*M`j'^2*n1*q13*q23^2+2*M`j'^2*q12^2*q33+2*M`j'^2*n1*q12^2*q33+12*M`j'^2*q12*q13*q33+12*M`j'^2*n1*q12*q13*q33-8*q12*q13^2*q33-8*n1*q12*q13^2*q33+6*M`j'^2*q12*q23*q33+6*M`j'^2*n1*q12*q23*q33-4*q12*q13*q23*q33-4*n1*q12*q13*q23*q33+4*M`j'^2*q12*q33^2+4*M`j'^2*n1*q12*q33^2-5*q12*q13*q33^2-5*n1*q12*q13*q33^2-q12*q23*q33^2-n1*q12*q23*q33^2-q12*q33^3-n1*q12*q33^3,-4*M`j'^2*q12^3+4*M`j'^2*n2*q12^3-12*M`j'^2*q12^2*q23+12*M`j'^2*n2*q12^2*q23-12*M`j'^2*q12*q23^2+12*M`j'^2*n2*q12*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n2*q23^3)+mbox1l(2+n1,-2+n2,n3,n4)*prf(-4*M`j'^2*q12*q13^2-4*M`j'^2*n1*q12*q13^2+4*q12*q13^3+4*n1*q12*q13^3+4*M`j'^2*q13^2*q23+4*M`j'^2*n1*q13^2*q23-12*M`j'^2*q12*q13*q33-12*M`j'^2*n1*q12*q13*q33+8*q12*q13^2*q33+8*n1*q12*q13^2*q33-4*M`j'^2*q12*q33^2-4*M`j'^2*n1*q12*q33^2+5*q12*q13*q33^2+5*n1*q12*q13*q33^2+q12*q33^3+n1*q12*q33^3,-4*M`j'^2*q12^3+4*M`j'^2*n2*q12^3-12*M`j'^2*q12^2*q23+12*M`j'^2*n2*q12^2*q23-12*M`j'^2*q12*q23^2+12*M`j'^2*n2*q12*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n2*q23^3)+mbox1l(1+n1,-1+n2,n3,n4)*(tmpprf(ep,1)*prf(-8*q12^2*q13^2-8*q12*q13^2*q23-8*q12^2*q13*q33-8*q12*q13*q23*q33-2*q12^2*q33^2-2*q12*q23*q33^2,-4*M`j'^2*q12^3+4*M`j'^2*n2*q12^3-12*M`j'^2*q12^2*q23+12*M`j'^2*n2*q12^2*q23-12*M`j'^2*q12*q23^2+12*M`j'^2*n2*q12*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n2*q23^3)+prf(-4*M`j'^2*n1*q12^2*q13-4*M`j'^2*n2*q12^2*q13+4*M`j'^2*n3*q12^2*q13+4*M`j'^2*n4*q12^2*q13+16*M`j'^2*q12*q13^2-16*M`j'^2*n2*q12*q13^2+16*M`j'^2*n3*q12*q13^2+12*q12^2*q13^2-4*n1*q12^2*q13^2-8*n3*q12^2*q13^2-8*n4*q12^2*q13^2-8*q12*q13^3+8*n2*q12*q13^3-8*n3*q12*q13^3+8*M`j'^2*q12*q13*q23-8*M`j'^2*n2*q12*q13*q23+4*M`j'^2*n3*q12*q13*q23+4*M`j'^2*n4*q12*q13*q23+12*q12*q13^2*q23-4*n1*q12*q13^2*q23-8*n3*q12*q13^2*q23-8*n4*q12*q13^2*q23+8*M`j'^2*q13*q23^2+4*M`j'^2*n1*q13*q23^2-4*M`j'^2*n2*q13*q23^2-4*M`j'^2*q12^2*q33-4*M`j'^2*n1*q12^2*q33+2*M`j'^2*n3*q12^2*q33+2*M`j'^2*n4*q12^2*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n2*q12*q13*q33+16*M`j'^2*n3*q12*q13*q33+12*q12^2*q13*q33-4*n1*q12^2*q13*q33-8*n3*q12^2*q13*q33-8*n4*q12^2*q13*q33-12*q12*q13^2*q33+12*n2*q12*q13^2*q33-12*n3*q12*q13^2*q33-4*M`j'^2*q12*q23*q33-4*M`j'^2*n1*q12*q23*q33+2*M`j'^2*n3*q12*q23*q33+2*M`j'^2*n4*q12*q23*q33+12*q12*q13*q23*q33-4*n1*q12*q13*q23*q33-8*n3*q12*q13*q23*q33-8*n4*q12*q13*q23*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n2*q12*q33^2+4*M`j'^2*n3*q12*q33^2+3*q12^2*q33^2-n1*q12^2*q33^2-2*n3*q12^2*q33^2-2*n4*q12^2*q33^2-6*q12*q13*q33^2+6*n2*q12*q13*q33^2-6*n3*q12*q13*q33^2+3*q12*q23*q33^2-n1*q12*q23*q33^2-2*n3*q12*q23*q33^2-2*n4*q12*q23*q33^2-q12*q33^3+n2*q12*q33^3-n3*q12*q33^3,-4*M`j'^2*q12^3+4*M`j'^2*n2*q12^3-12*M`j'^2*q12^2*q23+12*M`j'^2*n2*q12^2*q23-12*M`j'^2*q12*q23^2+12*M`j'^2*n2*q12*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n2*q23^3))+mbox1l(1+n1,-2+n2,1+n3,n4)*prf(-16*M`j'^2*n3*q12*q13^2+8*n3*q12*q13^3-16*M`j'^2*n3*q12*q13*q33+12*n3*q12*q13^2*q33-4*M`j'^2*n3*q12*q33^2+6*n3*q12*q13*q33^2+n3*q12*q33^3,-4*M`j'^2*q12^3+4*M`j'^2*n2*q12^3-12*M`j'^2*q12^2*q23+12*M`j'^2*n2*q12^2*q23-12*M`j'^2*q12*q23^2+12*M`j'^2*n2*q12*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n2*q23^3)+mbox1l(2+n1,-1+n2,n3,n4)*prf(8*q12^2*q13^3+8*n1*q12^2*q13^3+16*M`j'^2*q12*q13^2*q23+16*M`j'^2*n1*q12*q13^2*q23-8*M`j'^2*q12^2*q13*q33-8*M`j'^2*n1*q12^2*q13*q33+12*q12^2*q13^2*q33+12*n1*q12^2*q13^2*q33+8*M`j'^2*q12*q13*q23*q33+8*M`j'^2*n1*q12*q13*q23*q33-4*M`j'^2*q12^2*q33^2-4*M`j'^2*n1*q12^2*q33^2+6*q12^2*q13*q33^2+6*n1*q12^2*q13*q33^2+q12^2*q33^3+n1*q12^2*q33^3,-4*M`j'^2*q12^3+4*M`j'^2*n2*q12^3-12*M`j'^2*q12^2*q23+12*M`j'^2*n2*q12^2*q23-12*M`j'^2*q12*q23^2+12*M`j'^2*n2*q12*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n2*q23^3);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?pos_,n3?pos_,n4?{,>1}) = mbox1l(n1,n2,-1+n3,n4)*prf(1,-2*q13-q33)+mbox1l(n1,-1+n2,1+n3,-1+n4)*prf(-n3,-q12+n4*q12-q23+n4*q23)+mbox1l(1+n1,n2,n3,-1+n4)*prf(-(n1*q12),-q12+n4*q12-q23+n4*q23)+mbox1l(1+n1,n2,n3,-2+n4)*prf(n1*q12,-2*q12*q13+2*n4*q12*q13-2*q13*q23+2*n4*q13*q23-q12*q33+n4*q12*q33-q23*q33+n4*q23*q33)+mbox1l(1+n1,-1+n2,n3,-1+n4)*prf(-(n1*q13)-n1*q33,-2*q12*q13+2*n4*q12*q13-2*q13*q23+2*n4*q13*q23-q12*q33+n4*q12*q33-q23*q33+n4*q23*q33)+mbox1l(1+n1,n2,-1+n3,-1+n4)*prf(-(n1*q12)+n1*q13+n1*q33,-2*q12*q13+2*n4*q12*q13-2*q13*q23+2*n4*q13*q23-q12*q33+n4*q12*q33-q23*q33+n4*q23*q33)+mbox1l(n1,1+n2,-1+n3,-1+n4)*prf(n2*q12+2*n2*q13+n2*q23+n2*q33,-2*q12*q13+2*n4*q12*q13-2*q13*q23+2*n4*q13*q23-q12*q33+n4*q12*q33-q23*q33+n4*q23*q33)+mbox1l(n1,n2,n3,-1+n4)*prf(-q12-n2*q12+n4*q12-2*n2*q13+2*n3*q13-q23-n2*q23+n4*q23-n2*q33+n3*q33,-2*q12*q13+2*n4*q12*q13-2*q13*q23+2*n4*q13*q23-q12*q33+n4*q12*q33-q23*q33+n4*q23*q33);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?pos_,n3?{,>1},n4?pos_) = mbox1l(n1,n2,n3,-1+n4)*prf(1,2*q12+2*q23)+mbox1l(n1,1+n2,-1+n3,-1+n4)*prf(n2,-2*q12+2*n3*q12-2*q23+2*n3*q23)+mbox1l(n1,n2,-2+n3,1+n4)*prf(2*n4*q12+2*n4*q13+2*n4*q23+n4*q33,-4*q12*q13+4*n3*q12*q13-4*q13*q23+4*n3*q13*q23-2*q12*q33+2*n3*q12*q33-2*q23*q33+2*n3*q23*q33)+mbox1l(n1,-1+n2,n3,n4)*prf(4*M`j'^2*q12+8*M`j'^2*q13-4*q12*q13-4*q13^2+4*M`j'^2*q23-4*q13*q23+4*M`j'^2*q33-2*q12*q33-4*q13*q33-2*q23*q33-q33^2,4*M`j'^2*q12^2+8*M`j'^2*q12*q23+4*M`j'^2*q23^2)+mbox1l(1+n1,n2,-1+n3,n4)*prf(4*M`j'^2*n1*q12*q13-4*n1*q12^2*q13-4*n1*q12*q13^2-4*M`j'^2*n1*q12*q23-4*M`j'^2*n1*q13*q23-4*n1*q12*q13*q23-4*M`j'^2*n1*q23^2+4*M`j'^2*n1*q12*q33-2*n1*q12^2*q33-4*n1*q12*q13*q33-2*n1*q12*q23*q33-n1*q12*q33^2,-4*M`j'^2*q12^2+4*M`j'^2*n3*q12^2-8*M`j'^2*q12*q23+8*M`j'^2*n3*q12*q23-4*M`j'^2*q23^2+4*M`j'^2*n3*q23^2)+mbox1l(1+n1,n2,-1+n3,-1+n4)*prf(-4*M`j'^2*n1*q12^2-4*M`j'^2*n1*q12*q13+4*n1*q12^2*q13+4*n1*q12*q13^2-4*M`j'^2*n1*q12*q23+4*M`j'^2*n1*q13*q23+4*n1*q12*q13*q23-2*M`j'^2*n1*q12*q33+2*n1*q12^2*q33+4*n1*q12*q13*q33+2*M`j'^2*n1*q23*q33+2*n1*q12*q23*q33+n1*q12*q33^2,-8*M`j'^2*q12^2*q13+8*M`j'^2*n3*q12^2*q13-16*M`j'^2*q12*q13*q23+16*M`j'^2*n3*q12*q13*q23-8*M`j'^2*q13*q23^2+8*M`j'^2*n3*q13*q23^2-4*M`j'^2*q12^2*q33+4*M`j'^2*n3*q12^2*q33-8*M`j'^2*q12*q23*q33+8*M`j'^2*n3*q12*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n3*q23^2*q33)+mbox1l(1+n1,-1+n2,-1+n3,n4)*prf(4*M`j'^2*n1*q12*q13+8*M`j'^2*n1*q13^2-4*n1*q12*q13^2-4*n1*q13^3+4*M`j'^2*n1*q13*q23-4*n1*q13^2*q23+4*M`j'^2*n1*q12*q33+12*M`j'^2*n1*q13*q33-6*n1*q12*q13*q33-8*n1*q13^2*q33+4*M`j'^2*n1*q23*q33-6*n1*q13*q23*q33+4*M`j'^2*n1*q33^2-2*n1*q12*q33^2-5*n1*q13*q33^2-2*n1*q23*q33^2-n1*q33^3,-8*M`j'^2*q12^2*q13+8*M`j'^2*n3*q12^2*q13-16*M`j'^2*q12*q13*q23+16*M`j'^2*n3*q12*q13*q23-8*M`j'^2*q13*q23^2+8*M`j'^2*n3*q13*q23^2-4*M`j'^2*q12^2*q33+4*M`j'^2*n3*q12^2*q33-8*M`j'^2*q12*q23*q33+8*M`j'^2*n3*q12*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n3*q23^2*q33)+mbox1l(1+n1,n2,-2+n3,n4)*prf(4*M`j'^2*n1*q12^2-8*M`j'^2*n1*q13^2+4*n1*q12*q13^2+4*n1*q13^3+4*M`j'^2*n1*q12*q23-8*M`j'^2*n1*q13*q23+4*n1*q12*q13*q23+8*n1*q13^2*q23+4*n1*q13*q23^2-2*M`j'^2*n1*q12*q33-12*M`j'^2*n1*q13*q33+6*n1*q12*q13*q33+8*n1*q13^2*q33-6*M`j'^2*n1*q23*q33+2*n1*q12*q23*q33+10*n1*q13*q23*q33+2*n1*q23^2*q33-4*M`j'^2*n1*q33^2+2*n1*q12*q33^2+5*n1*q13*q33^2+3*n1*q23*q33^2+n1*q33^3,-8*M`j'^2*q12^2*q13+8*M`j'^2*n3*q12^2*q13-16*M`j'^2*q12*q13*q23+16*M`j'^2*n3*q12*q13*q23-8*M`j'^2*q13*q23^2+8*M`j'^2*n3*q13*q23^2-4*M`j'^2*q12^2*q33+4*M`j'^2*n3*q12^2*q33-8*M`j'^2*q12*q23*q33+8*M`j'^2*n3*q12*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n3*q23^2*q33)+mbox1l(n1,1+n2,-2+n3,n4)*prf(-4*M`j'^2*n2*q12^2-20*M`j'^2*n2*q12*q13+8*n2*q12^2*q13-16*M`j'^2*n2*q13^2+16*n2*q12*q13^2+8*n2*q13^3-8*M`j'^2*n2*q12*q23-20*M`j'^2*n2*q13*q23+16*n2*q12*q13*q23+16*n2*q13^2*q23-4*M`j'^2*n2*q23^2+8*n2*q13*q23^2-10*M`j'^2*n2*q12*q33+4*n2*q12^2*q33-16*M`j'^2*n2*q13*q33+16*n2*q12*q13*q33+12*n2*q13^2*q33-10*M`j'^2*n2*q23*q33+8*n2*q12*q23*q33+16*n2*q13*q23*q33+4*n2*q23^2*q33-4*M`j'^2*n2*q33^2+4*n2*q12*q33^2+6*n2*q13*q33^2+4*n2*q23*q33^2+n2*q33^3,-8*M`j'^2*q12^2*q13+8*M`j'^2*n3*q12^2*q13-16*M`j'^2*q12*q13*q23+16*M`j'^2*n3*q12*q13*q23-8*M`j'^2*q13*q23^2+8*M`j'^2*n3*q13*q23^2-4*M`j'^2*q12^2*q33+4*M`j'^2*n3*q12^2*q33-8*M`j'^2*q12*q23*q33+8*M`j'^2*n3*q12*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n3*q23^2*q33)+mbox1l(n1,n2,-1+n3,n4)*(tmpprf(ep,1)*prf(8*q12^2*q13+8*q12*q13^2+16*q12*q13*q23+8*q13^2*q23+8*q13*q23^2+4*q12^2*q33+8*q12*q13*q33+8*q12*q23*q33+8*q13*q23*q33+4*q23^2*q33+2*q12*q33^2+2*q23*q33^2,-8*M`j'^2*q12^2*q13+8*M`j'^2*n3*q12^2*q13-16*M`j'^2*q12*q13*q23+16*M`j'^2*n3*q12*q13*q23-8*M`j'^2*q13*q23^2+8*M`j'^2*n3*q13*q23^2-4*M`j'^2*q12^2*q33+4*M`j'^2*n3*q12^2*q33-8*M`j'^2*q12*q23*q33+8*M`j'^2*n3*q12*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n3*q23^2*q33)+prf(4*M`j'^2*n2*q12^2-4*M`j'^2*n4*q12^2+12*M`j'^2*q12*q13+16*M`j'^2*n2*q12*q13-12*M`j'^2*n3*q12*q13-4*M`j'^2*n4*q12*q13-24*q12^2*q13+4*n1*q12^2*q13+8*n3*q12^2*q13+8*n4*q12^2*q13+16*M`j'^2*q13^2+16*M`j'^2*n2*q13^2-16*M`j'^2*n3*q13^2-32*q12*q13^2+4*n1*q12*q13^2-8*n2*q12*q13^2+16*n3*q12*q13^2+8*n4*q12*q13^2-8*q13^3-8*n2*q13^3+8*n3*q13^3+8*M`j'^2*n2*q12*q23-8*M`j'^2*n4*q12*q23+12*M`j'^2*q13*q23+16*M`j'^2*n2*q13*q23-12*M`j'^2*n3*q13*q23-4*M`j'^2*n4*q13*q23-48*q12*q13*q23+8*n1*q12*q13*q23+16*n3*q12*q13*q23+16*n4*q12*q13*q23-32*q13^2*q23+4*n1*q13^2*q23-8*n2*q13^2*q23+16*n3*q13^2*q23+8*n4*q13^2*q23+4*M`j'^2*n2*q23^2-4*M`j'^2*n4*q23^2-24*q13*q23^2+4*n1*q13*q23^2+8*n3*q13*q23^2+8*n4*q13*q23^2+6*M`j'^2*q12*q33+8*M`j'^2*n2*q12*q33-6*M`j'^2*n3*q12*q33-2*M`j'^2*n4*q12*q33-12*q12^2*q33+2*n1*q12^2*q33+4*n3*q12^2*q33+4*n4*q12^2*q33+16*M`j'^2*q13*q33+16*M`j'^2*n2*q13*q33-16*M`j'^2*n3*q13*q33-32*q12*q13*q33+4*n1*q12*q13*q33-8*n2*q12*q13*q33+16*n3*q12*q13*q33+8*n4*q12*q13*q33-12*q13^2*q33-12*n2*q13^2*q33+12*n3*q13^2*q33+6*M`j'^2*q23*q33+8*M`j'^2*n2*q23*q33-6*M`j'^2*n3*q23*q33-2*M`j'^2*n4*q23*q33-24*q12*q23*q33+4*n1*q12*q23*q33+8*n3*q12*q23*q33+8*n4*q12*q23*q33-32*q13*q23*q33+4*n1*q13*q23*q33-8*n2*q13*q23*q33+16*n3*q13*q23*q33+8*n4*q13*q23*q33-12*q23^2*q33+2*n1*q23^2*q33+4*n3*q23^2*q33+4*n4*q23^2*q33+4*M`j'^2*q33^2+4*M`j'^2*n2*q33^2-4*M`j'^2*n3*q33^2-8*q12*q33^2+n1*q12*q33^2-2*n2*q12*q33^2+4*n3*q12*q33^2+2*n4*q12*q33^2-6*q13*q33^2-6*n2*q13*q33^2+6*n3*q13*q33^2-8*q23*q33^2+n1*q23*q33^2-2*n2*q23*q33^2+4*n3*q23*q33^2+2*n4*q23*q33^2-q33^3-n2*q33^3+n3*q33^3,-8*M`j'^2*q12^2*q13+8*M`j'^2*n3*q12^2*q13-16*M`j'^2*q12*q13*q23+16*M`j'^2*n3*q12*q13*q23-8*M`j'^2*q13*q23^2+8*M`j'^2*n3*q13*q23^2-4*M`j'^2*q12^2*q33+4*M`j'^2*n3*q12^2*q33-8*M`j'^2*q12*q23*q33+8*M`j'^2*n3*q12*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n3*q23^2*q33));
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?{,>1},n3?pos_,n4?pos_) = mbox1l(n1,n2,n3,-1+n4)*prf(-1,2*q12+2*q23)+mbox1l(n1,-1+n2,1+n3,-1+n4)*prf(-n3,-2*q12+2*n2*q12-2*q23+2*n2*q23)+mbox1l(n1,-1+n2,-1+n3,1+n4)*prf(-n4,-2*q12+2*n2*q12-2*q23+2*n2*q23)+mbox1l(1+n1,-1+n2,n3,-1+n4)*prf(2*M`j'^2*n1*q12-2*n1*q12*q13-2*M`j'^2*n1*q23-n1*q12*q33,-4*M`j'^2*q12^2+4*M`j'^2*n2*q12^2-8*M`j'^2*q12*q23+8*M`j'^2*n2*q12*q23-4*M`j'^2*q23^2+4*M`j'^2*n2*q23^2)+mbox1l(n1,n2,-1+n3,n4)*prf(6*M`j'^2*q12+8*M`j'^2*q13-4*q12*q13-4*q13^2+6*M`j'^2*q23-4*q13*q23+4*M`j'^2*q33-2*q12*q33-4*q13*q33-2*q23*q33-q33^2,4*M`j'^2*q12^2+8*M`j'^2*q12*q23+4*M`j'^2*q23^2)+mbox1l(1+n1,-1+n2,-1+n3,n4)*prf(-2*M`j'^2*n1*q12+4*M`j'^2*n1*q13-2*n1*q13^2+2*M`j'^2*n1*q23-2*n1*q13*q23+4*M`j'^2*n1*q33-3*n1*q13*q33-n1*q23*q33-n1*q33^2,-4*M`j'^2*q12^2+4*M`j'^2*n2*q12^2-8*M`j'^2*q12*q23+8*M`j'^2*n2*q12*q23-4*M`j'^2*q23^2+4*M`j'^2*n2*q23^2)+mbox1l(1+n1,-2+n2,n3,n4)*prf(-4*M`j'^2*n1*q13+2*n1*q13^2-4*M`j'^2*n1*q33+3*n1*q13*q33+n1*q33^2,-4*M`j'^2*q12^2+4*M`j'^2*n2*q12^2-8*M`j'^2*q12*q23+8*M`j'^2*n2*q12*q23-4*M`j'^2*q23^2+4*M`j'^2*n2*q23^2)+mbox1l(n1,-1+n2,n3,n4)*(tmpprf(ep,1)*prf(-4*q12*q13-4*q13*q23-2*q12*q33-2*q23*q33,-4*M`j'^2*q12^2+4*M`j'^2*n2*q12^2-8*M`j'^2*q12*q23+8*M`j'^2*n2*q12*q23-4*M`j'^2*q23^2+4*M`j'^2*n2*q23^2)+prf(4*M`j'^2*q12-4*M`j'^2*n2*q12+2*M`j'^2*n3*q12+2*M`j'^2*n4*q12+8*M`j'^2*q13-8*M`j'^2*n2*q13+8*M`j'^2*n3*q13+8*q12*q13-2*n1*q12*q13-4*n3*q12*q13-4*n4*q12*q13-4*q13^2+4*n2*q13^2-4*n3*q13^2+4*M`j'^2*q23-4*M`j'^2*n2*q23+2*M`j'^2*n3*q23+2*M`j'^2*n4*q23+8*q13*q23-2*n1*q13*q23-4*n3*q13*q23-4*n4*q13*q23+4*M`j'^2*q33-4*M`j'^2*n2*q33+4*M`j'^2*n3*q33+4*q12*q33-n1*q12*q33-2*n3*q12*q33-2*n4*q12*q33-4*q13*q33+4*n2*q13*q33-4*n3*q13*q33+4*q23*q33-n1*q23*q33-2*n3*q23*q33-2*n4*q23*q33-q33^2+n2*q33^2-n3*q33^2,-4*M`j'^2*q12^2+4*M`j'^2*n2*q12^2-8*M`j'^2*q12*q23+8*M`j'^2*n2*q12*q23-4*M`j'^2*q23^2+4*M`j'^2*n2*q23^2))+mbox1l(n1,-2+n2,1+n3,n4)*prf(-8*M`j'^2*n3*q13+4*n3*q13^2-4*M`j'^2*n3*q33+4*n3*q13*q33+n3*q33^2,-4*M`j'^2*q12^2+4*M`j'^2*n2*q12^2-8*M`j'^2*q12*q23+8*M`j'^2*n2*q12*q23-4*M`j'^2*q23^2+4*M`j'^2*n2*q23^2)+mbox1l(1+n1,-1+n2,n3,n4)*prf(-4*M`j'^2*n1*q12*q13+4*n1*q12*q13^2+4*M`j'^2*n1*q13*q23-4*M`j'^2*n1*q12*q33+4*n1*q12*q13*q33+n1*q12*q33^2,-4*M`j'^2*q12^2+4*M`j'^2*n2*q12^2-8*M`j'^2*q12*q23+8*M`j'^2*n2*q12*q23-4*M`j'^2*q23^2+4*M`j'^2*n2*q23^2);
	Identify,ifmatch->jump mbox1l(n1?neg0_,n2?pos_,n3?pos_,n4?{,>1}) = mbox1l(n1,n2,1+n3,-1+n4)*prf(n3,-1+n4)+mbox1l(1+n1,1+n2,n3,-2+n4)*prf(-2*n1*q12,-2*q13+2*n4*q13-q33+n4*q33)+mbox1l(1+n1,n2,n3,-1+n4)*prf(n1*q33,-2*q13+2*n4*q13-q33+n4*q33)+mbox1l(n1,1+n2,-1+n3,n4)*prf(2*q12+2*q13+2*q23+q33,2*q13+q33)+mbox1l(1+n1,1+n2,-1+n3,-1+n4)*prf(2*n1*q12-n1*q33,-2*q13+2*n4*q13-q33+n4*q33)+mbox1l(n1,2+n2,-1+n3,-1+n4)*prf(-2*q12-2*n2*q12-2*q13-2*n2*q13-2*q23-2*n2*q23-q33-n2*q33,-2*q13+2*n4*q13-q33+n4*q33)+mbox1l(n1,1+n2,n3,-1+n4)*prf(4*q12+2*n2*q12-2*n4*q12+2*q13+2*n2*q13-2*n3*q13+4*q23+2*n2*q23-2*n4*q23+q33+n2*q33-n3*q33,-2*q13+2*n4*q13-q33+n4*q33);
	Identify,ifmatch->jump mbox1l(n1?neg_,1,1,1) = tmpprf(1,2*ep+n1)*mbox1l(n1,1,0,2)*prf(-2*M`j'^2,2*q13+q33)+tmpprf(1,2*ep+n1)*mbox1l(n1,1,2,0)*prf(-2*M`j'^2,2*q13+q33)+tmpprf(1,2*ep+n1)*mbox1l(n1,2,1,0)*prf(-2*M`j'^2,2*q13+q33)+tmpprf(1,2*ep+n1)*mbox1l(1+n1,1,0,2)*prf(2*M`j'^2*q12,q12+q23)+tmpprf(1,2*ep+n1)*mbox1l(1+n1,1,2,0)*prf(2*M`j'^2*q12,q12+q23)+tmpprf(1,2*ep+n1)*mbox1l(n1,0,2,1)*prf(-4*M`j'^2+2*q13+q33,q12+q23)+tmpprf(1,2*ep+n1)*mbox1l(1+n1,2,1,0)*prf(-4*M`j'^2*q12^2+4*M`j'^2*q12*q13-4*M`j'^2*q12*q23+2*M`j'^2*q12*q33,2*q12*q13+2*q13*q23+q12*q33+q23*q33)+tmpprf(1,2*ep+n1)*mbox1l(1+n1,1,1,0)*prf(2*M`j'^2*n1*q12-2*n1*q12*q13-2*M`j'^2*n1*q23-n1*q12*q33,2*q12*q13+2*q13*q23+q12*q33+q23*q33)+mbox1l(1+n1,1,1,1)*(tmpprf(ep,2*ep+n1)*prf(4*q12*q13+2*q12*q33,q12+q23)+tmpprf(1,2*ep+n1)*prf(2*q12*q13+4*n1*q12*q13+q12*q33+2*n1*q12*q33,q12+q23))+tmpprf(1,2*ep+n1)*mbox1l(n1,2,0,1)*prf(6*M`j'^2*q12+8*M`j'^2*q13-4*q12*q13-4*q13^2+6*M`j'^2*q23-4*q13*q23+4*M`j'^2*q33-2*q12*q33-4*q13*q33-2*q23*q33-q33^2,2*q12*q13+2*q13*q23+q12*q33+q23*q33)+tmpprf(1,2*ep+n1)*mbox1l(1+n1,1,0,1)*prf(-2*M`j'^2*n1*q12+4*M`j'^2*n1*q13-2*n1*q13^2+2*M`j'^2*n1*q23-2*n1*q13*q23+4*M`j'^2*n1*q33-3*n1*q13*q33-n1*q23*q33-n1*q33^2,2*q12*q13+2*q13*q23+q12*q33+q23*q33)+tmpprf(1,2*ep+n1)*mbox1l(1+n1,0,1,1)*prf(-4*M`j'^2*n1*q13+2*n1*q13^2-4*M`j'^2*n1*q33+3*n1*q13*q33+n1*q33^2,2*q12*q13+2*q13*q23+q12*q33+q23*q33)+tmpprf(1,2*ep+n1)*mbox1l(1+n1,0,2,1)*prf(8*M`j'^2*q12*q13-4*q12*q13^2+4*M`j'^2*q12*q33-4*q12*q13*q33-q12*q33^2,q12^2+2*q12*q23+q23^2)+tmpprf(1,2*ep+n1)*mbox1l(2+n1,1,1,1)*prf(-4*q12^2*q13^2-4*n1*q12^2*q13^2-8*M`j'^2*q12*q13*q23-8*M`j'^2*n1*q12*q13*q23+4*M`j'^2*q12^2*q33+4*M`j'^2*n1*q12^2*q33-4*q12^2*q13*q33-4*n1*q12^2*q13*q33-q12^2*q33^2-n1*q12^2*q33^2,q12^2+2*q12*q23+q23^2)+tmpprf(1,2*ep+n1)*mbox1l(2+n1,1,1,0)*prf(-8*M`j'^2*q12^2*q13-8*M`j'^2*n1*q12^2*q13+4*q12^2*q13^2+4*n1*q12^2*q13^2-2*M`j'^2*q12^2*q33-2*M`j'^2*n1*q12^2*q33+4*q12^2*q13*q33+4*n1*q12^2*q13*q33+2*M`j'^2*q12*q23*q33+2*M`j'^2*n1*q12*q23*q33+q12^2*q33^2+n1*q12^2*q33^2,2*q12^2*q13+4*q12*q13*q23+2*q13*q23^2+q12^2*q33+2*q12*q23*q33+q23^2*q33)+tmpprf(1,2*ep+n1)*mbox1l(1+n1,2,0,1)*prf(-8*M`j'^2*q12^2*q13-16*M`j'^2*q12*q13^2+8*q12^2*q13^2+8*q12*q13^3-4*M`j'^2*q12^2*q23-12*M`j'^2*q12*q13*q23+8*q12*q13^2*q23-8*M`j'^2*q12*q23^2-4*M`j'^2*q13*q23^2-4*M`j'^2*q23^3-2*M`j'^2*q12^2*q33-16*M`j'^2*q12*q13*q33+8*q12^2*q13*q33+12*q12*q13^2*q33-2*M`j'^2*q12*q23*q33+8*q12*q13*q23*q33-4*M`j'^2*q12*q33^2+2*q12^2*q33^2+6*q12*q13*q33^2+2*q12*q23*q33^2+q12*q33^3,2*q12^2*q13+4*q12*q13*q23+2*q13*q23^2+q12^2*q33+2*q12*q23*q33+q23^2*q33)+tmpprf(1,2*ep+n1)*mbox1l(2+n1,0,1,1)*prf(4*M`j'^2*q12*q13^2+4*M`j'^2*n1*q12*q13^2-4*q12*q13^3-4*n1*q12*q13^3-4*M`j'^2*q13^2*q23-4*M`j'^2*n1*q13^2*q23+12*M`j'^2*q12*q13*q33+12*M`j'^2*n1*q12*q13*q33-8*q12*q13^2*q33-8*n1*q12*q13^2*q33+4*M`j'^2*q12*q33^2+4*M`j'^2*n1*q12*q33^2-5*q12*q13*q33^2-5*n1*q12*q13*q33^2-q12*q33^3-n1*q12*q33^3,2*q12^2*q13+4*q12*q13*q23+2*q13*q23^2+q12^2*q33+2*q12*q23*q33+q23^2*q33)+tmpprf(1,2*ep+n1)*mbox1l(2+n1,1,0,1)*prf(4*M`j'^2*q12^2*q13+4*M`j'^2*n1*q12^2*q13-4*M`j'^2*q12*q13^2-4*M`j'^2*n1*q12*q13^2+4*q12*q13^3+4*n1*q12*q13^3+4*M`j'^2*q13^2*q23+4*M`j'^2*n1*q13^2*q23+4*q12*q13^2*q23+4*n1*q12*q13^2*q23+4*M`j'^2*q13*q23^2+4*M`j'^2*n1*q13*q23^2-2*M`j'^2*q12^2*q33-2*M`j'^2*n1*q12^2*q33-12*M`j'^2*q12*q13*q33-12*M`j'^2*n1*q12*q13*q33+8*q12*q13^2*q33+8*n1*q12*q13^2*q33-6*M`j'^2*q12*q23*q33-6*M`j'^2*n1*q12*q23*q33+4*q12*q13*q23*q33+4*n1*q12*q13*q23*q33-4*M`j'^2*q12*q33^2-4*M`j'^2*n1*q12*q33^2+5*q12*q13*q33^2+5*n1*q12*q13*q33^2+q12*q23*q33^2+n1*q12*q23*q33^2+q12*q33^3+n1*q12*q33^3,2*q12^2*q13+4*q12*q13*q23+2*q13*q23^2+q12^2*q33+2*q12*q23*q33+q23^2*q33);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?neg_,n3?pos_,n4?{,>1}) = mbox1l(-1+n1,1+n2,1+n3,-1+n4)*prf(-(n3*q12)-n3*q23,-q13+n4*q13)+mbox1l(n1,2+n2,n3,-2+n4)*prf(2*q12^2+2*n2*q12^2+2*q12*q23+2*n2*q12*q23,-2*q13^2+2*n4*q13^2-q13*q33+n4*q13*q33)+mbox1l(n1,1+n2,-1+n3,n4)*prf(2*q12+2*q13+2*q23+q33,2*q13+q33)+mbox1l(1+n1,1+n2,-1+n3,-1+n4)*prf(2*n1*q12*q13+2*n1*q12*q33+n1*q23*q33,-2*q13^2+2*n4*q13^2-q13*q33+n4*q13*q33)+mbox1l(-1+n1,2+n2,n3,-1+n4)*prf(-2*q12^2-2*n2*q12^2-2*q12*q13-2*n2*q12*q13-4*q12*q23-4*n2*q12*q23-2*q13*q23-2*n2*q13*q23-2*q23^2-2*n2*q23^2-q12*q33-n2*q12*q33-q23*q33-n2*q23*q33,-2*q13^2+2*n4*q13^2-q13*q33+n4*q13*q33)+mbox1l(n1,2+n2,-1+n3,-1+n4)*prf(2*q12*q23+2*n2*q12*q23+2*q13*q23+2*n2*q13*q23+2*q23^2+2*n2*q23^2+q23*q33+n2*q23*q33,-2*q13^2+2*n4*q13^2-q13*q33+n4*q13*q33)+mbox1l(n1,1+n2,n3,-1+n4)*prf(4*q12*q13-2*n1*q12*q13+2*n2*q12*q13+2*n3*q12*q13-2*n4*q12*q13+2*q13*q23+2*n3*q13*q23-2*n4*q13*q23+q12*q33-2*n1*q12*q33+n2*q12*q33+n3*q12*q33-n1*q23*q33+n3*q23*q33,-2*q13^2+2*n4*q13^2-q13*q33+n4*q13*q33);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?neg_,n3?{,>1},n4?pos_) = mbox1l(n1,1+n2,n3,-1+n4)*prf(q12*q33,2*q13^2)+mbox1l(n1,1+n2,-2+n3,1+n4)*prf(n4*q12*q33,-2*q13^2+2*n3*q13^2)+mbox1l(1+n1,1+n2,-1+n3,-1+n4)*prf(2*n1*q12*q13+n1*q12*q33,-2*q13^2+2*n3*q13^2)+mbox1l(n1,2+n2,-1+n3,-1+n4)*prf(4*M`j'^2*q12^2*q13+4*M`j'^2*n2*q12^2*q13+4*M`j'^2*q12*q13*q23+4*M`j'^2*n2*q12*q13*q23+4*M`j'^2*q12^2*q33+4*M`j'^2*n2*q12^2*q33+2*M`j'^2*q12*q13*q33+2*M`j'^2*n2*q12*q13*q33-2*q12^2*q13*q33-2*n2*q12^2*q13*q33-q12^2*q33^2-n2*q12^2*q33^2,-4*M`j'^2*q13^3+4*M`j'^2*n3*q13^3)+mbox1l(-1+n1,1+n2,n3,n4)*prf(-4*M`j'^2*q12*q13^2-4*M`j'^2*q13^2*q23-8*M`j'^2*q12*q13*q33+4*q12*q13^2*q33-4*M`j'^2*q12*q33^2+4*q12*q13*q33^2+q12*q33^3,4*M`j'^2*q13^3)+mbox1l(1+n1,1+n2,-2+n3,n4)*prf(6*M`j'^2*n1*q12*q13*q33+4*M`j'^2*n1*q12*q33^2-2*n1*q12*q13*q33^2-n1*q12*q33^3,-4*M`j'^2*q13^3+4*M`j'^2*n3*q13^3)+mbox1l(n1,2+n2,-2+n3,n4)*prf(4*M`j'^2*q12*q13^2+4*M`j'^2*n2*q12*q13^2+4*M`j'^2*q13^3+4*M`j'^2*n2*q13^3+4*M`j'^2*q12*q13*q23+4*M`j'^2*n2*q12*q13*q23+8*M`j'^2*q13^2*q23+8*M`j'^2*n2*q13^2*q23+4*M`j'^2*q13*q23^2+4*M`j'^2*n2*q13*q23^2+2*M`j'^2*q12*q13*q33+2*M`j'^2*n2*q12*q13*q33-2*q12*q13^2*q33-2*n2*q12*q13^2*q33+4*M`j'^2*q12*q23*q33+4*M`j'^2*n2*q12*q23*q33-2*q12*q13*q23*q33-2*n2*q12*q13*q23*q33+4*M`j'^2*q12*q33^2+4*M`j'^2*n2*q12*q33^2-3*q12*q13*q33^2-3*n2*q12*q13*q33^2-q12*q23*q33^2-n2*q12*q23*q33^2-q12*q33^3-n2*q12*q33^3,-4*M`j'^2*q13^3+4*M`j'^2*n3*q13^3)+mbox1l(-1+n1,2+n2,-1+n3,n4)*prf(-4*M`j'^2*q12^2*q13-4*M`j'^2*n2*q12^2*q13-4*M`j'^2*q12*q13^2-4*M`j'^2*n2*q12*q13^2-8*M`j'^2*q12*q13*q23-8*M`j'^2*n2*q12*q13*q23-4*M`j'^2*q13^2*q23-4*M`j'^2*n2*q13^2*q23-4*M`j'^2*q13*q23^2-4*M`j'^2*n2*q13*q23^2-4*M`j'^2*q12^2*q33-4*M`j'^2*n2*q12^2*q33-8*M`j'^2*q12*q13*q33-8*M`j'^2*n2*q12*q13*q33+2*q12^2*q13*q33+2*n2*q12^2*q13*q33+4*q12*q13^2*q33+4*n2*q12*q13^2*q33-4*M`j'^2*q12*q23*q33-4*M`j'^2*n2*q12*q23*q33+2*q12*q13*q23*q33+2*n2*q12*q13*q23*q33-4*M`j'^2*q12*q33^2-4*M`j'^2*n2*q12*q33^2+q12^2*q33^2+n2*q12^2*q33^2+4*q12*q13*q33^2+4*n2*q12*q13*q33^2+q12*q23*q33^2+n2*q12*q23*q33^2+q12*q33^3+n2*q12*q33^3,-4*M`j'^2*q13^3+4*M`j'^2*n3*q13^3)+mbox1l(n1,1+n2,-1+n3,n4)*(tmpprf(ep,1)*prf(4*q12*q13^2*q33+2*q12*q13*q33^2,-4*M`j'^2*q13^3+4*M`j'^2*n3*q13^3)+prf(-4*M`j'^2*q12*q13^2-4*M`j'^2*n1*q12*q13^2+4*M`j'^2*n3*q12*q13^2-8*M`j'^2*q13^3-4*M`j'^2*n2*q13^3+4*M`j'^2*n3*q13^3-8*M`j'^2*q13^2*q23-4*M`j'^2*n2*q13^2*q23+4*M`j'^2*n3*q13^2*q23-2*M`j'^2*q12*q13*q33-8*M`j'^2*n1*q12*q13*q33+4*M`j'^2*n2*q12*q13*q33+6*M`j'^2*n3*q12*q13*q33-2*M`j'^2*n4*q12*q13*q33-6*q12*q13^2*q33+4*n1*q12*q13^2*q33+2*n2*q12*q13^2*q33+4*n4*q12*q13^2*q33-4*M`j'^2*q12*q33^2-4*M`j'^2*n1*q12*q33^2+4*M`j'^2*n3*q12*q33^2-q12*q13*q33^2+4*n1*q12*q13*q33^2+n2*q12*q13*q33^2-2*n3*q12*q13*q33^2+2*n4*q12*q13*q33^2+q12*q33^3+n1*q12*q33^3-n3*q12*q33^3,-4*M`j'^2*q13^3+4*M`j'^2*n3*q13^3))+mbox1l(n1,2+n2,-1+n3,n4)*prf(4*q12^2*q13^2*q33+4*n2*q12^2*q13^2*q33+8*M`j'^2*q12*q13*q23*q33+8*M`j'^2*n2*q12*q13*q23*q33-4*M`j'^2*q12^2*q33^2-4*M`j'^2*n2*q12^2*q33^2+4*q12^2*q13*q33^2+4*n2*q12^2*q13*q33^2+q12^2*q33^3+n2*q12^2*q33^3,-4*M`j'^2*q13^3+4*M`j'^2*n3*q13^3);
	Identify,ifmatch->jump mbox1l(n1?{,>1},n2?neg_,n3?pos_,n4?pos_) = mbox1l(n1,1+n2,n3,-1+n4)*prf(-4*q12*q13-q12*q33,2*q13^2)+mbox1l(-1+n1,1+n2,1+n3,-1+n4)*prf(-2*n3*q12*q13-n3*q12*q33,-2*q13^2+2*n1*q13^2)+mbox1l(-1+n1,1+n2,-1+n3,1+n4)*prf(-2*n4*q12*q13-n4*q12*q33,-2*q13^2+2*n1*q13^2)+mbox1l(-1+n1,2+n2,n3,-1+n4)*prf(-12*M`j'^2*q12^2*q13-12*M`j'^2*n2*q12^2*q13-4*M`j'^2*q12*q13^2-4*M`j'^2*n2*q12*q13^2+4*q12^2*q13^2+4*n2*q12^2*q13^2-4*M`j'^2*q12*q13*q23-4*M`j'^2*n2*q12*q13*q23-4*M`j'^2*q12^2*q33-4*M`j'^2*n2*q12^2*q33-2*M`j'^2*q12*q13*q33-2*M`j'^2*n2*q12*q13*q33+4*q12^2*q13*q33+4*n2*q12^2*q13*q33+q12^2*q33^2+n2*q12^2*q33^2,-4*M`j'^2*q13^3+4*M`j'^2*n1*q13^3)+mbox1l(n1,1+n2,-1+n3,n4)*prf(-4*M`j'^2*q12*q13^2+4*M`j'^2*q13^3+4*M`j'^2*q13^2*q23-14*M`j'^2*q12*q13*q33+4*q12*q13^2*q33-4*M`j'^2*q12*q33^2+4*q12*q13*q33^2+q12*q33^3,4*M`j'^2*q13^3)+mbox1l(-2+n1,2+n2,n3,n4)*prf(12*M`j'^2*q12^2*q13+12*M`j'^2*n2*q12^2*q13+16*M`j'^2*q12*q13^2+16*M`j'^2*n2*q12*q13^2-4*q12^2*q13^2-4*n2*q12^2*q13^2-8*q12*q13^3-8*n2*q12*q13^3+16*M`j'^2*q12*q13*q23+16*M`j'^2*n2*q12*q13*q23-4*q12*q13^2*q23-4*n2*q12*q13^2*q23+4*M`j'^2*q13*q23^2+4*M`j'^2*n2*q13*q23^2+4*M`j'^2*q12^2*q33+4*M`j'^2*n2*q12^2*q33+16*M`j'^2*q12*q13*q33+16*M`j'^2*n2*q12*q13*q33-4*q12^2*q13*q33-4*n2*q12^2*q13*q33-12*q12*q13^2*q33-12*n2*q12*q13^2*q33+4*M`j'^2*q12*q23*q33+4*M`j'^2*n2*q12*q23*q33-4*q12*q13*q23*q33-4*n2*q12*q13*q23*q33+4*M`j'^2*q12*q33^2+4*M`j'^2*n2*q12*q33^2-q12^2*q33^2-n2*q12^2*q33^2-6*q12*q13*q33^2-6*n2*q12*q13*q33^2-q12*q23*q33^2-n2*q12*q23*q33^2-q12*q33^3-n2*q12*q33^3,-4*M`j'^2*q13^3+4*M`j'^2*n1*q13^3)+mbox1l(-1+n1,2+n2,-1+n3,n4)*prf(-8*M`j'^2*q12*q13^2-8*M`j'^2*n2*q12*q13^2+4*q12*q13^3+4*n2*q12*q13^3-12*M`j'^2*q12*q13*q23-12*M`j'^2*n2*q12*q13*q23-4*M`j'^2*q13^2*q23-4*M`j'^2*n2*q13^2*q23+4*q12*q13^2*q23+4*n2*q12*q13^2*q23-4*M`j'^2*q13*q23^2-4*M`j'^2*n2*q13*q23^2-10*M`j'^2*q12*q13*q33-10*M`j'^2*n2*q12*q13*q33+8*q12*q13^2*q33+8*n2*q12*q13^2*q33-4*M`j'^2*q12*q23*q33-4*M`j'^2*n2*q12*q23*q33+4*q12*q13*q23*q33+4*n2*q12*q13*q23*q33-4*M`j'^2*q12*q33^2-4*M`j'^2*n2*q12*q33^2+5*q12*q13*q33^2+5*n2*q12*q13*q33^2+q12*q23*q33^2+n2*q12*q23*q33^2+q12*q33^3+n2*q12*q33^3,-4*M`j'^2*q13^3+4*M`j'^2*n1*q13^3)+mbox1l(-2+n1,1+n2,1+n3,n4)*prf(16*M`j'^2*n3*q12*q13^2-8*n3*q12*q13^3+16*M`j'^2*n3*q12*q13*q33-12*n3*q12*q13^2*q33+4*M`j'^2*n3*q12*q33^2-6*n3*q12*q13*q33^2-n3*q12*q33^3,-4*M`j'^2*q13^3+4*M`j'^2*n1*q13^3)+mbox1l(-1+n1,1+n2,n3,n4)*(tmpprf(ep,1)*prf(-8*q12*q13^3-8*q12*q13^2*q33-2*q12*q13*q33^2,-4*M`j'^2*q13^3+4*M`j'^2*n1*q13^3)+prf(-16*M`j'^2*q12*q13^2+12*M`j'^2*n1*q12*q13^2-4*M`j'^2*n2*q12*q13^2-12*M`j'^2*n3*q12*q13^2+4*M`j'^2*n4*q12*q13^2+20*q12*q13^3-8*n1*q12*q13^3-4*n2*q12*q13^3-8*n4*q12*q13^3+8*M`j'^2*q13^2*q23-4*M`j'^2*n1*q13^2*q23+4*M`j'^2*n2*q13^2*q23-20*M`j'^2*q12*q13*q33+16*M`j'^2*n1*q12*q13*q33-4*M`j'^2*n2*q12*q13*q33-14*M`j'^2*n3*q12*q13*q33+2*M`j'^2*n4*q12*q13*q33+24*q12*q13^2*q33-12*n1*q12*q13^2*q33-4*n2*q12*q13^2*q33+4*n3*q12*q13^2*q33-8*n4*q12*q13^2*q33-4*M`j'^2*q12*q33^2+4*M`j'^2*n1*q12*q33^2-4*M`j'^2*n3*q12*q33^2+9*q12*q13*q33^2-6*n1*q12*q13*q33^2-n2*q12*q13*q33^2+4*n3*q12*q13*q33^2-2*n4*q12*q13*q33^2+q12*q33^3-n1*q12*q33^3+n3*q12*q33^3,-4*M`j'^2*q13^3+4*M`j'^2*n1*q13^3))+mbox1l(-1+n1,2+n2,n3,n4)*prf(-8*q12^2*q13^3-8*n2*q12^2*q13^3-16*M`j'^2*q12*q13^2*q23-16*M`j'^2*n2*q12*q13^2*q23+8*M`j'^2*q12^2*q13*q33+8*M`j'^2*n2*q12^2*q13*q33-12*q12^2*q13^2*q33-12*n2*q12^2*q13^2*q33-8*M`j'^2*q12*q13*q23*q33-8*M`j'^2*n2*q12*q13*q23*q33+4*M`j'^2*q12^2*q33^2+4*M`j'^2*n2*q12^2*q33^2-6*q12^2*q13*q33^2-6*n2*q12^2*q13*q33^2-q12^2*q33^3-n2*q12^2*q33^3,-4*M`j'^2*q13^3+4*M`j'^2*n1*q13^3);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?neg0_,n3?pos_,n4?{,>1}) = mbox1l(n1,n2,-1+n3,n4)*prf(1,-2*q13-q33)+mbox1l(-1+n1,n2,1+n3,-1+n4)*prf(n3,-q13+n4*q13)+mbox1l(n1,1+n2,n3,-2+n4)*prf(-(n2*q12),-2*q13^2+2*n4*q13^2-q13*q33+n4*q13*q33)+mbox1l(n1,1+n2,n3,-1+n4)*prf(n2*q12,-q13+n4*q13)+mbox1l(1+n1,n2,-1+n3,-1+n4)*prf(-(n1*q13)-n1*q33,-2*q13^2+2*n4*q13^2-q13*q33+n4*q13*q33)+mbox1l(n1,1+n2,-1+n3,-1+n4)*prf(-2*n2*q13-n2*q23-n2*q33,-2*q13^2+2*n4*q13^2-q13*q33+n4*q13*q33)+mbox1l(-1+n1,1+n2,n3,-1+n4)*prf(n2*q12+2*n2*q13+n2*q23+n2*q33,-2*q13^2+2*n4*q13^2-q13*q33+n4*q13*q33)+mbox1l(n1,n2,n3,-1+n4)*prf(-q13+n1*q13-2*n3*q13+n4*q13+n1*q33-n3*q33,-2*q13^2+2*n4*q13^2-q13*q33+n4*q13*q33);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?neg0_,n3?{,>1},n4?pos_) = mbox1l(n1,n2,n3,-1+n4)*prf(-1,2*q13)+mbox1l(1+n1,n2,-1+n3,-1+n4)*prf(-n1,-2*q13+2*n3*q13)+mbox1l(n1,n2,-2+n3,1+n4)*prf(-(n4*q33),-4*q13^2+4*n3*q13^2-2*q13*q33+2*n3*q13*q33)+mbox1l(-1+n1,n2,n3,n4)*prf(4*M`j'^2*q13+4*M`j'^2*q33-2*q13*q33-q33^2,4*M`j'^2*q13^2)+mbox1l(n1,1+n2,-1+n3,n4)*prf(-4*M`j'^2*n2*q13^2-4*M`j'^2*n2*q13*q23+4*M`j'^2*n2*q12*q33-2*n2*q12*q13*q33-n2*q12*q33^2,-4*M`j'^2*q13^2+4*M`j'^2*n3*q13^2)+mbox1l(n1,1+n2,-1+n3,-1+n4)*prf(-4*M`j'^2*n2*q12*q13-4*M`j'^2*n2*q13^2-4*M`j'^2*n2*q12*q33-2*M`j'^2*n2*q13*q33+2*n2*q12*q13*q33+n2*q12*q33^2,-8*M`j'^2*q13^3+8*M`j'^2*n3*q13^3-4*M`j'^2*q13^2*q33+4*M`j'^2*n3*q13^2*q33)+mbox1l(1+n1,n2,-2+n3,n4)*prf(-6*M`j'^2*n1*q13*q33-4*M`j'^2*n1*q33^2+2*n1*q13*q33^2+n1*q33^3,-8*M`j'^2*q13^3+8*M`j'^2*n3*q13^3-4*M`j'^2*q13^2*q33+4*M`j'^2*n3*q13^2*q33)+mbox1l(-1+n1,1+n2,-1+n3,n4)*prf(4*M`j'^2*n2*q12*q13+8*M`j'^2*n2*q13^2+4*M`j'^2*n2*q13*q23+4*M`j'^2*n2*q12*q33+12*M`j'^2*n2*q13*q33-2*n2*q12*q13*q33-4*n2*q13^2*q33+4*M`j'^2*n2*q23*q33-2*n2*q13*q23*q33+4*M`j'^2*n2*q33^2-n2*q12*q33^2-4*n2*q13*q33^2-n2*q23*q33^2-n2*q33^3,-8*M`j'^2*q13^3+8*M`j'^2*n3*q13^3-4*M`j'^2*q13^2*q33+4*M`j'^2*n3*q13^2*q33)+mbox1l(n1,1+n2,-2+n3,n4)*prf(-4*M`j'^2*n2*q13^2-4*M`j'^2*n2*q13*q23-10*M`j'^2*n2*q13*q33+2*n2*q13^2*q33-4*M`j'^2*n2*q23*q33+2*n2*q13*q23*q33-4*M`j'^2*n2*q33^2+3*n2*q13*q33^2+n2*q23*q33^2+n2*q33^3,-8*M`j'^2*q13^3+8*M`j'^2*n3*q13^3-4*M`j'^2*q13^2*q33+4*M`j'^2*n3*q13^2*q33)+mbox1l(n1,n2,-1+n3,n4)*(tmpprf(ep,1)*prf(-4*q13^2*q33-2*q13*q33^2,-8*M`j'^2*q13^3+8*M`j'^2*n3*q13^3-4*M`j'^2*q13^2*q33+4*M`j'^2*n3*q13^2*q33)+prf(4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2-4*M`j'^2*n3*q13^2+10*M`j'^2*q13*q33+8*M`j'^2*n1*q13*q33-10*M`j'^2*n3*q13*q33+2*M`j'^2*n4*q13*q33+8*q13^2*q33-4*n1*q13^2*q33-2*n2*q13^2*q33-4*n4*q13^2*q33+4*M`j'^2*q33^2+4*M`j'^2*n1*q33^2-4*M`j'^2*n3*q33^2+2*q13*q33^2-4*n1*q13*q33^2-n2*q13*q33^2+2*n3*q13*q33^2-2*n4*q13*q33^2-q33^3-n1*q33^3+n3*q33^3,-8*M`j'^2*q13^3+8*M`j'^2*n3*q13^3-4*M`j'^2*q13^2*q33+4*M`j'^2*n3*q13^2*q33));
	Identify,ifmatch->jump mbox1l(n1?{,>1},n2?neg0_,n3?pos_,n4?pos_) = mbox1l(n1,n2,n3,-1+n4)*prf(1,2*q13)+mbox1l(-1+n1,n2,1+n3,-1+n4)*prf(n3,-2*q13+2*n1*q13)+mbox1l(-1+n1,n2,-1+n3,1+n4)*prf(n4,-2*q13+2*n1*q13)+mbox1l(-1+n1,1+n2,n3,-1+n4)*prf(4*M`j'^2*n2*q12+2*M`j'^2*n2*q13-2*n2*q12*q13-n2*q12*q33,-4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2)+mbox1l(n1,n2,-1+n3,n4)*prf(2*M`j'^2*q13+4*M`j'^2*q33-2*q13*q33-q33^2,4*M`j'^2*q13^2)+mbox1l(-1+n1,1+n2,-1+n3,n4)*prf(6*M`j'^2*n2*q13-2*n2*q13^2+4*M`j'^2*n2*q23-2*n2*q13*q23+4*M`j'^2*n2*q33-3*n2*q13*q33-n2*q23*q33-n2*q33^2,-4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2)+mbox1l(-2+n1,1+n2,n3,n4)*prf(-4*M`j'^2*n2*q12-8*M`j'^2*n2*q13+2*n2*q12*q13+4*n2*q13^2-4*M`j'^2*n2*q23+2*n2*q13*q23-4*M`j'^2*n2*q33+n2*q12*q33+4*n2*q13*q33+n2*q23*q33+n2*q33^2,-4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2)+mbox1l(-1+n1,n2,n3,n4)*(tmpprf(ep,1)*prf(4*q13^2+2*q13*q33,-4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2)+prf(4*M`j'^2*q13-4*M`j'^2*n1*q13+6*M`j'^2*n3*q13-2*M`j'^2*n4*q13-12*q13^2+4*n1*q13^2+2*n2*q13^2+4*n4*q13^2+4*M`j'^2*q33-4*M`j'^2*n1*q33+4*M`j'^2*n3*q33-8*q13*q33+4*n1*q13*q33+n2*q13*q33-2*n3*q13*q33+2*n4*q13*q33-q33^2+n1*q33^2-n3*q33^2,-4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2))+mbox1l(-2+n1,n2,1+n3,n4)*prf(-8*M`j'^2*n3*q13+4*n3*q13^2-4*M`j'^2*n3*q33+4*n3*q13*q33+n3*q33^2,-4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2)+mbox1l(-1+n1,1+n2,n3,n4)*prf(-4*M`j'^2*n2*q12*q13+4*n2*q12*q13^2+4*M`j'^2*n2*q13*q23-4*M`j'^2*n2*q12*q33+4*n2*q12*q13*q33+n2*q12*q33^2,-4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?neg0_,n3?pos_,n4?{,>1}) = mbox1l(n1,n2,1+n3,-1+n4)*prf(n3,-1+n4)+mbox1l(1+n1,1+n2,n3,-2+n4)*prf(-2*n2*q12,-2*q13+2*n4*q13-q33+n4*q33)+mbox1l(1+n1,n2,-1+n3,n4)*prf(q33,2*q13+q33)+mbox1l(2+n1,n2,-1+n3,-1+n4)*prf(-q33-n1*q33,-2*q13+2*n4*q13-q33+n4*q33)+mbox1l(1+n1,1+n2,-1+n3,-1+n4)*prf(-2*n2*q13-2*n2*q23-n2*q33,-2*q13+2*n4*q13-q33+n4*q33)+mbox1l(n1,1+n2,n3,-1+n4)*prf(2*n2*q12+2*n2*q13+2*n2*q23+n2*q33,-2*q13+2*n4*q13-q33+n4*q33)+mbox1l(1+n1,n2,n3,-1+n4)*prf(-2*q13-2*n3*q13+2*n4*q13+q33+n1*q33-n3*q33,-2*q13+2*n4*q13-q33+n4*q33);
	Identify,ifmatch->jump mbox1l(1,n2?neg_,1,1) = tmpprf(1,2*ep+n2)*mbox1l(1,n2,0,2)*prf(-2*M`j'^2,2*q13+q33)+tmpprf(1,2*ep+n2)*mbox1l(1,n2,2,0)*prf(-2*M`j'^2,2*q13+q33)+tmpprf(1,2*ep+n2)*mbox1l(2,n2,1,0)*prf(-2*M`j'^2,2*q13+q33)+tmpprf(1,2*ep+n2)*mbox1l(1,1+n2,0,2)*prf(-2*M`j'^2*q12,q13)+tmpprf(1,2*ep+n2)*mbox1l(1,1+n2,2,0)*prf(-2*M`j'^2*q12,q13)+tmpprf(1,2*ep+n2)*mbox1l(0,n2,2,1)*prf(4*M`j'^2-2*q13-q33,q13)+tmpprf(1,2*ep+n2)*mbox1l(2,1+n2,1,0)*prf(-8*M`j'^2*q12*q13-2*M`j'^2*q12*q33,2*q13^2+q13*q33)+mbox1l(1,1+n2,1,1)*(tmpprf(ep,2*ep+n2)*prf(-4*q12*q13-2*q12*q33,q13)+tmpprf(1,2*ep+n2)*prf(-2*q12*q13-4*n2*q12*q13-q12*q33-2*n2*q12*q33,q13))+tmpprf(1,2*ep+n2)*mbox1l(1,1+n2,1,0)*prf(-4*M`j'^2*n2*q12-2*M`j'^2*n2*q13+2*n2*q12*q13+n2*q12*q33,2*q13^2+q13*q33)+tmpprf(1,2*ep+n2)*mbox1l(2,n2,0,1)*prf(-2*M`j'^2*q13-4*M`j'^2*q33+2*q13*q33+q33^2,2*q13^2+q13*q33)+tmpprf(1,2*ep+n2)*mbox1l(0,1+n2,1,1)*prf(4*M`j'^2*n2*q12+8*M`j'^2*n2*q13-2*n2*q12*q13-4*n2*q13^2+4*M`j'^2*n2*q23-2*n2*q13*q23+4*M`j'^2*n2*q33-n2*q12*q33-4*n2*q13*q33-n2*q23*q33-n2*q33^2,2*q13^2+q13*q33)+tmpprf(1,2*ep+n2)*mbox1l(1,1+n2,0,1)*prf(-6*M`j'^2*n2*q13+2*n2*q13^2-4*M`j'^2*n2*q23+2*n2*q13*q23-4*M`j'^2*n2*q33+3*n2*q13*q33+n2*q23*q33+n2*q33^2,2*q13^2+q13*q33)+tmpprf(1,2*ep+n2)*mbox1l(0,1+n2,2,1)*prf(8*M`j'^2*q12*q13-4*q12*q13^2+4*M`j'^2*q12*q33-4*q12*q13*q33-q12*q33^2,q13^2)+tmpprf(1,2*ep+n2)*mbox1l(1,2+n2,1,1)*prf(-4*q12^2*q13^2-4*n2*q12^2*q13^2-8*M`j'^2*q12*q13*q23-8*M`j'^2*n2*q12*q13*q23+4*M`j'^2*q12^2*q33+4*M`j'^2*n2*q12^2*q33-4*q12^2*q13*q33-4*n2*q12^2*q13*q33-q12^2*q33^2-n2*q12^2*q33^2,q13^2)+tmpprf(1,2*ep+n2)*mbox1l(1,2+n2,1,0)*prf(-12*M`j'^2*q12^2*q13-12*M`j'^2*n2*q12^2*q13-4*M`j'^2*q12*q13^2-4*M`j'^2*n2*q12*q13^2+4*q12^2*q13^2+4*n2*q12^2*q13^2-4*M`j'^2*q12*q13*q23-4*M`j'^2*n2*q12*q13*q23-4*M`j'^2*q12^2*q33-4*M`j'^2*n2*q12^2*q33-2*M`j'^2*q12*q13*q33-2*M`j'^2*n2*q12*q13*q33+4*q12^2*q13*q33+4*n2*q12^2*q13*q33+q12^2*q33^2+n2*q12^2*q33^2,2*q13^3+q13^2*q33)+tmpprf(1,2*ep+n2)*mbox1l(2,1+n2,0,1)*prf(-4*M`j'^2*q12*q13^2+4*M`j'^2*q13^3+4*M`j'^2*q13^2*q23-14*M`j'^2*q12*q13*q33+4*q12*q13^2*q33-4*M`j'^2*q12*q33^2+4*q12*q13*q33^2+q12*q33^3,2*q13^3+q13^2*q33)+tmpprf(1,2*ep+n2)*mbox1l(0,2+n2,1,1)*prf(12*M`j'^2*q12^2*q13+12*M`j'^2*n2*q12^2*q13+16*M`j'^2*q12*q13^2+16*M`j'^2*n2*q12*q13^2-4*q12^2*q13^2-4*n2*q12^2*q13^2-8*q12*q13^3-8*n2*q12*q13^3+16*M`j'^2*q12*q13*q23+16*M`j'^2*n2*q12*q13*q23-4*q12*q13^2*q23-4*n2*q12*q13^2*q23+4*M`j'^2*q13*q23^2+4*M`j'^2*n2*q13*q23^2+4*M`j'^2*q12^2*q33+4*M`j'^2*n2*q12^2*q33+16*M`j'^2*q12*q13*q33+16*M`j'^2*n2*q12*q13*q33-4*q12^2*q13*q33-4*n2*q12^2*q13*q33-12*q12*q13^2*q33-12*n2*q12*q13^2*q33+4*M`j'^2*q12*q23*q33+4*M`j'^2*n2*q12*q23*q33-4*q12*q13*q23*q33-4*n2*q12*q13*q23*q33+4*M`j'^2*q12*q33^2+4*M`j'^2*n2*q12*q33^2-q12^2*q33^2-n2*q12^2*q33^2-6*q12*q13*q33^2-6*n2*q12*q13*q33^2-q12*q23*q33^2-n2*q12*q23*q33^2-q12*q33^3-n2*q12*q33^3,2*q13^3+q13^2*q33)+tmpprf(1,2*ep+n2)*mbox1l(1,2+n2,0,1)*prf(-8*M`j'^2*q12*q13^2-8*M`j'^2*n2*q12*q13^2+4*q12*q13^3+4*n2*q12*q13^3-12*M`j'^2*q12*q13*q23-12*M`j'^2*n2*q12*q13*q23-4*M`j'^2*q13^2*q23-4*M`j'^2*n2*q13^2*q23+4*q12*q13^2*q23+4*n2*q12*q13^2*q23-4*M`j'^2*q13*q23^2-4*M`j'^2*n2*q13*q23^2-10*M`j'^2*q12*q13*q33-10*M`j'^2*n2*q12*q13*q33+8*q12*q13^2*q33+8*n2*q12*q13^2*q33-4*M`j'^2*q12*q23*q33-4*M`j'^2*n2*q12*q23*q33+4*q12*q13*q23*q33+4*n2*q12*q13*q23*q33-4*M`j'^2*q12*q33^2-4*M`j'^2*n2*q12*q33^2+5*q12*q13*q33^2+5*n2*q12*q13*q33^2+q12*q23*q33^2+n2*q12*q23*q33^2+q12*q33^3+n2*q12*q33^3,2*q13^3+q13^2*q33);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?pos_,n3?neg_,n4?{,>1}) = mbox1l(n1,n2,2+n3,-2+n4)*prf(-2*M`j'^2*q12^2*q13^2-2*M`j'^2*n3*q12^2*q13^2+2*q12^3*q13^2+2*n3*q12^3*q13^2+2*q12^3*q13*q23+2*n3*q12^3*q13*q23+2*M`j'^2*q12^2*q23^2+2*M`j'^2*n3*q12^2*q23^2-2*M`j'^2*q12^2*q13*q33-2*M`j'^2*n3*q12^2*q13*q33+3*q12^3*q13*q33+3*n3*q12^3*q13*q33+2*M`j'^2*q12^2*q23*q33+2*M`j'^2*n3*q12^2*q23*q33+q12^3*q23*q33+n3*q12^3*q23*q33+q12^3*q33^2+n3*q12^3*q33^2,-2*M`j'^2*q13^4+2*M`j'^2*n4*q13^4-8*M`j'^2*q13^3*q23+8*M`j'^2*n4*q13^3*q23-12*M`j'^2*q13^2*q23^2+12*M`j'^2*n4*q13^2*q23^2-8*M`j'^2*q13*q23^3+8*M`j'^2*n4*q13*q23^3-2*M`j'^2*q23^4+2*M`j'^2*n4*q23^4+8*M`j'^2*q12*q13^2*q33-8*M`j'^2*n4*q12*q13^2*q33-2*q12^2*q13^2*q33+2*n4*q12^2*q13^2*q33-2*q12*q13^3*q33+2*n4*q12*q13^3*q33+16*M`j'^2*q12*q13*q23*q33-16*M`j'^2*n4*q12*q13*q23*q33-4*q12^2*q13*q23*q33+4*n4*q12^2*q13*q23*q33-6*q12*q13^2*q23*q33+6*n4*q12*q13^2*q23*q33+8*M`j'^2*q12*q23^2*q33-8*M`j'^2*n4*q12*q23^2*q33-2*q12^2*q23^2*q33+2*n4*q12^2*q23^2*q33-6*q12*q13*q23^2*q33+6*n4*q12*q13*q23^2*q33-2*q12*q23^3*q33+2*n4*q12*q23^3*q33-8*M`j'^2*q12^2*q33^2+8*M`j'^2*n4*q12^2*q33^2+4*q12^3*q33^2-4*n4*q12^3*q33^2+4*q12^2*q13*q33^2-4*n4*q12^2*q13*q33^2-q12*q13^2*q33^2+n4*q12*q13^2*q33^2+4*q12^2*q23*q33^2-4*n4*q12^2*q23*q33^2-2*q12*q13*q23*q33^2+2*n4*q12*q13*q23*q33^2-q12*q23^2*q33^2+n4*q12*q23^2*q33^2+2*q12^2*q33^3-2*n4*q12^2*q33^3)+mbox1l(-1+n1,1+n2,1+n3,-1+n4)*prf(8*M`j'^2*n2*q12^2*q13^2-4*n2*q12^3*q13^2+2*M`j'^2*n2*q12*q13^3-4*n2*q12^2*q13^3+8*M`j'^2*n2*q12^2*q13*q23-4*n2*q12^3*q13*q23+6*M`j'^2*n2*q12*q13^2*q23-8*n2*q12^2*q13^2*q23+2*M`j'^2*n2*q13^3*q23+6*M`j'^2*n2*q12*q13*q23^2-4*n2*q12^2*q13*q23^2+6*M`j'^2*n2*q13^2*q23^2+2*M`j'^2*n2*q12*q23^3+6*M`j'^2*n2*q13*q23^3+2*M`j'^2*n2*q23^4-8*M`j'^2*n2*q12^3*q33+4*n2*q12^4*q33+4*M`j'^2*n2*q12^2*q13*q33-6*n2*q12^2*q13^2*q33-12*M`j'^2*n2*q12^2*q23*q33+8*n2*q12^3*q23*q33-8*M`j'^2*n2*q12*q13*q23*q33+2*n2*q12*q13^2*q23*q33-8*M`j'^2*n2*q12*q23^2*q33+6*n2*q12^2*q23^2*q33+4*n2*q12*q13*q23^2*q33+2*n2*q12*q23^3*q33+4*M`j'^2*n2*q12^2*q33^2-4*n2*q12^2*q13*q33^2+n2*q12*q13*q23*q33^2+n2*q12*q23^2*q33^2-n2*q12^2*q33^3,-2*M`j'^2*q13^4+2*M`j'^2*n4*q13^4-8*M`j'^2*q13^3*q23+8*M`j'^2*n4*q13^3*q23-12*M`j'^2*q13^2*q23^2+12*M`j'^2*n4*q13^2*q23^2-8*M`j'^2*q13*q23^3+8*M`j'^2*n4*q13*q23^3-2*M`j'^2*q23^4+2*M`j'^2*n4*q23^4+8*M`j'^2*q12*q13^2*q33-8*M`j'^2*n4*q12*q13^2*q33-2*q12^2*q13^2*q33+2*n4*q12^2*q13^2*q33-2*q12*q13^3*q33+2*n4*q12*q13^3*q33+16*M`j'^2*q12*q13*q23*q33-16*M`j'^2*n4*q12*q13*q23*q33-4*q12^2*q13*q23*q33+4*n4*q12^2*q13*q23*q33-6*q12*q13^2*q23*q33+6*n4*q12*q13^2*q23*q33+8*M`j'^2*q12*q23^2*q33-8*M`j'^2*n4*q12*q23^2*q33-2*q12^2*q23^2*q33+2*n4*q12^2*q23^2*q33-6*q12*q13*q23^2*q33+6*n4*q12*q13*q23^2*q33-2*q12*q23^3*q33+2*n4*q12*q23^3*q33-8*M`j'^2*q12^2*q33^2+8*M`j'^2*n4*q12^2*q33^2+4*q12^3*q33^2-4*n4*q12^3*q33^2+4*q12^2*q13*q33^2-4*n4*q12^2*q13*q33^2-q12*q13^2*q33^2+n4*q12*q13^2*q33^2+4*q12^2*q23*q33^2-4*n4*q12^2*q23*q33^2-2*q12*q13*q23*q33^2+2*n4*q12*q13*q23*q33^2-q12*q23^2*q33^2+n4*q12*q23^2*q33^2+2*q12^2*q33^3-2*n4*q12^2*q33^3)+mbox1l(1+n1,n2,1+n3,-2+n4)*prf(8*M`j'^2*n1*q12^2*q13^3+12*M`j'^2*n1*q12^2*q13^2*q23-4*M`j'^2*n1*q12*q13^3*q23-12*M`j'^2*n1*q12*q13^2*q23^2-4*M`j'^2*n1*q12^2*q23^3-12*M`j'^2*n1*q12*q13*q23^3-4*M`j'^2*n1*q12*q23^4-12*M`j'^2*n1*q12^3*q13*q33+4*n1*q12^4*q13*q33+10*M`j'^2*n1*q12^2*q13^2*q33+4*n1*q12^3*q13^2*q33+4*M`j'^2*n1*q12^3*q23*q33-4*n1*q12^4*q23*q33+20*M`j'^2*n1*q12^2*q13*q23*q33-4*n1*q12^3*q13*q23*q33-4*n1*q12^2*q13^2*q23*q33+10*M`j'^2*n1*q12^2*q23^2*q33-8*n1*q12^3*q23^2*q33-8*n1*q12^2*q13*q23^2*q33-4*n1*q12^2*q23^3*q33-12*M`j'^2*n1*q12^3*q33^2+4*n1*q12^4*q33^2+2*M`j'^2*n1*q12^2*q13*q33^2+6*n1*q12^3*q13*q33^2-2*M`j'^2*n1*q12^2*q23*q33^2+2*n1*q12^3*q23*q33^2-2*n1*q12^2*q13*q23*q33^2-2*n1*q12^2*q23^2*q33^2+2*n1*q12^3*q33^3,4*M`j'^2*q12*q13^4-4*M`j'^2*n4*q12*q13^4+4*M`j'^2*q13^5-4*M`j'^2*n4*q13^5+16*M`j'^2*q12*q13^3*q23-16*M`j'^2*n4*q12*q13^3*q23+20*M`j'^2*q13^4*q23-20*M`j'^2*n4*q13^4*q23+24*M`j'^2*q12*q13^2*q23^2-24*M`j'^2*n4*q12*q13^2*q23^2+40*M`j'^2*q13^3*q23^2-40*M`j'^2*n4*q13^3*q23^2+16*M`j'^2*q12*q13*q23^3-16*M`j'^2*n4*q12*q13*q23^3+40*M`j'^2*q13^2*q23^3-40*M`j'^2*n4*q13^2*q23^3+4*M`j'^2*q12*q23^4-4*M`j'^2*n4*q12*q23^4+20*M`j'^2*q13*q23^4-20*M`j'^2*n4*q13*q23^4+4*M`j'^2*q23^5-4*M`j'^2*n4*q23^5-16*M`j'^2*q12^2*q13^2*q33+16*M`j'^2*n4*q12^2*q13^2*q33+4*q12^3*q13^2*q33-4*n4*q12^3*q13^2*q33-16*M`j'^2*q12*q13^3*q33+16*M`j'^2*n4*q12*q13^3*q33+8*q12^2*q13^3*q33-8*n4*q12^2*q13^3*q33+2*M`j'^2*q13^4*q33-2*M`j'^2*n4*q13^4*q33+4*q12*q13^4*q33-4*n4*q12*q13^4*q33-32*M`j'^2*q12^2*q13*q23*q33+32*M`j'^2*n4*q12^2*q13*q23*q33+8*q12^3*q13*q23*q33-8*n4*q12^3*q13*q23*q33-48*M`j'^2*q12*q13^2*q23*q33+48*M`j'^2*n4*q12*q13^2*q23*q33+24*q12^2*q13^2*q23*q33-24*n4*q12^2*q13^2*q23*q33+8*M`j'^2*q13^3*q23*q33-8*M`j'^2*n4*q13^3*q23*q33+16*q12*q13^3*q23*q33-16*n4*q12*q13^3*q23*q33-16*M`j'^2*q12^2*q23^2*q33+16*M`j'^2*n4*q12^2*q23^2*q33+4*q12^3*q23^2*q33-4*n4*q12^3*q23^2*q33-48*M`j'^2*q12*q13*q23^2*q33+48*M`j'^2*n4*q12*q13*q23^2*q33+24*q12^2*q13*q23^2*q33-24*n4*q12^2*q13*q23^2*q33+12*M`j'^2*q13^2*q23^2*q33-12*M`j'^2*n4*q13^2*q23^2*q33+24*q12*q13^2*q23^2*q33-24*n4*q12*q13^2*q23^2*q33-16*M`j'^2*q12*q23^3*q33+16*M`j'^2*n4*q12*q23^3*q33+8*q12^2*q23^3*q33-8*n4*q12^2*q23^3*q33+8*M`j'^2*q13*q23^3*q33-8*M`j'^2*n4*q13*q23^3*q33+16*q12*q13*q23^3*q33-16*n4*q12*q13*q23^3*q33+2*M`j'^2*q23^4*q33-2*M`j'^2*n4*q23^4*q33+4*q12*q23^4*q33-4*n4*q12*q23^4*q33+16*M`j'^2*q12^3*q33^2-16*M`j'^2*n4*q12^3*q33^2-8*q12^4*q33^2+8*n4*q12^4*q33^2+16*M`j'^2*q12^2*q13*q33^2-16*M`j'^2*n4*q12^2*q13*q33^2-16*q12^3*q13*q33^2+16*n4*q12^3*q13*q33^2-8*M`j'^2*q12*q13^2*q33^2+8*M`j'^2*n4*q12*q13^2*q33^2-4*q12^2*q13^2*q33^2+4*n4*q12^2*q13^2*q33^2+4*q12*q13^3*q33^2-4*n4*q12*q13^3*q33^2+16*M`j'^2*q12^2*q23*q33^2-16*M`j'^2*n4*q12^2*q23*q33^2-16*q12^3*q23*q33^2+16*n4*q12^3*q23*q33^2-16*M`j'^2*q12*q13*q23*q33^2+16*M`j'^2*n4*q12*q13*q23*q33^2-8*q12^2*q13*q23*q33^2+8*n4*q12^2*q13*q23*q33^2+12*q12*q13^2*q23*q33^2-12*n4*q12*q13^2*q23*q33^2-8*M`j'^2*q12*q23^2*q33^2+8*M`j'^2*n4*q12*q23^2*q33^2-4*q12^2*q23^2*q33^2+4*n4*q12^2*q23^2*q33^2+12*q12*q13*q23^2*q33^2-12*n4*q12*q13*q23^2*q33^2+4*q12*q23^3*q33^2-4*n4*q12*q23^3*q33^2+8*M`j'^2*q12^2*q33^3-8*M`j'^2*n4*q12^2*q33^3-8*q12^3*q33^3+8*n4*q12^3*q33^3-8*q12^2*q13*q33^3+8*n4*q12^2*q13*q33^3+q12*q13^2*q33^3-n4*q12*q13^2*q33^3-8*q12^2*q23*q33^3+8*n4*q12^2*q23*q33^3+2*q12*q13*q23*q33^3-2*n4*q12*q13*q23*q33^3+q12*q23^2*q33^3-n4*q12*q23^2*q33^3-2*q12^2*q33^4+2*n4*q12^2*q33^4)+mbox1l(n1,1+n2,1+n3,-2+n4)*prf(16*M`j'^2*n2*q12^3*q13^2-8*n2*q12^4*q13^2+8*M`j'^2*n2*q12^2*q13^3-8*n2*q12^3*q13^3+16*M`j'^2*n2*q12^3*q13*q23-8*n2*q12^4*q13*q23+20*M`j'^2*n2*q12^2*q13^2*q23-16*n2*q12^3*q13^2*q23+4*M`j'^2*n2*q12*q13^3*q23+16*M`j'^2*n2*q12^2*q13*q23^2-8*n2*q12^3*q13*q23^2+12*M`j'^2*n2*q12*q13^2*q23^2+4*M`j'^2*n2*q12^2*q23^3+12*M`j'^2*n2*q12*q13*q23^3+4*M`j'^2*n2*q12*q23^4-16*M`j'^2*n2*q12^4*q33+8*n2*q12^5*q33+4*M`j'^2*n2*q12^3*q13*q33+6*M`j'^2*n2*q12^2*q13^2*q33-12*n2*q12^3*q13^2*q33-28*M`j'^2*n2*q12^3*q23*q33+16*n2*q12^4*q23*q33-12*M`j'^2*n2*q12^2*q13*q23*q33+4*n2*q12^2*q13^2*q23*q33-18*M`j'^2*n2*q12^2*q23^2*q33+12*n2*q12^3*q23^2*q33+8*n2*q12^2*q13*q23^2*q33+4*n2*q12^2*q23^3*q33+4*M`j'^2*n2*q12^3*q33^2+2*M`j'^2*n2*q12^2*q13*q33^2-8*n2*q12^3*q13*q33^2-2*M`j'^2*n2*q12^2*q23*q33^2+2*n2*q12^2*q13*q23*q33^2+2*n2*q12^2*q23^2*q33^2-2*n2*q12^3*q33^3,4*M`j'^2*q12*q13^4-4*M`j'^2*n4*q12*q13^4+4*M`j'^2*q13^5-4*M`j'^2*n4*q13^5+16*M`j'^2*q12*q13^3*q23-16*M`j'^2*n4*q12*q13^3*q23+20*M`j'^2*q13^4*q23-20*M`j'^2*n4*q13^4*q23+24*M`j'^2*q12*q13^2*q23^2-24*M`j'^2*n4*q12*q13^2*q23^2+40*M`j'^2*q13^3*q23^2-40*M`j'^2*n4*q13^3*q23^2+16*M`j'^2*q12*q13*q23^3-16*M`j'^2*n4*q12*q13*q23^3+40*M`j'^2*q13^2*q23^3-40*M`j'^2*n4*q13^2*q23^3+4*M`j'^2*q12*q23^4-4*M`j'^2*n4*q12*q23^4+20*M`j'^2*q13*q23^4-20*M`j'^2*n4*q13*q23^4+4*M`j'^2*q23^5-4*M`j'^2*n4*q23^5-16*M`j'^2*q12^2*q13^2*q33+16*M`j'^2*n4*q12^2*q13^2*q33+4*q12^3*q13^2*q33-4*n4*q12^3*q13^2*q33-16*M`j'^2*q12*q13^3*q33+16*M`j'^2*n4*q12*q13^3*q33+8*q12^2*q13^3*q33-8*n4*q12^2*q13^3*q33+2*M`j'^2*q13^4*q33-2*M`j'^2*n4*q13^4*q33+4*q12*q13^4*q33-4*n4*q12*q13^4*q33-32*M`j'^2*q12^2*q13*q23*q33+32*M`j'^2*n4*q12^2*q13*q23*q33+8*q12^3*q13*q23*q33-8*n4*q12^3*q13*q23*q33-48*M`j'^2*q12*q13^2*q23*q33+48*M`j'^2*n4*q12*q13^2*q23*q33+24*q12^2*q13^2*q23*q33-24*n4*q12^2*q13^2*q23*q33+8*M`j'^2*q13^3*q23*q33-8*M`j'^2*n4*q13^3*q23*q33+16*q12*q13^3*q23*q33-16*n4*q12*q13^3*q23*q33-16*M`j'^2*q12^2*q23^2*q33+16*M`j'^2*n4*q12^2*q23^2*q33+4*q12^3*q23^2*q33-4*n4*q12^3*q23^2*q33-48*M`j'^2*q12*q13*q23^2*q33+48*M`j'^2*n4*q12*q13*q23^2*q33+24*q12^2*q13*q23^2*q33-24*n4*q12^2*q13*q23^2*q33+12*M`j'^2*q13^2*q23^2*q33-12*M`j'^2*n4*q13^2*q23^2*q33+24*q12*q13^2*q23^2*q33-24*n4*q12*q13^2*q23^2*q33-16*M`j'^2*q12*q23^3*q33+16*M`j'^2*n4*q12*q23^3*q33+8*q12^2*q23^3*q33-8*n4*q12^2*q23^3*q33+8*M`j'^2*q13*q23^3*q33-8*M`j'^2*n4*q13*q23^3*q33+16*q12*q13*q23^3*q33-16*n4*q12*q13*q23^3*q33+2*M`j'^2*q23^4*q33-2*M`j'^2*n4*q23^4*q33+4*q12*q23^4*q33-4*n4*q12*q23^4*q33+16*M`j'^2*q12^3*q33^2-16*M`j'^2*n4*q12^3*q33^2-8*q12^4*q33^2+8*n4*q12^4*q33^2+16*M`j'^2*q12^2*q13*q33^2-16*M`j'^2*n4*q12^2*q13*q33^2-16*q12^3*q13*q33^2+16*n4*q12^3*q13*q33^2-8*M`j'^2*q12*q13^2*q33^2+8*M`j'^2*n4*q12*q13^2*q33^2-4*q12^2*q13^2*q33^2+4*n4*q12^2*q13^2*q33^2+4*q12*q13^3*q33^2-4*n4*q12*q13^3*q33^2+16*M`j'^2*q12^2*q23*q33^2-16*M`j'^2*n4*q12^2*q23*q33^2-16*q12^3*q23*q33^2+16*n4*q12^3*q23*q33^2-16*M`j'^2*q12*q13*q23*q33^2+16*M`j'^2*n4*q12*q13*q23*q33^2-8*q12^2*q13*q23*q33^2+8*n4*q12^2*q13*q23*q33^2+12*q12*q13^2*q23*q33^2-12*n4*q12*q13^2*q23*q33^2-8*M`j'^2*q12*q23^2*q33^2+8*M`j'^2*n4*q12*q23^2*q33^2-4*q12^2*q23^2*q33^2+4*n4*q12^2*q23^2*q33^2+12*q12*q13*q23^2*q33^2-12*n4*q12*q13*q23^2*q33^2+4*q12*q23^3*q33^2-4*n4*q12*q23^3*q33^2+8*M`j'^2*q12^2*q33^3-8*M`j'^2*n4*q12^2*q33^3-8*q12^3*q33^3+8*n4*q12^3*q33^3-8*q12^2*q13*q33^3+8*n4*q12^2*q13*q33^3+q12*q13^2*q33^3-n4*q12*q13^2*q33^3-8*q12^2*q23*q33^3+8*n4*q12^2*q23*q33^3+2*q12*q13*q23*q33^3-2*n4*q12*q13*q23*q33^3+q12*q23^2*q33^3-n4*q12*q23^2*q33^3-2*q12^2*q33^4+2*n4*q12^2*q33^4)+mbox1l(n1,n2,2+n3,-1+n4)*prf(4*q12^3*q13^3+4*n3*q12^3*q13^3+8*M`j'^2*q12^2*q13^2*q23+8*M`j'^2*n3*q12^2*q13^2*q23+4*q12^3*q13^2*q23+4*n3*q12^3*q13^2*q23+8*M`j'^2*q12^2*q13*q23^2+8*M`j'^2*n3*q12^2*q13*q23^2-4*M`j'^2*q12^3*q13*q33-4*M`j'^2*n3*q12^3*q13*q33+8*q12^3*q13^2*q33+8*n3*q12^3*q13^2*q33-4*M`j'^2*q12^3*q23*q33-4*M`j'^2*n3*q12^3*q23*q33+8*M`j'^2*q12^2*q13*q23*q33+8*M`j'^2*n3*q12^2*q13*q23*q33+4*q12^3*q13*q23*q33+4*n3*q12^3*q13*q23*q33-4*M`j'^2*q12^3*q33^2-4*M`j'^2*n3*q12^3*q33^2+5*q12^3*q13*q33^2+5*n3*q12^3*q13*q33^2+q12^3*q23*q33^2+n3*q12^3*q23*q33^2+q12^3*q33^3+n3*q12^3*q33^3,-2*M`j'^2*q13^4+2*M`j'^2*n4*q13^4-8*M`j'^2*q13^3*q23+8*M`j'^2*n4*q13^3*q23-12*M`j'^2*q13^2*q23^2+12*M`j'^2*n4*q13^2*q23^2-8*M`j'^2*q13*q23^3+8*M`j'^2*n4*q13*q23^3-2*M`j'^2*q23^4+2*M`j'^2*n4*q23^4+8*M`j'^2*q12*q13^2*q33-8*M`j'^2*n4*q12*q13^2*q33-2*q12^2*q13^2*q33+2*n4*q12^2*q13^2*q33-2*q12*q13^3*q33+2*n4*q12*q13^3*q33+16*M`j'^2*q12*q13*q23*q33-16*M`j'^2*n4*q12*q13*q23*q33-4*q12^2*q13*q23*q33+4*n4*q12^2*q13*q23*q33-6*q12*q13^2*q23*q33+6*n4*q12*q13^2*q23*q33+8*M`j'^2*q12*q23^2*q33-8*M`j'^2*n4*q12*q23^2*q33-2*q12^2*q23^2*q33+2*n4*q12^2*q23^2*q33-6*q12*q13*q23^2*q33+6*n4*q12*q13*q23^2*q33-2*q12*q23^3*q33+2*n4*q12*q23^3*q33-8*M`j'^2*q12^2*q33^2+8*M`j'^2*n4*q12^2*q33^2+4*q12^3*q33^2-4*n4*q12^3*q33^2+4*q12^2*q13*q33^2-4*n4*q12^2*q13*q33^2-q12*q13^2*q33^2+n4*q12*q13^2*q33^2+4*q12^2*q23*q33^2-4*n4*q12^2*q23*q33^2-2*q12*q13*q23*q33^2+2*n4*q12*q13*q23*q33^2-q12*q23^2*q33^2+n4*q12*q23^2*q33^2+2*q12^2*q33^3-2*n4*q12^2*q33^3)+mbox1l(n1,-1+n2,1+n3,n4)*prf(4*M`j'^2*q12^2*q13^3-4*M`j'^2*q13^5+8*M`j'^2*q12^2*q13^2*q23-16*M`j'^2*q13^4*q23+4*M`j'^2*q12^2*q13*q23^2-24*M`j'^2*q13^3*q23^2-16*M`j'^2*q13^2*q23^3-4*M`j'^2*q13*q23^4-4*M`j'^2*q12^3*q13*q33+6*M`j'^2*q12^2*q13^2*q33+16*M`j'^2*q12*q13^3*q33-4*q12^2*q13^3*q33-2*M`j'^2*q13^4*q33-4*q12*q13^4*q33-4*M`j'^2*q12^3*q23*q33+4*M`j'^2*q12^2*q13*q23*q33+32*M`j'^2*q12*q13^2*q23*q33-8*q12^2*q13^2*q23*q33-8*M`j'^2*q13^3*q23*q33-12*q12*q13^3*q23*q33-2*M`j'^2*q12^2*q23^2*q33+16*M`j'^2*q12*q13*q23^2*q33-4*q12^2*q13*q23^2*q33-12*M`j'^2*q13^2*q23^2*q33-12*q12*q13^2*q23^2*q33-8*M`j'^2*q13*q23^3*q33-4*q12*q13*q23^3*q33-2*M`j'^2*q23^4*q33-4*M`j'^2*q12^3*q33^2-14*M`j'^2*q12^2*q13*q33^2+8*q12^3*q13*q33^2+8*M`j'^2*q12*q13^2*q33^2+6*q12^2*q13^2*q33^2-4*q12*q13^3*q33^2-2*M`j'^2*q12^2*q23*q33^2+16*M`j'^2*q12*q13*q23*q33^2+4*q12^2*q13*q23*q33^2-10*q12*q13^2*q23*q33^2+8*M`j'^2*q12*q23^2*q33^2-2*q12^2*q23^2*q33^2-8*q12*q13*q23^2*q33^2-2*q12*q23^3*q33^2-8*M`j'^2*q12^2*q33^3+4*q12^3*q33^3+8*q12^2*q13*q33^3-q12*q13^2*q33^3+4*q12^2*q23*q33^3-2*q12*q13*q23*q33^3-q12*q23^2*q33^3+2*q12^2*q33^4,-4*M`j'^2*q12*q13^4-4*M`j'^2*q13^5-16*M`j'^2*q12*q13^3*q23-20*M`j'^2*q13^4*q23-24*M`j'^2*q12*q13^2*q23^2-40*M`j'^2*q13^3*q23^2-16*M`j'^2*q12*q13*q23^3-40*M`j'^2*q13^2*q23^3-4*M`j'^2*q12*q23^4-20*M`j'^2*q13*q23^4-4*M`j'^2*q23^5+16*M`j'^2*q12^2*q13^2*q33-4*q12^3*q13^2*q33+16*M`j'^2*q12*q13^3*q33-8*q12^2*q13^3*q33-2*M`j'^2*q13^4*q33-4*q12*q13^4*q33+32*M`j'^2*q12^2*q13*q23*q33-8*q12^3*q13*q23*q33+48*M`j'^2*q12*q13^2*q23*q33-24*q12^2*q13^2*q23*q33-8*M`j'^2*q13^3*q23*q33-16*q12*q13^3*q23*q33+16*M`j'^2*q12^2*q23^2*q33-4*q12^3*q23^2*q33+48*M`j'^2*q12*q13*q23^2*q33-24*q12^2*q13*q23^2*q33-12*M`j'^2*q13^2*q23^2*q33-24*q12*q13^2*q23^2*q33+16*M`j'^2*q12*q23^3*q33-8*q12^2*q23^3*q33-8*M`j'^2*q13*q23^3*q33-16*q12*q13*q23^3*q33-2*M`j'^2*q23^4*q33-4*q12*q23^4*q33-16*M`j'^2*q12^3*q33^2+8*q12^4*q33^2-16*M`j'^2*q12^2*q13*q33^2+16*q12^3*q13*q33^2+8*M`j'^2*q12*q13^2*q33^2+4*q12^2*q13^2*q33^2-4*q12*q13^3*q33^2-16*M`j'^2*q12^2*q23*q33^2+16*q12^3*q23*q33^2+16*M`j'^2*q12*q13*q23*q33^2+8*q12^2*q13*q23*q33^2-12*q12*q13^2*q23*q33^2+8*M`j'^2*q12*q23^2*q33^2+4*q12^2*q23^2*q33^2-12*q12*q13*q23^2*q33^2-4*q12*q23^3*q33^2-8*M`j'^2*q12^2*q33^3+8*q12^3*q33^3+8*q12^2*q13*q33^3-q12*q13^2*q33^3+8*q12^2*q23*q33^3-2*q12*q13*q23*q33^3-q12*q23^2*q33^3+2*q12^2*q33^4)+mbox1l(1+n1,-1+n2,1+n3,-1+n4)*prf(4*M`j'^2*n1*q12^2*q13^3+4*M`j'^2*n1*q12*q13^4+8*M`j'^2*n1*q12^2*q13^2*q23+12*M`j'^2*n1*q12*q13^3*q23+4*M`j'^2*n1*q12^2*q13*q23^2+12*M`j'^2*n1*q12*q13^2*q23^2+4*M`j'^2*n1*q12*q13*q23^3-4*M`j'^2*n1*q12^3*q13*q33+2*M`j'^2*n1*q12^2*q13^2*q33+4*M`j'^2*n1*q12*q13^3*q33-4*M`j'^2*n1*q12^3*q23*q33-4*M`j'^2*n1*q12^2*q13*q23*q33+8*M`j'^2*n1*q12*q13^2*q23*q33+2*M`j'^2*n1*q13^3*q23*q33-6*M`j'^2*n1*q12^2*q23^2*q33+4*M`j'^2*n1*q12*q13*q23^2*q33+6*M`j'^2*n1*q13^2*q23^2*q33+6*M`j'^2*n1*q13*q23^3*q33+2*M`j'^2*n1*q23^4*q33-4*M`j'^2*n1*q12^3*q33^2+2*M`j'^2*n1*q12^2*q13*q33^2-2*n1*q12^3*q13*q33^2-2*n1*q12^2*q13^2*q33^2-10*M`j'^2*n1*q12^2*q23*q33^2+2*n1*q12^3*q23*q33^2-8*M`j'^2*n1*q12*q13*q23*q33^2+2*n1*q12^2*q13*q23*q33^2+2*n1*q12*q13^2*q23*q33^2-8*M`j'^2*n1*q12*q23^2*q33^2+4*n1*q12^2*q23^2*q33^2+4*n1*q12*q13*q23^2*q33^2+2*n1*q12*q23^3*q33^2+4*M`j'^2*n1*q12^2*q33^3-2*n1*q12^3*q33^3-3*n1*q12^2*q13*q33^3-n1*q12^2*q23*q33^3+n1*q12*q13*q23*q33^3+n1*q12*q23^2*q33^3-n1*q12^2*q33^4,4*M`j'^2*q12*q13^4-4*M`j'^2*n4*q12*q13^4+4*M`j'^2*q13^5-4*M`j'^2*n4*q13^5+16*M`j'^2*q12*q13^3*q23-16*M`j'^2*n4*q12*q13^3*q23+20*M`j'^2*q13^4*q23-20*M`j'^2*n4*q13^4*q23+24*M`j'^2*q12*q13^2*q23^2-24*M`j'^2*n4*q12*q13^2*q23^2+40*M`j'^2*q13^3*q23^2-40*M`j'^2*n4*q13^3*q23^2+16*M`j'^2*q12*q13*q23^3-16*M`j'^2*n4*q12*q13*q23^3+40*M`j'^2*q13^2*q23^3-40*M`j'^2*n4*q13^2*q23^3+4*M`j'^2*q12*q23^4-4*M`j'^2*n4*q12*q23^4+20*M`j'^2*q13*q23^4-20*M`j'^2*n4*q13*q23^4+4*M`j'^2*q23^5-4*M`j'^2*n4*q23^5-16*M`j'^2*q12^2*q13^2*q33+16*M`j'^2*n4*q12^2*q13^2*q33+4*q12^3*q13^2*q33-4*n4*q12^3*q13^2*q33-16*M`j'^2*q12*q13^3*q33+16*M`j'^2*n4*q12*q13^3*q33+8*q12^2*q13^3*q33-8*n4*q12^2*q13^3*q33+2*M`j'^2*q13^4*q33-2*M`j'^2*n4*q13^4*q33+4*q12*q13^4*q33-4*n4*q12*q13^4*q33-32*M`j'^2*q12^2*q13*q23*q33+32*M`j'^2*n4*q12^2*q13*q23*q33+8*q12^3*q13*q23*q33-8*n4*q12^3*q13*q23*q33-48*M`j'^2*q12*q13^2*q23*q33+48*M`j'^2*n4*q12*q13^2*q23*q33+24*q12^2*q13^2*q23*q33-24*n4*q12^2*q13^2*q23*q33+8*M`j'^2*q13^3*q23*q33-8*M`j'^2*n4*q13^3*q23*q33+16*q12*q13^3*q23*q33-16*n4*q12*q13^3*q23*q33-16*M`j'^2*q12^2*q23^2*q33+16*M`j'^2*n4*q12^2*q23^2*q33+4*q12^3*q23^2*q33-4*n4*q12^3*q23^2*q33-48*M`j'^2*q12*q13*q23^2*q33+48*M`j'^2*n4*q12*q13*q23^2*q33+24*q12^2*q13*q23^2*q33-24*n4*q12^2*q13*q23^2*q33+12*M`j'^2*q13^2*q23^2*q33-12*M`j'^2*n4*q13^2*q23^2*q33+24*q12*q13^2*q23^2*q33-24*n4*q12*q13^2*q23^2*q33-16*M`j'^2*q12*q23^3*q33+16*M`j'^2*n4*q12*q23^3*q33+8*q12^2*q23^3*q33-8*n4*q12^2*q23^3*q33+8*M`j'^2*q13*q23^3*q33-8*M`j'^2*n4*q13*q23^3*q33+16*q12*q13*q23^3*q33-16*n4*q12*q13*q23^3*q33+2*M`j'^2*q23^4*q33-2*M`j'^2*n4*q23^4*q33+4*q12*q23^4*q33-4*n4*q12*q23^4*q33+16*M`j'^2*q12^3*q33^2-16*M`j'^2*n4*q12^3*q33^2-8*q12^4*q33^2+8*n4*q12^4*q33^2+16*M`j'^2*q12^2*q13*q33^2-16*M`j'^2*n4*q12^2*q13*q33^2-16*q12^3*q13*q33^2+16*n4*q12^3*q13*q33^2-8*M`j'^2*q12*q13^2*q33^2+8*M`j'^2*n4*q12*q13^2*q33^2-4*q12^2*q13^2*q33^2+4*n4*q12^2*q13^2*q33^2+4*q12*q13^3*q33^2-4*n4*q12*q13^3*q33^2+16*M`j'^2*q12^2*q23*q33^2-16*M`j'^2*n4*q12^2*q23*q33^2-16*q12^3*q23*q33^2+16*n4*q12^3*q23*q33^2-16*M`j'^2*q12*q13*q23*q33^2+16*M`j'^2*n4*q12*q13*q23*q33^2-8*q12^2*q13*q23*q33^2+8*n4*q12^2*q13*q23*q33^2+12*q12*q13^2*q23*q33^2-12*n4*q12*q13^2*q23*q33^2-8*M`j'^2*q12*q23^2*q33^2+8*M`j'^2*n4*q12*q23^2*q33^2-4*q12^2*q23^2*q33^2+4*n4*q12^2*q23^2*q33^2+12*q12*q13*q23^2*q33^2-12*n4*q12*q13*q23^2*q33^2+4*q12*q23^3*q33^2-4*n4*q12*q23^3*q33^2+8*M`j'^2*q12^2*q33^3-8*M`j'^2*n4*q12^2*q33^3-8*q12^3*q33^3+8*n4*q12^3*q33^3-8*q12^2*q13*q33^3+8*n4*q12^2*q13*q33^3+q12*q13^2*q33^3-n4*q12*q13^2*q33^3-8*q12^2*q23*q33^3+8*n4*q12^2*q23*q33^3+2*q12*q13*q23*q33^3-2*n4*q12*q13*q23*q33^3+q12*q23^2*q33^3-n4*q12*q23^2*q33^3-2*q12^2*q33^4+2*n4*q12^2*q33^4)+mbox1l(n1,n2,1+n3,-1+n4)*(tmpprf(ep,1)*prf(8*q12^3*q13^3+8*q12^2*q13^4+16*q12^3*q13^2*q23+24*q12^2*q13^3*q23+8*q12^3*q13*q23^2+24*q12^2*q13^2*q23^2+8*q12^2*q13*q23^3-8*q12^4*q13*q33+4*q12^3*q13^2*q33+16*q12^2*q13^3*q33-8*q12^4*q23*q33-8*q12^3*q13*q23*q33+28*q12^2*q13^2*q23*q33-12*q12^3*q23^2*q33+8*q12^2*q13*q23^2*q33-4*q12^2*q23^3*q33-8*q12^4*q33^2-8*q12^3*q13*q33^2+10*q12^2*q13^2*q33^2-16*q12^3*q23*q33^2+4*q12^2*q13*q23*q33^2-6*q12^2*q23^2*q33^2-4*q12^3*q33^3+2*q12^2*q13*q33^3-2*q12^2*q23*q33^3,4*M`j'^2*q12*q13^4-4*M`j'^2*n4*q12*q13^4+4*M`j'^2*q13^5-4*M`j'^2*n4*q13^5+16*M`j'^2*q12*q13^3*q23-16*M`j'^2*n4*q12*q13^3*q23+20*M`j'^2*q13^4*q23-20*M`j'^2*n4*q13^4*q23+24*M`j'^2*q12*q13^2*q23^2-24*M`j'^2*n4*q12*q13^2*q23^2+40*M`j'^2*q13^3*q23^2-40*M`j'^2*n4*q13^3*q23^2+16*M`j'^2*q12*q13*q23^3-16*M`j'^2*n4*q12*q13*q23^3+40*M`j'^2*q13^2*q23^3-40*M`j'^2*n4*q13^2*q23^3+4*M`j'^2*q12*q23^4-4*M`j'^2*n4*q12*q23^4+20*M`j'^2*q13*q23^4-20*M`j'^2*n4*q13*q23^4+4*M`j'^2*q23^5-4*M`j'^2*n4*q23^5-16*M`j'^2*q12^2*q13^2*q33+16*M`j'^2*n4*q12^2*q13^2*q33+4*q12^3*q13^2*q33-4*n4*q12^3*q13^2*q33-16*M`j'^2*q12*q13^3*q33+16*M`j'^2*n4*q12*q13^3*q33+8*q12^2*q13^3*q33-8*n4*q12^2*q13^3*q33+2*M`j'^2*q13^4*q33-2*M`j'^2*n4*q13^4*q33+4*q12*q13^4*q33-4*n4*q12*q13^4*q33-32*M`j'^2*q12^2*q13*q23*q33+32*M`j'^2*n4*q12^2*q13*q23*q33+8*q12^3*q13*q23*q33-8*n4*q12^3*q13*q23*q33-48*M`j'^2*q12*q13^2*q23*q33+48*M`j'^2*n4*q12*q13^2*q23*q33+24*q12^2*q13^2*q23*q33-24*n4*q12^2*q13^2*q23*q33+8*M`j'^2*q13^3*q23*q33-8*M`j'^2*n4*q13^3*q23*q33+16*q12*q13^3*q23*q33-16*n4*q12*q13^3*q23*q33-16*M`j'^2*q12^2*q23^2*q33+16*M`j'^2*n4*q12^2*q23^2*q33+4*q12^3*q23^2*q33-4*n4*q12^3*q23^2*q33-48*M`j'^2*q12*q13*q23^2*q33+48*M`j'^2*n4*q12*q13*q23^2*q33+24*q12^2*q13*q23^2*q33-24*n4*q12^2*q13*q23^2*q33+12*M`j'^2*q13^2*q23^2*q33-12*M`j'^2*n4*q13^2*q23^2*q33+24*q12*q13^2*q23^2*q33-24*n4*q12*q13^2*q23^2*q33-16*M`j'^2*q12*q23^3*q33+16*M`j'^2*n4*q12*q23^3*q33+8*q12^2*q23^3*q33-8*n4*q12^2*q23^3*q33+8*M`j'^2*q13*q23^3*q33-8*M`j'^2*n4*q13*q23^3*q33+16*q12*q13*q23^3*q33-16*n4*q12*q13*q23^3*q33+2*M`j'^2*q23^4*q33-2*M`j'^2*n4*q23^4*q33+4*q12*q23^4*q33-4*n4*q12*q23^4*q33+16*M`j'^2*q12^3*q33^2-16*M`j'^2*n4*q12^3*q33^2-8*q12^4*q33^2+8*n4*q12^4*q33^2+16*M`j'^2*q12^2*q13*q33^2-16*M`j'^2*n4*q12^2*q13*q33^2-16*q12^3*q13*q33^2+16*n4*q12^3*q13*q33^2-8*M`j'^2*q12*q13^2*q33^2+8*M`j'^2*n4*q12*q13^2*q33^2-4*q12^2*q13^2*q33^2+4*n4*q12^2*q13^2*q33^2+4*q12*q13^3*q33^2-4*n4*q12*q13^3*q33^2+16*M`j'^2*q12^2*q23*q33^2-16*M`j'^2*n4*q12^2*q23*q33^2-16*q12^3*q23*q33^2+16*n4*q12^3*q23*q33^2-16*M`j'^2*q12*q13*q23*q33^2+16*M`j'^2*n4*q12*q13*q23*q33^2-8*q12^2*q13*q23*q33^2+8*n4*q12^2*q13*q23*q33^2+12*q12*q13^2*q23*q33^2-12*n4*q12*q13^2*q23*q33^2-8*M`j'^2*q12*q23^2*q33^2+8*M`j'^2*n4*q12*q23^2*q33^2-4*q12^2*q23^2*q33^2+4*n4*q12^2*q23^2*q33^2+12*q12*q13*q23^2*q33^2-12*n4*q12*q13*q23^2*q33^2+4*q12*q23^3*q33^2-4*n4*q12*q23^3*q33^2+8*M`j'^2*q12^2*q33^3-8*M`j'^2*n4*q12^2*q33^3-8*q12^3*q33^3+8*n4*q12^3*q33^3-8*q12^2*q13*q33^3+8*n4*q12^2*q13*q33^3+q12*q13^2*q33^3-n4*q12*q13^2*q33^3-8*q12^2*q23*q33^3+8*n4*q12^2*q23*q33^3+2*q12*q13*q23*q33^3-2*n4*q12*q13*q23*q33^3+q12*q23^2*q33^3-n4*q12*q23^2*q33^3-2*q12^2*q33^4+2*n4*q12^2*q33^4)+prf(8*M`j'^2*q12^2*q13^3-12*M`j'^2*n1*q12^2*q13^3+12*M`j'^2*n2*q12^2*q13^3+4*M`j'^2*n3*q12^2*q13^3-4*M`j'^2*n4*q12^2*q13^3-20*q12^3*q13^3+8*n1*q12^3*q13^3+4*n3*q12^3*q13^3+8*n4*q12^3*q13^3+8*M`j'^2*q12*q13^4-4*M`j'^2*n1*q12*q13^4+4*M`j'^2*n2*q12*q13^4+4*M`j'^2*n3*q12*q13^4-4*M`j'^2*n4*q12*q13^4-20*q12^2*q13^4+8*n1*q12^2*q13^4+4*n3*q12^2*q13^4+8*n4*q12^2*q13^4+12*M`j'^2*q12^2*q13^2*q23-20*M`j'^2*n1*q12^2*q13^2*q23+24*M`j'^2*n2*q12^2*q13^2*q23+4*M`j'^2*n3*q12^2*q13^2*q23-8*M`j'^2*n4*q12^2*q13^2*q23-40*q12^3*q13^2*q23+16*n1*q12^3*q13^2*q23+8*n3*q12^3*q13^2*q23+16*n4*q12^3*q13^2*q23+24*M`j'^2*q12*q13^3*q23-8*M`j'^2*n1*q12*q13^3*q23+16*M`j'^2*n2*q12*q13^3*q23+8*M`j'^2*n3*q12*q13^3*q23-16*M`j'^2*n4*q12*q13^3*q23-60*q12^2*q13^3*q23+24*n1*q12^2*q13^3*q23+12*n3*q12^2*q13^3*q23+24*n4*q12^2*q13^3*q23+4*M`j'^2*q13^4*q23+4*M`j'^2*n2*q13^4*q23-4*M`j'^2*n4*q13^4*q23-4*M`j'^2*n1*q12^2*q13*q23^2+12*M`j'^2*n2*q12^2*q13*q23^2-4*M`j'^2*n3*q12^2*q13*q23^2-4*M`j'^2*n4*q12^2*q13*q23^2-20*q12^3*q13*q23^2+8*n1*q12^3*q13*q23^2+4*n3*q12^3*q13*q23^2+8*n4*q12^3*q13*q23^2+24*M`j'^2*q12*q13^2*q23^2+24*M`j'^2*n2*q12*q13^2*q23^2-24*M`j'^2*n4*q12*q13^2*q23^2-60*q12^2*q13^2*q23^2+24*n1*q12^2*q13^2*q23^2+12*n3*q12^2*q13^2*q23^2+24*n4*q12^2*q13^2*q23^2+16*M`j'^2*q13^3*q23^2+16*M`j'^2*n2*q13^3*q23^2-16*M`j'^2*n4*q13^3*q23^2-4*M`j'^2*q12^2*q23^3+4*M`j'^2*n1*q12^2*q23^3-4*M`j'^2*n3*q12^2*q23^3+8*M`j'^2*q12*q13*q23^3+8*M`j'^2*n1*q12*q13*q23^3+16*M`j'^2*n2*q12*q13*q23^3-8*M`j'^2*n3*q12*q13*q23^3-16*M`j'^2*n4*q12*q13*q23^3-20*q12^2*q13*q23^3+8*n1*q12^2*q13*q23^3+4*n3*q12^2*q13*q23^3+8*n4*q12^2*q13*q23^3+24*M`j'^2*q13^2*q23^3+24*M`j'^2*n2*q13^2*q23^3-24*M`j'^2*n4*q13^2*q23^3+4*M`j'^2*n1*q12*q23^4+4*M`j'^2*n2*q12*q23^4-4*M`j'^2*n3*q12*q23^4-4*M`j'^2*n4*q12*q23^4+16*M`j'^2*q13*q23^4+16*M`j'^2*n2*q13*q23^4-16*M`j'^2*n4*q13*q23^4+4*M`j'^2*q23^5+4*M`j'^2*n2*q23^5-4*M`j'^2*n4*q23^5-12*M`j'^2*q12^3*q13*q33+16*M`j'^2*n1*q12^3*q13*q33-12*M`j'^2*n2*q12^3*q13*q33-8*M`j'^2*n3*q12^3*q13*q33+4*M`j'^2*n4*q12^3*q13*q33+24*q12^4*q13*q33-12*n1*q12^4*q13*q33-8*n4*q12^4*q13*q33-18*M`j'^2*q12^2*q13^2*q33-12*M`j'^2*n1*q12^2*q13^2*q33+10*M`j'^2*n2*q12^2*q13^2*q33-8*M`j'^2*n3*q12^2*q13^2*q33+10*M`j'^2*n4*q12^2*q13^2*q33+2*q12^3*q13^2*q33+10*n3*q12^3*q13^2*q33+2*M`j'^2*q12*q13^3*q33-4*M`j'^2*n1*q12*q13^3*q33+2*M`j'^2*n2*q12*q13^3*q33+2*M`j'^2*n3*q12*q13^3*q33-32*q12^2*q13^3*q33+16*n1*q12^2*q13^3*q33+12*n3*q12^2*q13^3*q33+12*n4*q12^2*q13^3*q33+4*M`j'^2*q12^3*q23*q33-12*M`j'^2*n2*q12^3*q23*q33+8*M`j'^2*n3*q12^3*q23*q33+4*M`j'^2*n4*q12^3*q23*q33+16*q12^4*q23*q33-4*n1*q12^4*q23*q33-8*n3*q12^4*q23*q33-8*n4*q12^4*q23*q33-28*M`j'^2*q12^2*q13*q23*q33-16*M`j'^2*n1*q12^2*q13*q23*q33-12*M`j'^2*n2*q12^2*q13*q23*q33+28*M`j'^2*n4*q12^2*q13*q23*q33+28*q12^3*q13*q23*q33-4*n1*q12^3*q13*q23*q33+4*n2*q12^3*q13*q23*q33-4*n3*q12^3*q13*q23*q33-16*n4*q12^3*q13*q23*q33-14*M`j'^2*q12*q13^2*q23*q33-8*M`j'^2*n1*q12*q13^2*q23*q33-10*M`j'^2*n2*q12*q13^2*q23*q33+2*M`j'^2*n3*q12*q13^2*q23*q33+16*M`j'^2*n4*q12*q13^2*q23*q33-50*q12^2*q13^2*q23*q33+32*n1*q12^2*q13^2*q23*q33+8*n2*q12^2*q13^2*q23*q33+18*n3*q12^2*q13^2*q23*q33+12*n4*q12^2*q13^2*q23*q33-2*M`j'^2*n1*q13^3*q23*q33+2*M`j'^2*n2*q13^3*q23*q33+4*q12*q13^3*q23*q33+4*n2*q12*q13^3*q23*q33-4*n4*q12*q13^3*q23*q33-10*M`j'^2*q12^2*q23^2*q33-4*M`j'^2*n1*q12^2*q23^2*q33-22*M`j'^2*n2*q12^2*q23^2*q33+8*M`j'^2*n3*q12^2*q23^2*q33+18*M`j'^2*n4*q12^2*q23^2*q33+26*q12^3*q23^2*q33-4*n1*q12^3*q23^2*q33+4*n2*q12^3*q23^2*q33-14*n3*q12^3*q23^2*q33-16*n4*q12^3*q23^2*q33-34*M`j'^2*q12*q13*q23^2*q33-4*M`j'^2*n1*q12*q13*q23^2*q33-26*M`j'^2*n2*q12*q13*q23^2*q33-2*M`j'^2*n3*q12*q13*q23^2*q33+32*M`j'^2*n4*q12*q13*q23^2*q33-4*q12^2*q13*q23^2*q33+16*n1*q12^2*q13*q23^2*q33+16*n2*q12^2*q13*q23^2*q33-12*n4*q12^2*q13*q23^2*q33-6*M`j'^2*n1*q13^2*q23^2*q33+6*M`j'^2*n2*q13^2*q23^2*q33+12*q12*q13^2*q23^2*q33+12*n2*q12*q13^2*q23^2*q33-12*n4*q12*q13^2*q23^2*q33-18*M`j'^2*q12*q23^3*q33-14*M`j'^2*n2*q12*q23^3*q33-2*M`j'^2*n3*q12*q23^3*q33+16*M`j'^2*n4*q12*q23^3*q33+14*q12^2*q23^3*q33+8*n2*q12^2*q23^3*q33-6*n3*q12^2*q23^3*q33-12*n4*q12^2*q23^3*q33-6*M`j'^2*n1*q13*q23^3*q33+6*M`j'^2*n2*q13*q23^3*q33+12*q12*q13*q23^3*q33+12*n2*q12*q13*q23^3*q33-12*n4*q12*q13*q23^3*q33-2*M`j'^2*n1*q23^4*q33+2*M`j'^2*n2*q23^4*q33+4*q12*q23^4*q33+4*n2*q12*q23^4*q33-4*n4*q12*q23^4*q33+12*M`j'^2*q12^3*q33^2+16*M`j'^2*n1*q12^3*q33^2-4*M`j'^2*n2*q12^3*q33^2-12*M`j'^2*n4*q12^3*q33^2+12*q12^4*q33^2-12*n1*q12^4*q33^2-4*n2*q12^4*q33^2-4*n3*q12^4*q33^2-2*M`j'^2*q12^2*q13*q33^2-4*M`j'^2*n1*q12^2*q13*q33^2+10*M`j'^2*n2*q12^2*q13*q33^2-4*M`j'^2*n3*q12^2*q13*q33^2-2*M`j'^2*n4*q12^2*q13*q33^2+16*q12^3*q13*q33^2-12*n1*q12^3*q13*q33^2-8*n2*q12^3*q13*q33^2-19*q12^2*q13^2*q33^2+12*n1*q12^2*q13^2*q33^2-4*n2*q12^2*q13^2*q33^2+9*n3*q12^2*q13^2*q33^2+8*n4*q12^2*q13^2*q33^2+18*M`j'^2*q12^2*q23*q33^2+12*M`j'^2*n1*q12^2*q23*q33^2-2*M`j'^2*n2*q12^2*q23*q33^2+4*M`j'^2*n3*q12^2*q23*q33^2-14*M`j'^2*n4*q12^2*q23*q33^2+20*q12^3*q23*q33^2-20*n1*q12^3*q23*q33^2-8*n2*q12^3*q23*q33^2-12*n3*q12^3*q23*q33^2+8*M`j'^2*n1*q12*q13*q23*q33^2-8*M`j'^2*n2*q12*q13*q23*q33^2-14*q12^2*q13*q23*q33^2+4*n1*q12^2*q13*q23*q33^2-4*n2*q12^2*q13*q23*q33^2+2*n3*q12^2*q13*q23*q33^2+8*n4*q12^2*q13*q23*q33^2+2*q12*q13^2*q23*q33^2-2*n1*q12*q13^2*q23*q33^2+4*n2*q12*q13^2*q23*q33^2-2*n4*q12*q13^2*q23*q33^2+8*M`j'^2*n1*q12*q23^2*q33^2-8*M`j'^2*n2*q12*q23^2*q33^2+5*q12^2*q23^2*q33^2-8*n1*q12^2*q23^2*q33^2-7*n3*q12^2*q23^2*q33^2+4*q12*q13*q23^2*q33^2-4*n1*q12*q13*q23^2*q33^2+8*n2*q12*q13*q23^2*q33^2-4*n4*q12*q13*q23^2*q33^2+2*q12*q23^3*q33^2-2*n1*q12*q23^3*q33^2+4*n2*q12*q23^3*q33^2-2*n4*q12*q23^3*q33^2-4*M`j'^2*n1*q12^2*q33^3+4*M`j'^2*n2*q12^2*q33^3+6*q12^3*q33^3-4*n1*q12^3*q33^3-4*n2*q12^3*q33^3-2*n3*q12^3*q33^3-4*q12^2*q13*q33^3+5*n1*q12^2*q13*q33^3-4*n2*q12^2*q13*q33^3+2*n3*q12^2*q13*q33^3+2*n4*q12^2*q13*q33^3-n1*q12^2*q23*q33^3-4*n2*q12^2*q23*q33^3-2*n3*q12^2*q23*q33^3+2*n4*q12^2*q23*q33^3-n1*q12*q13*q23*q33^3+n2*q12*q13*q23*q33^3-n1*q12*q23^2*q33^3+n2*q12*q23^2*q33^3+n1*q12^2*q33^4-n2*q12^2*q33^4,4*M`j'^2*q12*q13^4-4*M`j'^2*n4*q12*q13^4+4*M`j'^2*q13^5-4*M`j'^2*n4*q13^5+16*M`j'^2*q12*q13^3*q23-16*M`j'^2*n4*q12*q13^3*q23+20*M`j'^2*q13^4*q23-20*M`j'^2*n4*q13^4*q23+24*M`j'^2*q12*q13^2*q23^2-24*M`j'^2*n4*q12*q13^2*q23^2+40*M`j'^2*q13^3*q23^2-40*M`j'^2*n4*q13^3*q23^2+16*M`j'^2*q12*q13*q23^3-16*M`j'^2*n4*q12*q13*q23^3+40*M`j'^2*q13^2*q23^3-40*M`j'^2*n4*q13^2*q23^3+4*M`j'^2*q12*q23^4-4*M`j'^2*n4*q12*q23^4+20*M`j'^2*q13*q23^4-20*M`j'^2*n4*q13*q23^4+4*M`j'^2*q23^5-4*M`j'^2*n4*q23^5-16*M`j'^2*q12^2*q13^2*q33+16*M`j'^2*n4*q12^2*q13^2*q33+4*q12^3*q13^2*q33-4*n4*q12^3*q13^2*q33-16*M`j'^2*q12*q13^3*q33+16*M`j'^2*n4*q12*q13^3*q33+8*q12^2*q13^3*q33-8*n4*q12^2*q13^3*q33+2*M`j'^2*q13^4*q33-2*M`j'^2*n4*q13^4*q33+4*q12*q13^4*q33-4*n4*q12*q13^4*q33-32*M`j'^2*q12^2*q13*q23*q33+32*M`j'^2*n4*q12^2*q13*q23*q33+8*q12^3*q13*q23*q33-8*n4*q12^3*q13*q23*q33-48*M`j'^2*q12*q13^2*q23*q33+48*M`j'^2*n4*q12*q13^2*q23*q33+24*q12^2*q13^2*q23*q33-24*n4*q12^2*q13^2*q23*q33+8*M`j'^2*q13^3*q23*q33-8*M`j'^2*n4*q13^3*q23*q33+16*q12*q13^3*q23*q33-16*n4*q12*q13^3*q23*q33-16*M`j'^2*q12^2*q23^2*q33+16*M`j'^2*n4*q12^2*q23^2*q33+4*q12^3*q23^2*q33-4*n4*q12^3*q23^2*q33-48*M`j'^2*q12*q13*q23^2*q33+48*M`j'^2*n4*q12*q13*q23^2*q33+24*q12^2*q13*q23^2*q33-24*n4*q12^2*q13*q23^2*q33+12*M`j'^2*q13^2*q23^2*q33-12*M`j'^2*n4*q13^2*q23^2*q33+24*q12*q13^2*q23^2*q33-24*n4*q12*q13^2*q23^2*q33-16*M`j'^2*q12*q23^3*q33+16*M`j'^2*n4*q12*q23^3*q33+8*q12^2*q23^3*q33-8*n4*q12^2*q23^3*q33+8*M`j'^2*q13*q23^3*q33-8*M`j'^2*n4*q13*q23^3*q33+16*q12*q13*q23^3*q33-16*n4*q12*q13*q23^3*q33+2*M`j'^2*q23^4*q33-2*M`j'^2*n4*q23^4*q33+4*q12*q23^4*q33-4*n4*q12*q23^4*q33+16*M`j'^2*q12^3*q33^2-16*M`j'^2*n4*q12^3*q33^2-8*q12^4*q33^2+8*n4*q12^4*q33^2+16*M`j'^2*q12^2*q13*q33^2-16*M`j'^2*n4*q12^2*q13*q33^2-16*q12^3*q13*q33^2+16*n4*q12^3*q13*q33^2-8*M`j'^2*q12*q13^2*q33^2+8*M`j'^2*n4*q12*q13^2*q33^2-4*q12^2*q13^2*q33^2+4*n4*q12^2*q13^2*q33^2+4*q12*q13^3*q33^2-4*n4*q12*q13^3*q33^2+16*M`j'^2*q12^2*q23*q33^2-16*M`j'^2*n4*q12^2*q23*q33^2-16*q12^3*q23*q33^2+16*n4*q12^3*q23*q33^2-16*M`j'^2*q12*q13*q23*q33^2+16*M`j'^2*n4*q12*q13*q23*q33^2-8*q12^2*q13*q23*q33^2+8*n4*q12^2*q13*q23*q33^2+12*q12*q13^2*q23*q33^2-12*n4*q12*q13^2*q23*q33^2-8*M`j'^2*q12*q23^2*q33^2+8*M`j'^2*n4*q12*q23^2*q33^2-4*q12^2*q23^2*q33^2+4*n4*q12^2*q23^2*q33^2+12*q12*q13*q23^2*q33^2-12*n4*q12*q13*q23^2*q33^2+4*q12*q23^3*q33^2-4*n4*q12*q23^3*q33^2+8*M`j'^2*q12^2*q33^3-8*M`j'^2*n4*q12^2*q33^3-8*q12^3*q33^3+8*n4*q12^3*q33^3-8*q12^2*q13*q33^3+8*n4*q12^2*q13*q33^3+q12*q13^2*q33^3-n4*q12*q13^2*q33^3-8*q12^2*q23*q33^3+8*n4*q12^2*q23*q33^3+2*q12*q13*q23*q33^3-2*n4*q12*q13*q23*q33^3+q12*q23^2*q33^3-n4*q12*q23^2*q33^3-2*q12^2*q33^4+2*n4*q12^2*q33^4))+mbox1l(n1,-1+n2,2+n3,-1+n4)*prf(8*M`j'^2*q12^2*q13^3+8*M`j'^2*n3*q12^2*q13^3-4*q12^3*q13^3-4*n3*q12^3*q13^3-4*q12^2*q13^4-4*n3*q12^2*q13^4+8*M`j'^2*q12^2*q13^2*q23+8*M`j'^2*n3*q12^2*q13^2*q23-4*q12^3*q13^2*q23-4*n3*q12^3*q13^2*q23+4*M`j'^2*q12*q13^3*q23+4*M`j'^2*n3*q12*q13^3*q23-8*q12^2*q13^3*q23-8*n3*q12^2*q13^3*q23+4*M`j'^2*q13^4*q23+4*M`j'^2*n3*q13^4*q23+8*M`j'^2*q12*q13^2*q23^2+8*M`j'^2*n3*q12*q13^2*q23^2-4*q12^2*q13^2*q23^2-4*n3*q12^2*q13^2*q23^2+12*M`j'^2*q13^3*q23^2+12*M`j'^2*n3*q13^3*q23^2+4*M`j'^2*q12*q13*q23^3+4*M`j'^2*n3*q12*q13*q23^3+12*M`j'^2*q13^2*q23^3+12*M`j'^2*n3*q13^2*q23^3+4*M`j'^2*q13*q23^4+4*M`j'^2*n3*q13*q23^4-4*M`j'^2*q12^3*q13*q33-4*M`j'^2*n3*q12^3*q13*q33+18*M`j'^2*q12^2*q13^2*q33+18*M`j'^2*n3*q12^2*q13^2*q33-10*q12^3*q13^2*q33-10*n3*q12^3*q13^2*q33-12*q12^2*q13^3*q33-12*n3*q12^2*q13^3*q33-4*M`j'^2*q12^3*q23*q33-4*M`j'^2*n3*q12^3*q23*q33-12*M`j'^2*q12^2*q13*q23*q33-12*M`j'^2*n3*q12^2*q13*q23*q33+2*q12^3*q13*q23*q33+2*n3*q12^3*q13*q23*q33-12*M`j'^2*q12*q13^2*q23*q33-12*M`j'^2*n3*q12*q13^2*q23*q33-6*q12^2*q13^2*q23*q33-6*n3*q12^2*q13^2*q23*q33+2*M`j'^2*q13^3*q23*q33+2*M`j'^2*n3*q13^3*q23*q33+4*q12*q13^3*q23*q33+4*n3*q12*q13^3*q23*q33-6*M`j'^2*q12^2*q23^2*q33-6*M`j'^2*n3*q12^2*q23^2*q33-12*M`j'^2*q12*q13*q23^2*q33-12*M`j'^2*n3*q12*q13*q23^2*q33+6*q12^2*q13*q23^2*q33+6*n3*q12^2*q13*q23^2*q33+6*M`j'^2*q13^2*q23^2*q33+6*M`j'^2*n3*q13^2*q23^2*q33+8*q12*q13^2*q23^2*q33+8*n3*q12*q13^2*q23^2*q33+6*M`j'^2*q13*q23^3*q33+6*M`j'^2*n3*q13*q23^3*q33+4*q12*q13*q23^3*q33+4*n3*q12*q13*q23^3*q33+2*M`j'^2*q23^4*q33+2*M`j'^2*n3*q23^4*q33-4*M`j'^2*q12^3*q33^2-4*M`j'^2*n3*q12^3*q33^2+14*M`j'^2*q12^2*q13*q33^2+14*M`j'^2*n3*q12^2*q13*q33^2-8*q12^3*q13*q33^2-8*n3*q12^3*q13*q33^2-13*q12^2*q13^2*q33^2-13*n3*q12^2*q13^2*q33^2-10*M`j'^2*q12^2*q23*q33^2-10*M`j'^2*n3*q12^2*q23*q33^2+2*q12^3*q23*q33^2+2*n3*q12^3*q23*q33^2-8*M`j'^2*q12*q13*q23*q33^2-8*M`j'^2*n3*q12*q13*q23*q33^2-3*q12^2*q13*q23*q33^2-3*n3*q12^2*q13*q23*q33^2+4*q12*q13^2*q23*q33^2+4*n3*q12*q13^2*q23*q33^2-8*M`j'^2*q12*q23^2*q33^2-8*M`j'^2*n3*q12*q23^2*q33^2+4*q12^2*q23^2*q33^2+4*n3*q12^2*q23^2*q33^2+6*q12*q13*q23^2*q33^2+6*n3*q12*q13*q23^2*q33^2+2*q12*q23^3*q33^2+2*n3*q12*q23^3*q33^2+4*M`j'^2*q12^2*q33^3+4*M`j'^2*n3*q12^2*q33^3-2*q12^3*q33^3-2*n3*q12^3*q33^3-6*q12^2*q13*q33^3-6*n3*q12^2*q13*q33^3-q12^2*q23*q33^3-n3*q12^2*q23*q33^3+q12*q13*q23*q33^3+n3*q12*q13*q23*q33^3+q12*q23^2*q33^3+n3*q12*q23^2*q33^3-q12^2*q33^4-n3*q12^2*q33^4,4*M`j'^2*q12*q13^4-4*M`j'^2*n4*q12*q13^4+4*M`j'^2*q13^5-4*M`j'^2*n4*q13^5+16*M`j'^2*q12*q13^3*q23-16*M`j'^2*n4*q12*q13^3*q23+20*M`j'^2*q13^4*q23-20*M`j'^2*n4*q13^4*q23+24*M`j'^2*q12*q13^2*q23^2-24*M`j'^2*n4*q12*q13^2*q23^2+40*M`j'^2*q13^3*q23^2-40*M`j'^2*n4*q13^3*q23^2+16*M`j'^2*q12*q13*q23^3-16*M`j'^2*n4*q12*q13*q23^3+40*M`j'^2*q13^2*q23^3-40*M`j'^2*n4*q13^2*q23^3+4*M`j'^2*q12*q23^4-4*M`j'^2*n4*q12*q23^4+20*M`j'^2*q13*q23^4-20*M`j'^2*n4*q13*q23^4+4*M`j'^2*q23^5-4*M`j'^2*n4*q23^5-16*M`j'^2*q12^2*q13^2*q33+16*M`j'^2*n4*q12^2*q13^2*q33+4*q12^3*q13^2*q33-4*n4*q12^3*q13^2*q33-16*M`j'^2*q12*q13^3*q33+16*M`j'^2*n4*q12*q13^3*q33+8*q12^2*q13^3*q33-8*n4*q12^2*q13^3*q33+2*M`j'^2*q13^4*q33-2*M`j'^2*n4*q13^4*q33+4*q12*q13^4*q33-4*n4*q12*q13^4*q33-32*M`j'^2*q12^2*q13*q23*q33+32*M`j'^2*n4*q12^2*q13*q23*q33+8*q12^3*q13*q23*q33-8*n4*q12^3*q13*q23*q33-48*M`j'^2*q12*q13^2*q23*q33+48*M`j'^2*n4*q12*q13^2*q23*q33+24*q12^2*q13^2*q23*q33-24*n4*q12^2*q13^2*q23*q33+8*M`j'^2*q13^3*q23*q33-8*M`j'^2*n4*q13^3*q23*q33+16*q12*q13^3*q23*q33-16*n4*q12*q13^3*q23*q33-16*M`j'^2*q12^2*q23^2*q33+16*M`j'^2*n4*q12^2*q23^2*q33+4*q12^3*q23^2*q33-4*n4*q12^3*q23^2*q33-48*M`j'^2*q12*q13*q23^2*q33+48*M`j'^2*n4*q12*q13*q23^2*q33+24*q12^2*q13*q23^2*q33-24*n4*q12^2*q13*q23^2*q33+12*M`j'^2*q13^2*q23^2*q33-12*M`j'^2*n4*q13^2*q23^2*q33+24*q12*q13^2*q23^2*q33-24*n4*q12*q13^2*q23^2*q33-16*M`j'^2*q12*q23^3*q33+16*M`j'^2*n4*q12*q23^3*q33+8*q12^2*q23^3*q33-8*n4*q12^2*q23^3*q33+8*M`j'^2*q13*q23^3*q33-8*M`j'^2*n4*q13*q23^3*q33+16*q12*q13*q23^3*q33-16*n4*q12*q13*q23^3*q33+2*M`j'^2*q23^4*q33-2*M`j'^2*n4*q23^4*q33+4*q12*q23^4*q33-4*n4*q12*q23^4*q33+16*M`j'^2*q12^3*q33^2-16*M`j'^2*n4*q12^3*q33^2-8*q12^4*q33^2+8*n4*q12^4*q33^2+16*M`j'^2*q12^2*q13*q33^2-16*M`j'^2*n4*q12^2*q13*q33^2-16*q12^3*q13*q33^2+16*n4*q12^3*q13*q33^2-8*M`j'^2*q12*q13^2*q33^2+8*M`j'^2*n4*q12*q13^2*q33^2-4*q12^2*q13^2*q33^2+4*n4*q12^2*q13^2*q33^2+4*q12*q13^3*q33^2-4*n4*q12*q13^3*q33^2+16*M`j'^2*q12^2*q23*q33^2-16*M`j'^2*n4*q12^2*q23*q33^2-16*q12^3*q23*q33^2+16*n4*q12^3*q23*q33^2-16*M`j'^2*q12*q13*q23*q33^2+16*M`j'^2*n4*q12*q13*q23*q33^2-8*q12^2*q13*q23*q33^2+8*n4*q12^2*q13*q23*q33^2+12*q12*q13^2*q23*q33^2-12*n4*q12*q13^2*q23*q33^2-8*M`j'^2*q12*q23^2*q33^2+8*M`j'^2*n4*q12*q23^2*q33^2-4*q12^2*q23^2*q33^2+4*n4*q12^2*q23^2*q33^2+12*q12*q13*q23^2*q33^2-12*n4*q12*q13*q23^2*q33^2+4*q12*q23^3*q33^2-4*n4*q12*q23^3*q33^2+8*M`j'^2*q12^2*q33^3-8*M`j'^2*n4*q12^2*q33^3-8*q12^3*q33^3+8*n4*q12^3*q33^3-8*q12^2*q13*q33^3+8*n4*q12^2*q13*q33^3+q12*q13^2*q33^3-n4*q12*q13^2*q33^3-8*q12^2*q23*q33^3+8*n4*q12^2*q23*q33^3+2*q12*q13*q23*q33^3-2*n4*q12*q13*q23*q33^3+q12*q23^2*q33^3-n4*q12*q23^2*q33^3-2*q12^2*q33^4+2*n4*q12^2*q33^4)+mbox1l(-1+n1,n2,2+n3,-1+n4)*prf(-4*M`j'^2*q12^3*q13^2-4*M`j'^2*n3*q12^3*q13^2+4*q12^4*q13^2+4*n3*q12^4*q13^2-16*M`j'^2*q12^2*q13^3-16*M`j'^2*n3*q12^2*q13^3+12*q12^3*q13^3+12*n3*q12^3*q13^3-4*M`j'^2*q12*q13^4-4*M`j'^2*n3*q12*q13^4+8*q12^2*q13^4+8*n3*q12^2*q13^4+4*q12^4*q13*q23+4*n3*q12^4*q13*q23-16*M`j'^2*q12^2*q13^2*q23-16*M`j'^2*n3*q12^2*q13^2*q23+20*q12^3*q13^2*q23+20*n3*q12^3*q13^2*q23-12*M`j'^2*q12*q13^3*q23-12*M`j'^2*n3*q12*q13^3*q23+20*q12^2*q13^3*q23+20*n3*q12^2*q13^3*q23-4*M`j'^2*q13^4*q23-4*M`j'^2*n3*q13^4*q23+4*M`j'^2*q12^3*q23^2+4*M`j'^2*n3*q12^3*q23^2+8*M`j'^2*q12^2*q13*q23^2+8*M`j'^2*n3*q12^2*q13*q23^2+8*q12^3*q13*q23^2+8*n3*q12^3*q13*q23^2-8*M`j'^2*q12*q13^2*q23^2-8*M`j'^2*n3*q12*q13^2*q23^2+16*q12^2*q13^2*q23^2+16*n3*q12^2*q13^2*q23^2-12*M`j'^2*q13^3*q23^2-12*M`j'^2*n3*q13^3*q23^2+8*M`j'^2*q12^2*q23^3+8*M`j'^2*n3*q12^2*q23^3+4*M`j'^2*q12*q13*q23^3+4*M`j'^2*n3*q12*q13*q23^3+4*q12^2*q13*q23^3+4*n3*q12^2*q13*q23^3-12*M`j'^2*q13^2*q23^3-12*M`j'^2*n3*q13^2*q23^3+4*M`j'^2*q12*q23^4+4*M`j'^2*n3*q12*q23^4-4*M`j'^2*q13*q23^4-4*M`j'^2*n3*q13*q23^4+8*M`j'^2*q12^3*q13*q33+8*M`j'^2*n3*q12^3*q13*q33-2*q12^4*q13*q33-2*n3*q12^4*q13*q33-16*M`j'^2*q12^2*q13^2*q33-16*M`j'^2*n3*q12^2*q13^2*q33+12*q12^3*q13^2*q33+12*n3*q12^3*q13^2*q33-2*M`j'^2*q12*q13^3*q33-2*M`j'^2*n3*q12*q13^3*q33+16*q12^2*q13^3*q33+16*n3*q12^2*q13^3*q33+2*q12^4*q23*q33+2*n3*q12^4*q23*q33+12*M`j'^2*q12^2*q13*q23*q33+12*M`j'^2*n3*q12^2*q13*q23*q33+4*q12^3*q13*q23*q33+4*n3*q12^3*q13*q23*q33+10*M`j'^2*q12*q13^2*q23*q33+10*M`j'^2*n3*q12*q13^2*q23*q33+16*q12^2*q13^2*q23*q33+16*n3*q12^2*q13^2*q23*q33-2*M`j'^2*q13^3*q23*q33-2*M`j'^2*n3*q13^3*q23*q33-4*q12*q13^3*q23*q33-4*n3*q12*q13^3*q23*q33+4*M`j'^2*q12^2*q23^2*q33+4*M`j'^2*n3*q12^2*q23^2*q33+4*q12^3*q23^2*q33+4*n3*q12^3*q23^2*q33+14*M`j'^2*q12*q13*q23^2*q33+14*M`j'^2*n3*q12*q13*q23^2*q33+2*q12^2*q13*q23^2*q33+2*n3*q12^2*q13*q23^2*q33-6*M`j'^2*q13^2*q23^2*q33-6*M`j'^2*n3*q13^2*q23^2*q33-8*q12*q13^2*q23^2*q33-8*n3*q12*q13^2*q23^2*q33+2*M`j'^2*q12*q23^3*q33+2*M`j'^2*n3*q12*q23^3*q33+2*q12^2*q23^3*q33+2*n3*q12^2*q23^3*q33-6*M`j'^2*q13*q23^3*q33-6*M`j'^2*n3*q13*q23^3*q33-4*q12*q13*q23^3*q33-4*n3*q12*q13*q23^3*q33-2*M`j'^2*q23^4*q33-2*M`j'^2*n3*q23^4*q33+4*M`j'^2*q12^3*q33^2+4*M`j'^2*n3*q12^3*q33^2-2*q12^4*q33^2-2*n3*q12^4*q33^2-12*M`j'^2*q12^2*q13*q33^2-12*M`j'^2*n3*q12^2*q13*q33^2+5*q12^3*q13*q33^2+5*n3*q12^3*q13*q33^2+14*q12^2*q13^2*q33^2+14*n3*q12^2*q13^2*q33^2+8*M`j'^2*q12^2*q23*q33^2+8*M`j'^2*n3*q12^2*q23*q33^2-3*q12^3*q23*q33^2-3*n3*q12^3*q23*q33^2+8*M`j'^2*q12*q13*q23*q33^2+8*M`j'^2*n3*q12*q13*q23*q33^2+5*q12^2*q13*q23*q33^2+5*n3*q12^2*q13*q23*q33^2-4*q12*q13^2*q23*q33^2-4*n3*q12*q13^2*q23*q33^2+8*M`j'^2*q12*q23^2*q33^2+8*M`j'^2*n3*q12*q23^2*q33^2-3*q12^2*q23^2*q33^2-3*n3*q12^2*q23^2*q33^2-6*q12*q13*q23^2*q33^2-6*n3*q12*q13*q23^2*q33^2-2*q12*q23^3*q33^2-2*n3*q12*q23^3*q33^2-4*M`j'^2*q12^2*q33^3-4*M`j'^2*n3*q12^2*q33^3+q12^3*q33^3+n3*q12^3*q33^3+6*q12^2*q13*q33^3+6*n3*q12^2*q13*q33^3+q12^2*q23*q33^3+n3*q12^2*q23*q33^3-q12*q13*q23*q33^3-n3*q12*q13*q23*q33^3-q12*q23^2*q33^3-n3*q12*q23^2*q33^3+q12^2*q33^4+n3*q12^2*q33^4,4*M`j'^2*q12*q13^4-4*M`j'^2*n4*q12*q13^4+4*M`j'^2*q13^5-4*M`j'^2*n4*q13^5+16*M`j'^2*q12*q13^3*q23-16*M`j'^2*n4*q12*q13^3*q23+20*M`j'^2*q13^4*q23-20*M`j'^2*n4*q13^4*q23+24*M`j'^2*q12*q13^2*q23^2-24*M`j'^2*n4*q12*q13^2*q23^2+40*M`j'^2*q13^3*q23^2-40*M`j'^2*n4*q13^3*q23^2+16*M`j'^2*q12*q13*q23^3-16*M`j'^2*n4*q12*q13*q23^3+40*M`j'^2*q13^2*q23^3-40*M`j'^2*n4*q13^2*q23^3+4*M`j'^2*q12*q23^4-4*M`j'^2*n4*q12*q23^4+20*M`j'^2*q13*q23^4-20*M`j'^2*n4*q13*q23^4+4*M`j'^2*q23^5-4*M`j'^2*n4*q23^5-16*M`j'^2*q12^2*q13^2*q33+16*M`j'^2*n4*q12^2*q13^2*q33+4*q12^3*q13^2*q33-4*n4*q12^3*q13^2*q33-16*M`j'^2*q12*q13^3*q33+16*M`j'^2*n4*q12*q13^3*q33+8*q12^2*q13^3*q33-8*n4*q12^2*q13^3*q33+2*M`j'^2*q13^4*q33-2*M`j'^2*n4*q13^4*q33+4*q12*q13^4*q33-4*n4*q12*q13^4*q33-32*M`j'^2*q12^2*q13*q23*q33+32*M`j'^2*n4*q12^2*q13*q23*q33+8*q12^3*q13*q23*q33-8*n4*q12^3*q13*q23*q33-48*M`j'^2*q12*q13^2*q23*q33+48*M`j'^2*n4*q12*q13^2*q23*q33+24*q12^2*q13^2*q23*q33-24*n4*q12^2*q13^2*q23*q33+8*M`j'^2*q13^3*q23*q33-8*M`j'^2*n4*q13^3*q23*q33+16*q12*q13^3*q23*q33-16*n4*q12*q13^3*q23*q33-16*M`j'^2*q12^2*q23^2*q33+16*M`j'^2*n4*q12^2*q23^2*q33+4*q12^3*q23^2*q33-4*n4*q12^3*q23^2*q33-48*M`j'^2*q12*q13*q23^2*q33+48*M`j'^2*n4*q12*q13*q23^2*q33+24*q12^2*q13*q23^2*q33-24*n4*q12^2*q13*q23^2*q33+12*M`j'^2*q13^2*q23^2*q33-12*M`j'^2*n4*q13^2*q23^2*q33+24*q12*q13^2*q23^2*q33-24*n4*q12*q13^2*q23^2*q33-16*M`j'^2*q12*q23^3*q33+16*M`j'^2*n4*q12*q23^3*q33+8*q12^2*q23^3*q33-8*n4*q12^2*q23^3*q33+8*M`j'^2*q13*q23^3*q33-8*M`j'^2*n4*q13*q23^3*q33+16*q12*q13*q23^3*q33-16*n4*q12*q13*q23^3*q33+2*M`j'^2*q23^4*q33-2*M`j'^2*n4*q23^4*q33+4*q12*q23^4*q33-4*n4*q12*q23^4*q33+16*M`j'^2*q12^3*q33^2-16*M`j'^2*n4*q12^3*q33^2-8*q12^4*q33^2+8*n4*q12^4*q33^2+16*M`j'^2*q12^2*q13*q33^2-16*M`j'^2*n4*q12^2*q13*q33^2-16*q12^3*q13*q33^2+16*n4*q12^3*q13*q33^2-8*M`j'^2*q12*q13^2*q33^2+8*M`j'^2*n4*q12*q13^2*q33^2-4*q12^2*q13^2*q33^2+4*n4*q12^2*q13^2*q33^2+4*q12*q13^3*q33^2-4*n4*q12*q13^3*q33^2+16*M`j'^2*q12^2*q23*q33^2-16*M`j'^2*n4*q12^2*q23*q33^2-16*q12^3*q23*q33^2+16*n4*q12^3*q23*q33^2-16*M`j'^2*q12*q13*q23*q33^2+16*M`j'^2*n4*q12*q13*q23*q33^2-8*q12^2*q13*q23*q33^2+8*n4*q12^2*q13*q23*q33^2+12*q12*q13^2*q23*q33^2-12*n4*q12*q13^2*q23*q33^2-8*M`j'^2*q12*q23^2*q33^2+8*M`j'^2*n4*q12*q23^2*q33^2-4*q12^2*q23^2*q33^2+4*n4*q12^2*q23^2*q33^2+12*q12*q13*q23^2*q33^2-12*n4*q12*q13*q23^2*q33^2+4*q12*q23^3*q33^2-4*n4*q12*q23^3*q33^2+8*M`j'^2*q12^2*q33^3-8*M`j'^2*n4*q12^2*q33^3-8*q12^3*q33^3+8*n4*q12^3*q33^3-8*q12^2*q13*q33^3+8*n4*q12^2*q13*q33^3+q12*q13^2*q33^3-n4*q12*q13^2*q33^3-8*q12^2*q23*q33^3+8*n4*q12^2*q23*q33^3+2*q12*q13*q23*q33^3-2*n4*q12*q13*q23*q33^3+q12*q23^2*q33^3-n4*q12*q23^2*q33^3-2*q12^2*q33^4+2*n4*q12^2*q33^4);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?{,>1},n3?neg_,n4?pos_) = mbox1l(n1,-1+n2,2+n3,-1+n4)*prf(-4*M`j'^2*q12^2*q13*q33-4*M`j'^2*n3*q12^2*q13*q33+4*q12^3*q13*q33+4*n3*q12^3*q13*q33-2*M`j'^2*q12*q13^2*q33-2*M`j'^2*n3*q12*q13^2*q33+2*q12^2*q13^2*q33+2*n3*q12^2*q13^2*q33+4*M`j'^2*q12^2*q23*q33+4*M`j'^2*n3*q12^2*q23*q33+2*q12^2*q13*q23*q33+2*n3*q12^2*q13*q23*q33+2*M`j'^2*q12*q23^2*q33+2*M`j'^2*n3*q12*q23^2*q33+2*q12^3*q33^2+2*n3*q12^3*q33^2+q12^2*q13*q33^2+n3*q12^2*q13*q33^2+q12^2*q23*q33^2+n3*q12^2*q23*q33^2,-4*M`j'^2*q13^4+4*M`j'^2*n2*q13^4-16*M`j'^2*q13^3*q23+16*M`j'^2*n2*q13^3*q23-24*M`j'^2*q13^2*q23^2+24*M`j'^2*n2*q13^2*q23^2-16*M`j'^2*q13*q23^3+16*M`j'^2*n2*q13*q23^3-4*M`j'^2*q23^4+4*M`j'^2*n2*q23^4+16*M`j'^2*q12*q13^2*q33-16*M`j'^2*n2*q12*q13^2*q33-4*q12^2*q13^2*q33+4*n2*q12^2*q13^2*q33-4*q12*q13^3*q33+4*n2*q12*q13^3*q33+32*M`j'^2*q12*q13*q23*q33-32*M`j'^2*n2*q12*q13*q23*q33-8*q12^2*q13*q23*q33+8*n2*q12^2*q13*q23*q33-12*q12*q13^2*q23*q33+12*n2*q12*q13^2*q23*q33+16*M`j'^2*q12*q23^2*q33-16*M`j'^2*n2*q12*q23^2*q33-4*q12^2*q23^2*q33+4*n2*q12^2*q23^2*q33-12*q12*q13*q23^2*q33+12*n2*q12*q13*q23^2*q33-4*q12*q23^3*q33+4*n2*q12*q23^3*q33-16*M`j'^2*q12^2*q33^2+16*M`j'^2*n2*q12^2*q33^2+8*q12^3*q33^2-8*n2*q12^3*q33^2+8*q12^2*q13*q33^2-8*n2*q12^2*q13*q33^2-2*q12*q13^2*q33^2+2*n2*q12*q13^2*q33^2+8*q12^2*q23*q33^2-8*n2*q12^2*q23*q33^2-4*q12*q13*q23*q33^2+4*n2*q12*q13*q23*q33^2-2*q12*q23^2*q33^2+2*n2*q12*q23^2*q33^2+4*q12^2*q33^3-4*n2*q12^2*q33^3)+mbox1l(n1,-2+n2,1+n3,1+n4)*prf(4*M`j'^2*n4*q12^2*q13^2*q33+2*M`j'^2*n4*q12*q13^3*q33+4*M`j'^2*n4*q12^2*q13*q23*q33+4*M`j'^2*n4*q12*q13^2*q23*q33+2*M`j'^2*n4*q12*q13*q23^2*q33-4*M`j'^2*n4*q12^3*q33^2+M`j'^2*n4*q12*q13^2*q33^2-4*M`j'^2*n4*q12^2*q23*q33^2-M`j'^2*n4*q12*q23^2*q33^2,4*M`j'^2*q12*q13^4-4*M`j'^2*n2*q12*q13^4+4*M`j'^2*q13^5-4*M`j'^2*n2*q13^5+16*M`j'^2*q12*q13^3*q23-16*M`j'^2*n2*q12*q13^3*q23+20*M`j'^2*q13^4*q23-20*M`j'^2*n2*q13^4*q23+24*M`j'^2*q12*q13^2*q23^2-24*M`j'^2*n2*q12*q13^2*q23^2+40*M`j'^2*q13^3*q23^2-40*M`j'^2*n2*q13^3*q23^2+16*M`j'^2*q12*q13*q23^3-16*M`j'^2*n2*q12*q13*q23^3+40*M`j'^2*q13^2*q23^3-40*M`j'^2*n2*q13^2*q23^3+4*M`j'^2*q12*q23^4-4*M`j'^2*n2*q12*q23^4+20*M`j'^2*q13*q23^4-20*M`j'^2*n2*q13*q23^4+4*M`j'^2*q23^5-4*M`j'^2*n2*q23^5-16*M`j'^2*q12^2*q13^2*q33+16*M`j'^2*n2*q12^2*q13^2*q33+4*q12^3*q13^2*q33-4*n2*q12^3*q13^2*q33-16*M`j'^2*q12*q13^3*q33+16*M`j'^2*n2*q12*q13^3*q33+8*q12^2*q13^3*q33-8*n2*q12^2*q13^3*q33+2*M`j'^2*q13^4*q33-2*M`j'^2*n2*q13^4*q33+4*q12*q13^4*q33-4*n2*q12*q13^4*q33-32*M`j'^2*q12^2*q13*q23*q33+32*M`j'^2*n2*q12^2*q13*q23*q33+8*q12^3*q13*q23*q33-8*n2*q12^3*q13*q23*q33-48*M`j'^2*q12*q13^2*q23*q33+48*M`j'^2*n2*q12*q13^2*q23*q33+24*q12^2*q13^2*q23*q33-24*n2*q12^2*q13^2*q23*q33+8*M`j'^2*q13^3*q23*q33-8*M`j'^2*n2*q13^3*q23*q33+16*q12*q13^3*q23*q33-16*n2*q12*q13^3*q23*q33-16*M`j'^2*q12^2*q23^2*q33+16*M`j'^2*n2*q12^2*q23^2*q33+4*q12^3*q23^2*q33-4*n2*q12^3*q23^2*q33-48*M`j'^2*q12*q13*q23^2*q33+48*M`j'^2*n2*q12*q13*q23^2*q33+24*q12^2*q13*q23^2*q33-24*n2*q12^2*q13*q23^2*q33+12*M`j'^2*q13^2*q23^2*q33-12*M`j'^2*n2*q13^2*q23^2*q33+24*q12*q13^2*q23^2*q33-24*n2*q12*q13^2*q23^2*q33-16*M`j'^2*q12*q23^3*q33+16*M`j'^2*n2*q12*q23^3*q33+8*q12^2*q23^3*q33-8*n2*q12^2*q23^3*q33+8*M`j'^2*q13*q23^3*q33-8*M`j'^2*n2*q13*q23^3*q33+16*q12*q13*q23^3*q33-16*n2*q12*q13*q23^3*q33+2*M`j'^2*q23^4*q33-2*M`j'^2*n2*q23^4*q33+4*q12*q23^4*q33-4*n2*q12*q23^4*q33+16*M`j'^2*q12^3*q33^2-16*M`j'^2*n2*q12^3*q33^2-8*q12^4*q33^2+8*n2*q12^4*q33^2+16*M`j'^2*q12^2*q13*q33^2-16*M`j'^2*n2*q12^2*q13*q33^2-16*q12^3*q13*q33^2+16*n2*q12^3*q13*q33^2-8*M`j'^2*q12*q13^2*q33^2+8*M`j'^2*n2*q12*q13^2*q33^2-4*q12^2*q13^2*q33^2+4*n2*q12^2*q13^2*q33^2+4*q12*q13^3*q33^2-4*n2*q12*q13^3*q33^2+16*M`j'^2*q12^2*q23*q33^2-16*M`j'^2*n2*q12^2*q23*q33^2-16*q12^3*q23*q33^2+16*n2*q12^3*q23*q33^2-16*M`j'^2*q12*q13*q23*q33^2+16*M`j'^2*n2*q12*q13*q23*q33^2-8*q12^2*q13*q23*q33^2+8*n2*q12^2*q13*q23*q33^2+12*q12*q13^2*q23*q33^2-12*n2*q12*q13^2*q23*q33^2-8*M`j'^2*q12*q23^2*q33^2+8*M`j'^2*n2*q12*q23^2*q33^2-4*q12^2*q23^2*q33^2+4*n2*q12^2*q23^2*q33^2+12*q12*q13*q23^2*q33^2-12*n2*q12*q13*q23^2*q33^2+4*q12*q23^3*q33^2-4*n2*q12*q23^3*q33^2+8*M`j'^2*q12^2*q33^3-8*M`j'^2*n2*q12^2*q33^3-8*q12^3*q33^3+8*n2*q12^3*q33^3-8*q12^2*q13*q33^3+8*n2*q12^2*q13*q33^3+q12*q13^2*q33^3-n2*q12*q13^2*q33^3-8*q12^2*q23*q33^3+8*n2*q12^2*q23*q33^3+2*q12*q13*q23*q33^3-2*n2*q12*q13*q23*q33^3+q12*q23^2*q33^3-n2*q12*q23^2*q33^3-2*q12^2*q33^4+2*n2*q12^2*q33^4)+mbox1l(-1+n1,n2,1+n3,n4)*prf(4*M`j'^2*q12*q13^3+12*M`j'^2*q12*q13^2*q23+4*M`j'^2*q13^3*q23+12*M`j'^2*q12*q13*q23^2+12*M`j'^2*q13^2*q23^2+4*M`j'^2*q12*q23^3+12*M`j'^2*q13*q23^3+4*M`j'^2*q23^4-4*q12^3*q13*q33+8*M`j'^2*q12*q13^2*q33-8*q12^2*q13^2*q33-4*q12*q13^3*q33-16*M`j'^2*q12^2*q23*q33+4*q12^3*q23*q33-8*M`j'^2*q12*q13*q23*q33-4*q12*q13^2*q23*q33-16*M`j'^2*q12*q23^2*q33+8*q12^2*q23^2*q33+4*q12*q13*q23^2*q33+4*q12*q23^3*q33+4*M`j'^2*q12*q13*q33^2-4*q12^2*q13*q33^2-4*q12*q13^2*q33^2-4*M`j'^2*q12*q23*q33^2+4*q12^2*q23*q33^2+4*q12*q23^2*q33^2-q12*q13*q33^3+q12*q23*q33^3,4*M`j'^2*q13^4+16*M`j'^2*q13^3*q23+24*M`j'^2*q13^2*q23^2+16*M`j'^2*q13*q23^3+4*M`j'^2*q23^4-16*M`j'^2*q12*q13^2*q33+4*q12^2*q13^2*q33+4*q12*q13^3*q33-32*M`j'^2*q12*q13*q23*q33+8*q12^2*q13*q23*q33+12*q12*q13^2*q23*q33-16*M`j'^2*q12*q23^2*q33+4*q12^2*q23^2*q33+12*q12*q13*q23^2*q33+4*q12*q23^3*q33+16*M`j'^2*q12^2*q33^2-8*q12^3*q33^2-8*q12^2*q13*q33^2+2*q12*q13^2*q33^2-8*q12^2*q23*q33^2+4*q12*q13*q23*q33^2+2*q12*q23^2*q33^2-4*q12^2*q33^3)+mbox1l(n1,n2,1+n3,-1+n4)*prf(4*M`j'^2*q12^2*q13^3+12*M`j'^2*q12^2*q13^2*q23+4*M`j'^2*q12*q13^3*q23+12*M`j'^2*q12^2*q13*q23^2+12*M`j'^2*q12*q13^2*q23^2+4*M`j'^2*q12^2*q23^3+12*M`j'^2*q12*q13*q23^3+4*M`j'^2*q12*q23^4-4*q12^4*q13*q33+12*M`j'^2*q12^2*q13^2*q33-8*q12^3*q13^2*q33+2*M`j'^2*q12*q13^3*q33-4*q12^2*q13^3*q33-16*M`j'^2*q12^3*q23*q33+4*q12^4*q23*q33-4*M`j'^2*q12^2*q13*q23*q33+4*M`j'^2*q12*q13^2*q23*q33-4*q12^2*q13^2*q23*q33-16*M`j'^2*q12^2*q23^2*q33+8*q12^3*q23^2*q33+2*M`j'^2*q12*q13*q23^2*q33+4*q12^2*q13*q23^2*q33+4*q12^2*q23^3*q33-4*M`j'^2*q12^3*q33^2+4*M`j'^2*q12^2*q13*q33^2-4*q12^3*q13*q33^2+M`j'^2*q12*q13^2*q33^2-4*q12^2*q13^2*q33^2-8*M`j'^2*q12^2*q23*q33^2+4*q12^3*q23*q33^2-M`j'^2*q12*q23^2*q33^2+4*q12^2*q23^2*q33^2-q12^2*q13*q33^3+q12^2*q23*q33^3,-4*M`j'^2*q12*q13^4-4*M`j'^2*q13^5-16*M`j'^2*q12*q13^3*q23-20*M`j'^2*q13^4*q23-24*M`j'^2*q12*q13^2*q23^2-40*M`j'^2*q13^3*q23^2-16*M`j'^2*q12*q13*q23^3-40*M`j'^2*q13^2*q23^3-4*M`j'^2*q12*q23^4-20*M`j'^2*q13*q23^4-4*M`j'^2*q23^5+16*M`j'^2*q12^2*q13^2*q33-4*q12^3*q13^2*q33+16*M`j'^2*q12*q13^3*q33-8*q12^2*q13^3*q33-2*M`j'^2*q13^4*q33-4*q12*q13^4*q33+32*M`j'^2*q12^2*q13*q23*q33-8*q12^3*q13*q23*q33+48*M`j'^2*q12*q13^2*q23*q33-24*q12^2*q13^2*q23*q33-8*M`j'^2*q13^3*q23*q33-16*q12*q13^3*q23*q33+16*M`j'^2*q12^2*q23^2*q33-4*q12^3*q23^2*q33+48*M`j'^2*q12*q13*q23^2*q33-24*q12^2*q13*q23^2*q33-12*M`j'^2*q13^2*q23^2*q33-24*q12*q13^2*q23^2*q33+16*M`j'^2*q12*q23^3*q33-8*q12^2*q23^3*q33-8*M`j'^2*q13*q23^3*q33-16*q12*q13*q23^3*q33-2*M`j'^2*q23^4*q33-4*q12*q23^4*q33-16*M`j'^2*q12^3*q33^2+8*q12^4*q33^2-16*M`j'^2*q12^2*q13*q33^2+16*q12^3*q13*q33^2+8*M`j'^2*q12*q13^2*q33^2+4*q12^2*q13^2*q33^2-4*q12*q13^3*q33^2-16*M`j'^2*q12^2*q23*q33^2+16*q12^3*q23*q33^2+16*M`j'^2*q12*q13*q23*q33^2+8*q12^2*q13*q23*q33^2-12*q12*q13^2*q23*q33^2+8*M`j'^2*q12*q23^2*q33^2+4*q12^2*q23^2*q33^2-12*q12*q13*q23^2*q33^2-4*q12*q23^3*q33^2-8*M`j'^2*q12^2*q33^3+8*q12^3*q33^3+8*q12^2*q13*q33^3-q12*q13^2*q33^3+8*q12^2*q23*q33^3-2*q12*q13*q23*q33^3-q12*q23^2*q33^3+2*q12^2*q33^4)+mbox1l(1+n1,-1+n2,1+n3,-1+n4)*prf(4*M`j'^2*n1*q12*q13^4+12*M`j'^2*n1*q12*q13^3*q23+12*M`j'^2*n1*q12*q13^2*q23^2+4*M`j'^2*n1*q12*q13*q23^3-8*M`j'^2*n1*q12^2*q13^2*q33+4*n1*q12^3*q13^2*q33+4*M`j'^2*n1*q12*q13^3*q33+4*n1*q12^2*q13^3*q33-12*M`j'^2*n1*q12^2*q13*q23*q33+4*n1*q12^3*q13*q23*q33+6*M`j'^2*n1*q12*q13^2*q23*q33+8*n1*q12^2*q13^2*q23*q33-4*M`j'^2*n1*q12^2*q23^2*q33+4*n1*q12^2*q13*q23^2*q33-2*M`j'^2*n1*q12*q23^3*q33+4*M`j'^2*n1*q12^3*q33^2-4*n1*q12^4*q33^2-4*M`j'^2*n1*q12^2*q13*q33^2-2*n1*q12^3*q13*q33^2+M`j'^2*n1*q12*q13^2*q33^2+4*n1*q12^2*q13^2*q33^2-6*n1*q12^3*q23*q33^2+2*n1*q12^2*q13*q23*q33^2-M`j'^2*n1*q12*q23^2*q33^2-2*n1*q12^2*q23^2*q33^2-2*n1*q12^3*q33^3+n1*q12^2*q13*q33^3-n1*q12^2*q23*q33^3,4*M`j'^2*q12*q13^4-4*M`j'^2*n2*q12*q13^4+4*M`j'^2*q13^5-4*M`j'^2*n2*q13^5+16*M`j'^2*q12*q13^3*q23-16*M`j'^2*n2*q12*q13^3*q23+20*M`j'^2*q13^4*q23-20*M`j'^2*n2*q13^4*q23+24*M`j'^2*q12*q13^2*q23^2-24*M`j'^2*n2*q12*q13^2*q23^2+40*M`j'^2*q13^3*q23^2-40*M`j'^2*n2*q13^3*q23^2+16*M`j'^2*q12*q13*q23^3-16*M`j'^2*n2*q12*q13*q23^3+40*M`j'^2*q13^2*q23^3-40*M`j'^2*n2*q13^2*q23^3+4*M`j'^2*q12*q23^4-4*M`j'^2*n2*q12*q23^4+20*M`j'^2*q13*q23^4-20*M`j'^2*n2*q13*q23^4+4*M`j'^2*q23^5-4*M`j'^2*n2*q23^5-16*M`j'^2*q12^2*q13^2*q33+16*M`j'^2*n2*q12^2*q13^2*q33+4*q12^3*q13^2*q33-4*n2*q12^3*q13^2*q33-16*M`j'^2*q12*q13^3*q33+16*M`j'^2*n2*q12*q13^3*q33+8*q12^2*q13^3*q33-8*n2*q12^2*q13^3*q33+2*M`j'^2*q13^4*q33-2*M`j'^2*n2*q13^4*q33+4*q12*q13^4*q33-4*n2*q12*q13^4*q33-32*M`j'^2*q12^2*q13*q23*q33+32*M`j'^2*n2*q12^2*q13*q23*q33+8*q12^3*q13*q23*q33-8*n2*q12^3*q13*q23*q33-48*M`j'^2*q12*q13^2*q23*q33+48*M`j'^2*n2*q12*q13^2*q23*q33+24*q12^2*q13^2*q23*q33-24*n2*q12^2*q13^2*q23*q33+8*M`j'^2*q13^3*q23*q33-8*M`j'^2*n2*q13^3*q23*q33+16*q12*q13^3*q23*q33-16*n2*q12*q13^3*q23*q33-16*M`j'^2*q12^2*q23^2*q33+16*M`j'^2*n2*q12^2*q23^2*q33+4*q12^3*q23^2*q33-4*n2*q12^3*q23^2*q33-48*M`j'^2*q12*q13*q23^2*q33+48*M`j'^2*n2*q12*q13*q23^2*q33+24*q12^2*q13*q23^2*q33-24*n2*q12^2*q13*q23^2*q33+12*M`j'^2*q13^2*q23^2*q33-12*M`j'^2*n2*q13^2*q23^2*q33+24*q12*q13^2*q23^2*q33-24*n2*q12*q13^2*q23^2*q33-16*M`j'^2*q12*q23^3*q33+16*M`j'^2*n2*q12*q23^3*q33+8*q12^2*q23^3*q33-8*n2*q12^2*q23^3*q33+8*M`j'^2*q13*q23^3*q33-8*M`j'^2*n2*q13*q23^3*q33+16*q12*q13*q23^3*q33-16*n2*q12*q13*q23^3*q33+2*M`j'^2*q23^4*q33-2*M`j'^2*n2*q23^4*q33+4*q12*q23^4*q33-4*n2*q12*q23^4*q33+16*M`j'^2*q12^3*q33^2-16*M`j'^2*n2*q12^3*q33^2-8*q12^4*q33^2+8*n2*q12^4*q33^2+16*M`j'^2*q12^2*q13*q33^2-16*M`j'^2*n2*q12^2*q13*q33^2-16*q12^3*q13*q33^2+16*n2*q12^3*q13*q33^2-8*M`j'^2*q12*q13^2*q33^2+8*M`j'^2*n2*q12*q13^2*q33^2-4*q12^2*q13^2*q33^2+4*n2*q12^2*q13^2*q33^2+4*q12*q13^3*q33^2-4*n2*q12*q13^3*q33^2+16*M`j'^2*q12^2*q23*q33^2-16*M`j'^2*n2*q12^2*q23*q33^2-16*q12^3*q23*q33^2+16*n2*q12^3*q23*q33^2-16*M`j'^2*q12*q13*q23*q33^2+16*M`j'^2*n2*q12*q13*q23*q33^2-8*q12^2*q13*q23*q33^2+8*n2*q12^2*q13*q23*q33^2+12*q12*q13^2*q23*q33^2-12*n2*q12*q13^2*q23*q33^2-8*M`j'^2*q12*q23^2*q33^2+8*M`j'^2*n2*q12*q23^2*q33^2-4*q12^2*q23^2*q33^2+4*n2*q12^2*q23^2*q33^2+12*q12*q13*q23^2*q33^2-12*n2*q12*q13*q23^2*q33^2+4*q12*q23^3*q33^2-4*n2*q12*q23^3*q33^2+8*M`j'^2*q12^2*q33^3-8*M`j'^2*n2*q12^2*q33^3-8*q12^3*q33^3+8*n2*q12^3*q33^3-8*q12^2*q13*q33^3+8*n2*q12^2*q13*q33^3+q12*q13^2*q33^3-n2*q12*q13^2*q33^3-8*q12^2*q23*q33^3+8*n2*q12^2*q23*q33^3+2*q12*q13*q23*q33^3-2*n2*q12*q13*q23*q33^3+q12*q23^2*q33^3-n2*q12*q23^2*q33^3-2*q12^2*q33^4+2*n2*q12^2*q33^4)+mbox1l(n1,-1+n2,2+n3,n4)*prf(8*q12^3*q13^2*q33+8*n3*q12^3*q13^2*q33+4*q12^2*q13^3*q33+4*n3*q12^2*q13^3*q33+16*M`j'^2*q12^2*q13*q23*q33+16*M`j'^2*n3*q12^2*q13*q23*q33+8*M`j'^2*q12*q13^2*q23*q33+8*M`j'^2*n3*q12*q13^2*q23*q33+4*q12^2*q13^2*q23*q33+4*n3*q12^2*q13^2*q23*q33+8*M`j'^2*q12*q13*q23^2*q33+8*M`j'^2*n3*q12*q13*q23^2*q33-8*M`j'^2*q12^3*q33^2-8*M`j'^2*n3*q12^3*q33^2-4*M`j'^2*q12^2*q13*q33^2-4*M`j'^2*n3*q12^2*q13*q33^2+8*q12^3*q13*q33^2+8*n3*q12^3*q13*q33^2+4*q12^2*q13^2*q33^2+4*n3*q12^2*q13^2*q33^2-4*M`j'^2*q12^2*q23*q33^2-4*M`j'^2*n3*q12^2*q23*q33^2+4*q12^2*q13*q23*q33^2+4*n3*q12^2*q13*q23*q33^2+2*q12^3*q33^3+2*n3*q12^3*q33^3+q12^2*q13*q33^3+n3*q12^2*q13*q33^3+q12^2*q23*q33^3+n3*q12^2*q23*q33^3,-4*M`j'^2*q13^4+4*M`j'^2*n2*q13^4-16*M`j'^2*q13^3*q23+16*M`j'^2*n2*q13^3*q23-24*M`j'^2*q13^2*q23^2+24*M`j'^2*n2*q13^2*q23^2-16*M`j'^2*q13*q23^3+16*M`j'^2*n2*q13*q23^3-4*M`j'^2*q23^4+4*M`j'^2*n2*q23^4+16*M`j'^2*q12*q13^2*q33-16*M`j'^2*n2*q12*q13^2*q33-4*q12^2*q13^2*q33+4*n2*q12^2*q13^2*q33-4*q12*q13^3*q33+4*n2*q12*q13^3*q33+32*M`j'^2*q12*q13*q23*q33-32*M`j'^2*n2*q12*q13*q23*q33-8*q12^2*q13*q23*q33+8*n2*q12^2*q13*q23*q33-12*q12*q13^2*q23*q33+12*n2*q12*q13^2*q23*q33+16*M`j'^2*q12*q23^2*q33-16*M`j'^2*n2*q12*q23^2*q33-4*q12^2*q23^2*q33+4*n2*q12^2*q23^2*q33-12*q12*q13*q23^2*q33+12*n2*q12*q13*q23^2*q33-4*q12*q23^3*q33+4*n2*q12*q23^3*q33-16*M`j'^2*q12^2*q33^2+16*M`j'^2*n2*q12^2*q33^2+8*q12^3*q33^2-8*n2*q12^3*q33^2+8*q12^2*q13*q33^2-8*n2*q12^2*q13*q33^2-2*q12*q13^2*q33^2+2*n2*q12*q13^2*q33^2+8*q12^2*q23*q33^2-8*n2*q12^2*q23*q33^2-4*q12*q13*q23*q33^2+4*n2*q12*q13*q23*q33^2-2*q12*q23^2*q33^2+2*n2*q12*q23^2*q33^2+4*q12^2*q33^3-4*n2*q12^2*q33^3)+mbox1l(1+n1,-2+n2,1+n3,n4)*prf(8*M`j'^2*n1*q12^2*q13^2*q33+12*M`j'^2*n1*q12*q13^3*q33+8*M`j'^2*n1*q12^2*q13*q23*q33+24*M`j'^2*n1*q12*q13^2*q23*q33+12*M`j'^2*n1*q12*q13*q23^2*q33-8*M`j'^2*n1*q12^3*q33^2-8*M`j'^2*n1*q12^2*q13*q33^2+14*M`j'^2*n1*q12*q13^2*q33^2-4*n1*q12^2*q13^2*q33^2-4*n1*q12*q13^3*q33^2-16*M`j'^2*n1*q12^2*q23*q33^2+8*M`j'^2*n1*q12*q13*q23*q33^2-4*n1*q12^2*q13*q23*q33^2-8*n1*q12*q13^2*q23*q33^2-6*M`j'^2*n1*q12*q23^2*q33^2-4*n1*q12*q13*q23^2*q33^2-8*M`j'^2*n1*q12^2*q33^3+4*n1*q12^3*q33^3+4*M`j'^2*n1*q12*q13*q33^3+2*n1*q12^2*q13*q33^3-4*n1*q12*q13^2*q33^3-4*M`j'^2*n1*q12*q23*q33^3+6*n1*q12^2*q23*q33^3-2*n1*q12*q13*q23*q33^3+2*n1*q12*q23^2*q33^3+2*n1*q12^2*q33^4-n1*q12*q13*q33^4+n1*q12*q23*q33^4,8*M`j'^2*q12*q13^4-8*M`j'^2*n2*q12*q13^4+8*M`j'^2*q13^5-8*M`j'^2*n2*q13^5+32*M`j'^2*q12*q13^3*q23-32*M`j'^2*n2*q12*q13^3*q23+40*M`j'^2*q13^4*q23-40*M`j'^2*n2*q13^4*q23+48*M`j'^2*q12*q13^2*q23^2-48*M`j'^2*n2*q12*q13^2*q23^2+80*M`j'^2*q13^3*q23^2-80*M`j'^2*n2*q13^3*q23^2+32*M`j'^2*q12*q13*q23^3-32*M`j'^2*n2*q12*q13*q23^3+80*M`j'^2*q13^2*q23^3-80*M`j'^2*n2*q13^2*q23^3+8*M`j'^2*q12*q23^4-8*M`j'^2*n2*q12*q23^4+40*M`j'^2*q13*q23^4-40*M`j'^2*n2*q13*q23^4+8*M`j'^2*q23^5-8*M`j'^2*n2*q23^5-32*M`j'^2*q12^2*q13^2*q33+32*M`j'^2*n2*q12^2*q13^2*q33+8*q12^3*q13^2*q33-8*n2*q12^3*q13^2*q33-32*M`j'^2*q12*q13^3*q33+32*M`j'^2*n2*q12*q13^3*q33+16*q12^2*q13^3*q33-16*n2*q12^2*q13^3*q33+4*M`j'^2*q13^4*q33-4*M`j'^2*n2*q13^4*q33+8*q12*q13^4*q33-8*n2*q12*q13^4*q33-64*M`j'^2*q12^2*q13*q23*q33+64*M`j'^2*n2*q12^2*q13*q23*q33+16*q12^3*q13*q23*q33-16*n2*q12^3*q13*q23*q33-96*M`j'^2*q12*q13^2*q23*q33+96*M`j'^2*n2*q12*q13^2*q23*q33+48*q12^2*q13^2*q23*q33-48*n2*q12^2*q13^2*q23*q33+16*M`j'^2*q13^3*q23*q33-16*M`j'^2*n2*q13^3*q23*q33+32*q12*q13^3*q23*q33-32*n2*q12*q13^3*q23*q33-32*M`j'^2*q12^2*q23^2*q33+32*M`j'^2*n2*q12^2*q23^2*q33+8*q12^3*q23^2*q33-8*n2*q12^3*q23^2*q33-96*M`j'^2*q12*q13*q23^2*q33+96*M`j'^2*n2*q12*q13*q23^2*q33+48*q12^2*q13*q23^2*q33-48*n2*q12^2*q13*q23^2*q33+24*M`j'^2*q13^2*q23^2*q33-24*M`j'^2*n2*q13^2*q23^2*q33+48*q12*q13^2*q23^2*q33-48*n2*q12*q13^2*q23^2*q33-32*M`j'^2*q12*q23^3*q33+32*M`j'^2*n2*q12*q23^3*q33+16*q12^2*q23^3*q33-16*n2*q12^2*q23^3*q33+16*M`j'^2*q13*q23^3*q33-16*M`j'^2*n2*q13*q23^3*q33+32*q12*q13*q23^3*q33-32*n2*q12*q13*q23^3*q33+4*M`j'^2*q23^4*q33-4*M`j'^2*n2*q23^4*q33+8*q12*q23^4*q33-8*n2*q12*q23^4*q33+32*M`j'^2*q12^3*q33^2-32*M`j'^2*n2*q12^3*q33^2-16*q12^4*q33^2+16*n2*q12^4*q33^2+32*M`j'^2*q12^2*q13*q33^2-32*M`j'^2*n2*q12^2*q13*q33^2-32*q12^3*q13*q33^2+32*n2*q12^3*q13*q33^2-16*M`j'^2*q12*q13^2*q33^2+16*M`j'^2*n2*q12*q13^2*q33^2-8*q12^2*q13^2*q33^2+8*n2*q12^2*q13^2*q33^2+8*q12*q13^3*q33^2-8*n2*q12*q13^3*q33^2+32*M`j'^2*q12^2*q23*q33^2-32*M`j'^2*n2*q12^2*q23*q33^2-32*q12^3*q23*q33^2+32*n2*q12^3*q23*q33^2-32*M`j'^2*q12*q13*q23*q33^2+32*M`j'^2*n2*q12*q13*q23*q33^2-16*q12^2*q13*q23*q33^2+16*n2*q12^2*q13*q23*q33^2+24*q12*q13^2*q23*q33^2-24*n2*q12*q13^2*q23*q33^2-16*M`j'^2*q12*q23^2*q33^2+16*M`j'^2*n2*q12*q23^2*q33^2-8*q12^2*q23^2*q33^2+8*n2*q12^2*q23^2*q33^2+24*q12*q13*q23^2*q33^2-24*n2*q12*q13*q23^2*q33^2+8*q12*q23^3*q33^2-8*n2*q12*q23^3*q33^2+16*M`j'^2*q12^2*q33^3-16*M`j'^2*n2*q12^2*q33^3-16*q12^3*q33^3+16*n2*q12^3*q33^3-16*q12^2*q13*q33^3+16*n2*q12^2*q13*q33^3+2*q12*q13^2*q33^3-2*n2*q12*q13^2*q33^3-16*q12^2*q23*q33^3+16*n2*q12^2*q23*q33^3+4*q12*q13*q23*q33^3-4*n2*q12*q13*q23*q33^3+2*q12*q23^2*q33^3-2*n2*q12*q23^2*q33^3-4*q12^2*q33^4+4*n2*q12^2*q33^4)+mbox1l(n1,-1+n2,1+n3,n4)*(tmpprf(ep,1)*prf(16*q12^3*q13^2*q33+24*q12^2*q13^3*q33+8*q12*q13^4*q33+16*q12^3*q13*q23*q33+48*q12^2*q13^2*q23*q33+24*q12*q13^3*q23*q33+24*q12^2*q13*q23^2*q33+24*q12*q13^2*q23^2*q33+8*q12*q13*q23^3*q33-16*q12^4*q33^2-16*q12^3*q13*q33^2+12*q12^2*q13^2*q33^2+8*q12*q13^3*q33^2-32*q12^3*q23*q33^2-8*q12^2*q13*q23*q33^2+12*q12*q13^2*q23*q33^2-20*q12^2*q23^2*q33^2-4*q12*q23^3*q33^2-8*q12^3*q33^3+2*q12*q13^2*q33^3-8*q12^2*q23*q33^3-2*q12*q23^2*q33^3,8*M`j'^2*q12*q13^4-8*M`j'^2*n2*q12*q13^4+8*M`j'^2*q13^5-8*M`j'^2*n2*q13^5+32*M`j'^2*q12*q13^3*q23-32*M`j'^2*n2*q12*q13^3*q23+40*M`j'^2*q13^4*q23-40*M`j'^2*n2*q13^4*q23+48*M`j'^2*q12*q13^2*q23^2-48*M`j'^2*n2*q12*q13^2*q23^2+80*M`j'^2*q13^3*q23^2-80*M`j'^2*n2*q13^3*q23^2+32*M`j'^2*q12*q13*q23^3-32*M`j'^2*n2*q12*q13*q23^3+80*M`j'^2*q13^2*q23^3-80*M`j'^2*n2*q13^2*q23^3+8*M`j'^2*q12*q23^4-8*M`j'^2*n2*q12*q23^4+40*M`j'^2*q13*q23^4-40*M`j'^2*n2*q13*q23^4+8*M`j'^2*q23^5-8*M`j'^2*n2*q23^5-32*M`j'^2*q12^2*q13^2*q33+32*M`j'^2*n2*q12^2*q13^2*q33+8*q12^3*q13^2*q33-8*n2*q12^3*q13^2*q33-32*M`j'^2*q12*q13^3*q33+32*M`j'^2*n2*q12*q13^3*q33+16*q12^2*q13^3*q33-16*n2*q12^2*q13^3*q33+4*M`j'^2*q13^4*q33-4*M`j'^2*n2*q13^4*q33+8*q12*q13^4*q33-8*n2*q12*q13^4*q33-64*M`j'^2*q12^2*q13*q23*q33+64*M`j'^2*n2*q12^2*q13*q23*q33+16*q12^3*q13*q23*q33-16*n2*q12^3*q13*q23*q33-96*M`j'^2*q12*q13^2*q23*q33+96*M`j'^2*n2*q12*q13^2*q23*q33+48*q12^2*q13^2*q23*q33-48*n2*q12^2*q13^2*q23*q33+16*M`j'^2*q13^3*q23*q33-16*M`j'^2*n2*q13^3*q23*q33+32*q12*q13^3*q23*q33-32*n2*q12*q13^3*q23*q33-32*M`j'^2*q12^2*q23^2*q33+32*M`j'^2*n2*q12^2*q23^2*q33+8*q12^3*q23^2*q33-8*n2*q12^3*q23^2*q33-96*M`j'^2*q12*q13*q23^2*q33+96*M`j'^2*n2*q12*q13*q23^2*q33+48*q12^2*q13*q23^2*q33-48*n2*q12^2*q13*q23^2*q33+24*M`j'^2*q13^2*q23^2*q33-24*M`j'^2*n2*q13^2*q23^2*q33+48*q12*q13^2*q23^2*q33-48*n2*q12*q13^2*q23^2*q33-32*M`j'^2*q12*q23^3*q33+32*M`j'^2*n2*q12*q23^3*q33+16*q12^2*q23^3*q33-16*n2*q12^2*q23^3*q33+16*M`j'^2*q13*q23^3*q33-16*M`j'^2*n2*q13*q23^3*q33+32*q12*q13*q23^3*q33-32*n2*q12*q13*q23^3*q33+4*M`j'^2*q23^4*q33-4*M`j'^2*n2*q23^4*q33+8*q12*q23^4*q33-8*n2*q12*q23^4*q33+32*M`j'^2*q12^3*q33^2-32*M`j'^2*n2*q12^3*q33^2-16*q12^4*q33^2+16*n2*q12^4*q33^2+32*M`j'^2*q12^2*q13*q33^2-32*M`j'^2*n2*q12^2*q13*q33^2-32*q12^3*q13*q33^2+32*n2*q12^3*q13*q33^2-16*M`j'^2*q12*q13^2*q33^2+16*M`j'^2*n2*q12*q13^2*q33^2-8*q12^2*q13^2*q33^2+8*n2*q12^2*q13^2*q33^2+8*q12*q13^3*q33^2-8*n2*q12*q13^3*q33^2+32*M`j'^2*q12^2*q23*q33^2-32*M`j'^2*n2*q12^2*q23*q33^2-32*q12^3*q23*q33^2+32*n2*q12^3*q23*q33^2-32*M`j'^2*q12*q13*q23*q33^2+32*M`j'^2*n2*q12*q13*q23*q33^2-16*q12^2*q13*q23*q33^2+16*n2*q12^2*q13*q23*q33^2+24*q12*q13^2*q23*q33^2-24*n2*q12*q13^2*q23*q33^2-16*M`j'^2*q12*q23^2*q33^2+16*M`j'^2*n2*q12*q23^2*q33^2-8*q12^2*q23^2*q33^2+8*n2*q12^2*q23^2*q33^2+24*q12*q13*q23^2*q33^2-24*n2*q12*q13*q23^2*q33^2+8*q12*q23^3*q33^2-8*n2*q12*q23^3*q33^2+16*M`j'^2*q12^2*q33^3-16*M`j'^2*n2*q12^2*q33^3-16*q12^3*q33^3+16*n2*q12^3*q33^3-16*q12^2*q13*q33^3+16*n2*q12^2*q13*q33^3+2*q12*q13^2*q33^3-2*n2*q12*q13^2*q33^3-16*q12^2*q23*q33^3+16*n2*q12^2*q23*q33^3+4*q12*q13*q23*q33^3-4*n2*q12*q13*q23*q33^3+2*q12*q23^2*q33^3-2*n2*q12*q23^2*q33^3-4*q12^2*q33^4+4*n2*q12^2*q33^4)+prf(8*M`j'^2*q12*q13^4-8*M`j'^2*n1*q12*q13^4+8*M`j'^2*n3*q12*q13^4+16*M`j'^2*q13^5-8*M`j'^2*n2*q13^5+8*M`j'^2*n3*q13^5+24*M`j'^2*q12*q13^3*q23-24*M`j'^2*n1*q12*q13^3*q23+24*M`j'^2*n3*q12*q13^3*q23+64*M`j'^2*q13^4*q23-32*M`j'^2*n2*q13^4*q23+32*M`j'^2*n3*q13^4*q23+24*M`j'^2*q12*q13^2*q23^2-24*M`j'^2*n1*q12*q13^2*q23^2+24*M`j'^2*n3*q12*q13^2*q23^2+96*M`j'^2*q13^3*q23^2-48*M`j'^2*n2*q13^3*q23^2+48*M`j'^2*n3*q13^3*q23^2+8*M`j'^2*q12*q13*q23^3-8*M`j'^2*n1*q12*q13*q23^3+8*M`j'^2*n3*q12*q13*q23^3+64*M`j'^2*q13^2*q23^3-32*M`j'^2*n2*q13^2*q23^3+32*M`j'^2*n3*q13^2*q23^3+16*M`j'^2*q13*q23^4-8*M`j'^2*n2*q13*q23^4+8*M`j'^2*n3*q13*q23^4-48*M`j'^2*q12^2*q13^2*q33+8*M`j'^2*n1*q12^2*q13^2*q33+24*M`j'^2*n2*q12^2*q13^2*q33-24*M`j'^2*n3*q12^2*q13^2*q33-8*M`j'^2*n4*q12^2*q13^2*q33-16*q12^3*q13^2*q33+8*n1*q12^3*q13^2*q33+16*n3*q12^3*q13^2*q33+16*n4*q12^3*q13^2*q33-72*M`j'^2*q12*q13^3*q33-20*M`j'^2*n1*q12*q13^3*q33+48*M`j'^2*n2*q12*q13^3*q33-24*M`j'^2*n3*q12*q13^3*q33-4*M`j'^2*n4*q12*q13^3*q33-12*q12^2*q13^3*q33+16*n1*q12^2*q13^3*q33-8*n2*q12^2*q13^3*q33+28*n3*q12^2*q13^3*q33+24*n4*q12^2*q13^3*q33+8*M`j'^2*q13^4*q33-4*M`j'^2*n2*q13^4*q33+4*M`j'^2*n3*q13^4*q33+4*q12*q13^4*q33+8*n1*q12*q13^4*q33-8*n2*q12*q13^4*q33+12*n3*q12*q13^4*q33+8*n4*q12*q13^4*q33-56*M`j'^2*q12^2*q13*q23*q33+16*M`j'^2*n1*q12^2*q13*q23*q33+24*M`j'^2*n2*q12^2*q13*q23*q33-32*M`j'^2*n3*q12^2*q13*q23*q33-8*M`j'^2*n4*q12^2*q13*q23*q33-16*q12^3*q13*q23*q33+8*n1*q12^3*q13*q23*q33+16*n3*q12^3*q13*q23*q33+16*n4*q12^3*q13*q23*q33-156*M`j'^2*q12*q13^2*q23*q33-36*M`j'^2*n1*q12*q13^2*q23*q33+100*M`j'^2*n2*q12*q13^2*q23*q33-56*M`j'^2*n3*q12*q13^2*q23*q33-8*M`j'^2*n4*q12*q13^2*q23*q33-24*q12^2*q13^2*q23*q33+32*n1*q12^2*q13^2*q23*q33-16*n2*q12^2*q13^2*q23*q33+56*n3*q12^2*q13^2*q23*q33+48*n4*q12^2*q13^2*q23*q33+24*M`j'^2*q13^3*q23*q33-12*M`j'^2*n2*q13^3*q23*q33+12*M`j'^2*n3*q13^3*q23*q33+12*q12*q13^3*q23*q33+24*n1*q12*q13^3*q23*q33-24*n2*q12*q13^3*q23*q33+36*n3*q12*q13^3*q23*q33+24*n4*q12*q13^3*q23*q33-8*M`j'^2*q12^2*q23^2*q33+8*M`j'^2*n1*q12^2*q23^2*q33-8*M`j'^2*n3*q12^2*q23^2*q33-96*M`j'^2*q12*q13*q23^2*q33-12*M`j'^2*n1*q12*q13*q23^2*q33+56*M`j'^2*n2*q12*q13*q23^2*q33-40*M`j'^2*n3*q12*q13*q23^2*q33-4*M`j'^2*n4*q12*q13*q23^2*q33-12*q12^2*q13*q23^2*q33+16*n1*q12^2*q13*q23^2*q33-8*n2*q12^2*q13*q23^2*q33+28*n3*q12^2*q13*q23^2*q33+24*n4*q12^2*q13*q23^2*q33+24*M`j'^2*q13^2*q23^2*q33-12*M`j'^2*n2*q13^2*q23^2*q33+12*M`j'^2*n3*q13^2*q23^2*q33+12*q12*q13^2*q23^2*q33+24*n1*q12*q13^2*q23^2*q33-24*n2*q12*q13^2*q23^2*q33+36*n3*q12*q13^2*q23^2*q33+24*n4*q12*q13^2*q23^2*q33-12*M`j'^2*q12*q23^3*q33+4*M`j'^2*n1*q12*q23^3*q33+4*M`j'^2*n2*q12*q23^3*q33-8*M`j'^2*n3*q12*q23^3*q33+8*M`j'^2*q13*q23^3*q33-4*M`j'^2*n2*q13*q23^3*q33+4*M`j'^2*n3*q13*q23^3*q33+4*q12*q13*q23^3*q33+8*n1*q12*q13*q23^3*q33-8*n2*q12*q13*q23^3*q33+12*n3*q12*q13*q23^3*q33+8*n4*q12*q13*q23^3*q33+40*M`j'^2*q12^3*q33^2-24*M`j'^2*n2*q12^3*q33^2+16*M`j'^2*n3*q12^3*q33^2+8*M`j'^2*n4*q12^3*q33^2+16*q12^4*q33^2-8*n1*q12^4*q33^2-16*n3*q12^4*q33^2-16*n4*q12^4*q33^2+48*M`j'^2*q12^2*q13*q33^2+16*M`j'^2*n1*q12^2*q13*q33^2-32*M`j'^2*n2*q12^2*q13*q33^2+16*M`j'^2*n3*q12^2*q13*q33^2-4*q12^3*q13*q33^2-12*n1*q12^3*q13*q33^2+12*n2*q12^3*q13*q33^2-24*n3*q12^3*q13*q33^2-16*n4*q12^3*q13*q33^2-42*M`j'^2*q12*q13^2*q33^2-16*M`j'^2*n1*q12*q13^2*q33^2+30*M`j'^2*n2*q12*q13^2*q33^2-12*M`j'^2*n3*q12*q13^2*q33^2-2*M`j'^2*n4*q12*q13^2*q33^2-22*q12^2*q13^2*q33^2+8*n1*q12^2*q13^2*q33^2+4*n2*q12^2*q13^2*q33^2+6*n3*q12^2*q13^2*q33^2+12*n4*q12^2*q13^2*q33^2+8*q12*q13^3*q33^2+12*n1*q12*q13^3*q33^2-12*n2*q12*q13^3*q33^2+12*n3*q12*q13^3*q33^2+8*n4*q12*q13^3*q33^2+56*M`j'^2*q12^2*q23*q33^2+16*M`j'^2*n1*q12^2*q23*q33^2-40*M`j'^2*n2*q12^2*q23*q33^2+16*M`j'^2*n3*q12^2*q23*q33^2+8*M`j'^2*n4*q12^2*q23*q33^2+28*q12^3*q23*q33^2-20*n1*q12^3*q23*q33^2+4*n2*q12^3*q23*q33^2-32*n3*q12^3*q23*q33^2-32*n4*q12^3*q23*q33^2-40*M`j'^2*q12*q13*q23*q33^2-8*M`j'^2*n1*q12*q13*q23*q33^2+24*M`j'^2*n2*q12*q13*q23*q33^2-16*M`j'^2*n3*q12*q13*q23*q33^2-4*q12^2*q13*q23*q33^2-8*n1*q12^2*q13*q23*q33^2+8*n2*q12^2*q13*q23*q33^2-12*n3*q12^2*q13*q23*q33^2-8*n4*q12^2*q13*q23*q33^2+22*q12*q13^2*q23*q33^2+20*n1*q12*q13^2*q23*q33^2-24*n2*q12*q13^2*q23*q33^2+22*n3*q12*q13^2*q23*q33^2+12*n4*q12*q13^2*q23*q33^2+2*M`j'^2*q12*q23^2*q33^2+8*M`j'^2*n1*q12*q23^2*q33^2-6*M`j'^2*n2*q12*q23^2*q33^2-4*M`j'^2*n3*q12*q23^2*q33^2+2*M`j'^2*n4*q12*q23^2*q33^2+18*q12^2*q23^2*q33^2-16*n1*q12^2*q23^2*q33^2+4*n2*q12^2*q23^2*q33^2-18*n3*q12^2*q23^2*q33^2-20*n4*q12^2*q23^2*q33^2+20*q12*q13*q23^2*q33^2+4*n1*q12*q13*q23^2*q33^2-12*n2*q12*q13*q23^2*q33^2+8*n3*q12*q13*q23^2*q33^2+6*q12*q23^3*q33^2-4*n1*q12*q23^3*q33^2-2*n3*q12*q23^3*q33^2-4*n4*q12*q23^3*q33^2+24*M`j'^2*q12^2*q33^3+8*M`j'^2*n1*q12^2*q33^3-16*M`j'^2*n2*q12^2*q33^3+8*M`j'^2*n3*q12^2*q33^3-4*q12^3*q33^3-8*n1*q12^3*q33^3+8*n2*q12^3*q33^3-12*n3*q12^3*q33^3-8*n4*q12^3*q33^3-4*M`j'^2*q12*q13*q33^3-4*M`j'^2*n1*q12*q13*q33^3+4*M`j'^2*n2*q12*q13*q33^3-20*q12^2*q13*q33^3-4*n1*q12^2*q13*q33^3+12*n2*q12^2*q13*q33^3-8*n3*q12^2*q13*q33^3+5*q12*q13^2*q33^3+6*n1*q12*q13^2*q33^3-6*n2*q12*q13^2*q33^3+3*n3*q12*q13^2*q33^3+2*n4*q12*q13^2*q33^3+4*M`j'^2*q12*q23*q33^3+4*M`j'^2*n1*q12*q23*q33^3-4*M`j'^2*n2*q12*q23*q33^3-8*q12^2*q23*q33^3-12*n1*q12^2*q23*q33^3+12*n2*q12^2*q23*q33^3-12*n3*q12^2*q23*q33^3-8*n4*q12^2*q23*q33^3+6*q12*q13*q23*q33^3+2*n1*q12*q13*q23*q33^3-4*n2*q12*q13*q23*q33^3+2*n3*q12*q13*q23*q33^3+q12*q23^2*q33^3-4*n1*q12*q23^2*q33^3+2*n2*q12*q23^2*q33^3-n3*q12*q23^2*q33^3-2*n4*q12*q23^2*q33^3-6*q12^2*q33^4-2*n1*q12^2*q33^4+4*n2*q12^2*q33^4-2*n3*q12^2*q33^4+q12*q13*q33^4+n1*q12*q13*q33^4-n2*q12*q13*q33^4-q12*q23*q33^4-n1*q12*q23*q33^4+n2*q12*q23*q33^4,8*M`j'^2*q12*q13^4-8*M`j'^2*n2*q12*q13^4+8*M`j'^2*q13^5-8*M`j'^2*n2*q13^5+32*M`j'^2*q12*q13^3*q23-32*M`j'^2*n2*q12*q13^3*q23+40*M`j'^2*q13^4*q23-40*M`j'^2*n2*q13^4*q23+48*M`j'^2*q12*q13^2*q23^2-48*M`j'^2*n2*q12*q13^2*q23^2+80*M`j'^2*q13^3*q23^2-80*M`j'^2*n2*q13^3*q23^2+32*M`j'^2*q12*q13*q23^3-32*M`j'^2*n2*q12*q13*q23^3+80*M`j'^2*q13^2*q23^3-80*M`j'^2*n2*q13^2*q23^3+8*M`j'^2*q12*q23^4-8*M`j'^2*n2*q12*q23^4+40*M`j'^2*q13*q23^4-40*M`j'^2*n2*q13*q23^4+8*M`j'^2*q23^5-8*M`j'^2*n2*q23^5-32*M`j'^2*q12^2*q13^2*q33+32*M`j'^2*n2*q12^2*q13^2*q33+8*q12^3*q13^2*q33-8*n2*q12^3*q13^2*q33-32*M`j'^2*q12*q13^3*q33+32*M`j'^2*n2*q12*q13^3*q33+16*q12^2*q13^3*q33-16*n2*q12^2*q13^3*q33+4*M`j'^2*q13^4*q33-4*M`j'^2*n2*q13^4*q33+8*q12*q13^4*q33-8*n2*q12*q13^4*q33-64*M`j'^2*q12^2*q13*q23*q33+64*M`j'^2*n2*q12^2*q13*q23*q33+16*q12^3*q13*q23*q33-16*n2*q12^3*q13*q23*q33-96*M`j'^2*q12*q13^2*q23*q33+96*M`j'^2*n2*q12*q13^2*q23*q33+48*q12^2*q13^2*q23*q33-48*n2*q12^2*q13^2*q23*q33+16*M`j'^2*q13^3*q23*q33-16*M`j'^2*n2*q13^3*q23*q33+32*q12*q13^3*q23*q33-32*n2*q12*q13^3*q23*q33-32*M`j'^2*q12^2*q23^2*q33+32*M`j'^2*n2*q12^2*q23^2*q33+8*q12^3*q23^2*q33-8*n2*q12^3*q23^2*q33-96*M`j'^2*q12*q13*q23^2*q33+96*M`j'^2*n2*q12*q13*q23^2*q33+48*q12^2*q13*q23^2*q33-48*n2*q12^2*q13*q23^2*q33+24*M`j'^2*q13^2*q23^2*q33-24*M`j'^2*n2*q13^2*q23^2*q33+48*q12*q13^2*q23^2*q33-48*n2*q12*q13^2*q23^2*q33-32*M`j'^2*q12*q23^3*q33+32*M`j'^2*n2*q12*q23^3*q33+16*q12^2*q23^3*q33-16*n2*q12^2*q23^3*q33+16*M`j'^2*q13*q23^3*q33-16*M`j'^2*n2*q13*q23^3*q33+32*q12*q13*q23^3*q33-32*n2*q12*q13*q23^3*q33+4*M`j'^2*q23^4*q33-4*M`j'^2*n2*q23^4*q33+8*q12*q23^4*q33-8*n2*q12*q23^4*q33+32*M`j'^2*q12^3*q33^2-32*M`j'^2*n2*q12^3*q33^2-16*q12^4*q33^2+16*n2*q12^4*q33^2+32*M`j'^2*q12^2*q13*q33^2-32*M`j'^2*n2*q12^2*q13*q33^2-32*q12^3*q13*q33^2+32*n2*q12^3*q13*q33^2-16*M`j'^2*q12*q13^2*q33^2+16*M`j'^2*n2*q12*q13^2*q33^2-8*q12^2*q13^2*q33^2+8*n2*q12^2*q13^2*q33^2+8*q12*q13^3*q33^2-8*n2*q12*q13^3*q33^2+32*M`j'^2*q12^2*q23*q33^2-32*M`j'^2*n2*q12^2*q23*q33^2-32*q12^3*q23*q33^2+32*n2*q12^3*q23*q33^2-32*M`j'^2*q12*q13*q23*q33^2+32*M`j'^2*n2*q12*q13*q23*q33^2-16*q12^2*q13*q23*q33^2+16*n2*q12^2*q13*q23*q33^2+24*q12*q13^2*q23*q33^2-24*n2*q12*q13^2*q23*q33^2-16*M`j'^2*q12*q23^2*q33^2+16*M`j'^2*n2*q12*q23^2*q33^2-8*q12^2*q23^2*q33^2+8*n2*q12^2*q23^2*q33^2+24*q12*q13*q23^2*q33^2-24*n2*q12*q13*q23^2*q33^2+8*q12*q23^3*q33^2-8*n2*q12*q23^3*q33^2+16*M`j'^2*q12^2*q33^3-16*M`j'^2*n2*q12^2*q33^3-16*q12^3*q33^3+16*n2*q12^3*q33^3-16*q12^2*q13*q33^3+16*n2*q12^2*q13*q33^3+2*q12*q13^2*q33^3-2*n2*q12*q13^2*q33^3-16*q12^2*q23*q33^3+16*n2*q12^2*q23*q33^3+4*q12*q13*q23*q33^3-4*n2*q12*q13*q23*q33^3+2*q12*q23^2*q33^3-2*n2*q12*q23^2*q33^3-4*q12^2*q33^4+4*n2*q12^2*q33^4))+mbox1l(-1+n1,-1+n2,2+n3,n4)*prf(-8*M`j'^2*q12*q13^4-8*M`j'^2*n3*q12*q13^4-24*M`j'^2*q12*q13^3*q23-24*M`j'^2*n3*q12*q13^3*q23-8*M`j'^2*q13^4*q23-8*M`j'^2*n3*q13^4*q23-24*M`j'^2*q12*q13^2*q23^2-24*M`j'^2*n3*q12*q13^2*q23^2-24*M`j'^2*q13^3*q23^2-24*M`j'^2*n3*q13^3*q23^2-8*M`j'^2*q12*q13*q23^3-8*M`j'^2*n3*q12*q13*q23^3-24*M`j'^2*q13^2*q23^3-24*M`j'^2*n3*q13^2*q23^3-8*M`j'^2*q13*q23^4-8*M`j'^2*n3*q13*q23^4-8*M`j'^2*q12^3*q13*q33-8*M`j'^2*n3*q12^3*q13*q33+8*q12^4*q13*q33+8*n3*q12^4*q13*q33-4*M`j'^2*q12^2*q13^2*q33-4*M`j'^2*n3*q12^2*q13^2*q33+20*q12^3*q13^2*q33+20*n3*q12^3*q13^2*q33-20*M`j'^2*q12*q13^3*q33-20*M`j'^2*n3*q12*q13^3*q33+20*q12^2*q13^3*q33+20*n3*q12^2*q13^3*q33+8*q12*q13^4*q33+8*n3*q12*q13^4*q33+8*M`j'^2*q12^3*q23*q33+8*M`j'^2*n3*q12^3*q23*q33+32*M`j'^2*q12^2*q13*q23*q33+32*M`j'^2*n3*q12^2*q13*q23*q33+12*q12^3*q13*q23*q33+12*n3*q12^3*q13*q23*q33+4*M`j'^2*q12*q13^2*q23*q33+4*M`j'^2*n3*q12*q13^2*q23*q33+20*q12^2*q13^2*q23*q33+20*n3*q12^2*q13^2*q23*q33-4*M`j'^2*q13^3*q23*q33-4*M`j'^2*n3*q13^3*q23*q33+12*q12*q13^3*q23*q33+12*n3*q12*q13^3*q23*q33+20*M`j'^2*q12^2*q23^2*q33+20*M`j'^2*n3*q12^2*q23^2*q33+36*M`j'^2*q12*q13*q23^2*q33+36*M`j'^2*n3*q12*q13*q23^2*q33-8*M`j'^2*q13^2*q23^2*q33-8*M`j'^2*n3*q13^2*q23^2*q33+12*M`j'^2*q12*q23^3*q33+12*M`j'^2*n3*q12*q23^3*q33-4*M`j'^2*q13*q23^3*q33-4*M`j'^2*n3*q13*q23^3*q33-4*q12*q13*q23^3*q33-4*n3*q12*q13*q23^3*q33-8*M`j'^2*q12^3*q33^2-8*M`j'^2*n3*q12^3*q33^2+4*q12^4*q33^2+4*n3*q12^4*q33^2-4*M`j'^2*q12^2*q13*q33^2-4*M`j'^2*n3*q12^2*q13*q33^2+14*q12^3*q13*q33^2+14*n3*q12^3*q13*q33^2-16*M`j'^2*q12*q13^2*q33^2-16*M`j'^2*n3*q12*q13^2*q33^2+20*q12^2*q13^2*q33^2+20*n3*q12^2*q13^2*q33^2+12*q12*q13^3*q33^2+12*n3*q12*q13^3*q33^2+4*M`j'^2*q12^2*q23*q33^2+4*M`j'^2*n3*q12^2*q23*q33^2+6*q12^3*q23*q33^2+6*n3*q12^3*q23*q33^2+12*M`j'^2*q12*q13*q23*q33^2+12*M`j'^2*n3*q12*q13*q23*q33^2+8*q12^2*q13*q23*q33^2+8*n3*q12^2*q13*q23*q33^2+8*q12*q13^2*q23*q33^2+8*n3*q12*q13^2*q23*q33^2+12*M`j'^2*q12*q23^2*q33^2+12*M`j'^2*n3*q12*q23^2*q33^2-6*q12*q13*q23^2*q33^2-6*n3*q12*q13*q23^2*q33^2-2*q12*q23^3*q33^2-2*n3*q12*q23^3*q33^2+2*q12^3*q33^3+2*n3*q12^3*q33^3-4*M`j'^2*q12*q13*q33^3-4*M`j'^2*n3*q12*q13*q33^3+5*q12^2*q13*q33^3+5*n3*q12^2*q13*q33^3+6*q12*q13^2*q33^3+6*n3*q12*q13^2*q33^3+4*M`j'^2*q12*q23*q33^3+4*M`j'^2*n3*q12*q23*q33^3-q12^2*q23*q33^3-n3*q12^2*q23*q33^3-q12*q13*q23*q33^3-n3*q12*q13*q23*q33^3-3*q12*q23^2*q33^3-3*n3*q12*q23^2*q33^3+q12*q13*q33^4+n3*q12*q13*q33^4-q12*q23*q33^4-n3*q12*q23*q33^4,8*M`j'^2*q12*q13^4-8*M`j'^2*n2*q12*q13^4+8*M`j'^2*q13^5-8*M`j'^2*n2*q13^5+32*M`j'^2*q12*q13^3*q23-32*M`j'^2*n2*q12*q13^3*q23+40*M`j'^2*q13^4*q23-40*M`j'^2*n2*q13^4*q23+48*M`j'^2*q12*q13^2*q23^2-48*M`j'^2*n2*q12*q13^2*q23^2+80*M`j'^2*q13^3*q23^2-80*M`j'^2*n2*q13^3*q23^2+32*M`j'^2*q12*q13*q23^3-32*M`j'^2*n2*q12*q13*q23^3+80*M`j'^2*q13^2*q23^3-80*M`j'^2*n2*q13^2*q23^3+8*M`j'^2*q12*q23^4-8*M`j'^2*n2*q12*q23^4+40*M`j'^2*q13*q23^4-40*M`j'^2*n2*q13*q23^4+8*M`j'^2*q23^5-8*M`j'^2*n2*q23^5-32*M`j'^2*q12^2*q13^2*q33+32*M`j'^2*n2*q12^2*q13^2*q33+8*q12^3*q13^2*q33-8*n2*q12^3*q13^2*q33-32*M`j'^2*q12*q13^3*q33+32*M`j'^2*n2*q12*q13^3*q33+16*q12^2*q13^3*q33-16*n2*q12^2*q13^3*q33+4*M`j'^2*q13^4*q33-4*M`j'^2*n2*q13^4*q33+8*q12*q13^4*q33-8*n2*q12*q13^4*q33-64*M`j'^2*q12^2*q13*q23*q33+64*M`j'^2*n2*q12^2*q13*q23*q33+16*q12^3*q13*q23*q33-16*n2*q12^3*q13*q23*q33-96*M`j'^2*q12*q13^2*q23*q33+96*M`j'^2*n2*q12*q13^2*q23*q33+48*q12^2*q13^2*q23*q33-48*n2*q12^2*q13^2*q23*q33+16*M`j'^2*q13^3*q23*q33-16*M`j'^2*n2*q13^3*q23*q33+32*q12*q13^3*q23*q33-32*n2*q12*q13^3*q23*q33-32*M`j'^2*q12^2*q23^2*q33+32*M`j'^2*n2*q12^2*q23^2*q33+8*q12^3*q23^2*q33-8*n2*q12^3*q23^2*q33-96*M`j'^2*q12*q13*q23^2*q33+96*M`j'^2*n2*q12*q13*q23^2*q33+48*q12^2*q13*q23^2*q33-48*n2*q12^2*q13*q23^2*q33+24*M`j'^2*q13^2*q23^2*q33-24*M`j'^2*n2*q13^2*q23^2*q33+48*q12*q13^2*q23^2*q33-48*n2*q12*q13^2*q23^2*q33-32*M`j'^2*q12*q23^3*q33+32*M`j'^2*n2*q12*q23^3*q33+16*q12^2*q23^3*q33-16*n2*q12^2*q23^3*q33+16*M`j'^2*q13*q23^3*q33-16*M`j'^2*n2*q13*q23^3*q33+32*q12*q13*q23^3*q33-32*n2*q12*q13*q23^3*q33+4*M`j'^2*q23^4*q33-4*M`j'^2*n2*q23^4*q33+8*q12*q23^4*q33-8*n2*q12*q23^4*q33+32*M`j'^2*q12^3*q33^2-32*M`j'^2*n2*q12^3*q33^2-16*q12^4*q33^2+16*n2*q12^4*q33^2+32*M`j'^2*q12^2*q13*q33^2-32*M`j'^2*n2*q12^2*q13*q33^2-32*q12^3*q13*q33^2+32*n2*q12^3*q13*q33^2-16*M`j'^2*q12*q13^2*q33^2+16*M`j'^2*n2*q12*q13^2*q33^2-8*q12^2*q13^2*q33^2+8*n2*q12^2*q13^2*q33^2+8*q12*q13^3*q33^2-8*n2*q12*q13^3*q33^2+32*M`j'^2*q12^2*q23*q33^2-32*M`j'^2*n2*q12^2*q23*q33^2-32*q12^3*q23*q33^2+32*n2*q12^3*q23*q33^2-32*M`j'^2*q12*q13*q23*q33^2+32*M`j'^2*n2*q12*q13*q23*q33^2-16*q12^2*q13*q23*q33^2+16*n2*q12^2*q13*q23*q33^2+24*q12*q13^2*q23*q33^2-24*n2*q12*q13^2*q23*q33^2-16*M`j'^2*q12*q23^2*q33^2+16*M`j'^2*n2*q12*q23^2*q33^2-8*q12^2*q23^2*q33^2+8*n2*q12^2*q23^2*q33^2+24*q12*q13*q23^2*q33^2-24*n2*q12*q13*q23^2*q33^2+8*q12*q23^3*q33^2-8*n2*q12*q23^3*q33^2+16*M`j'^2*q12^2*q33^3-16*M`j'^2*n2*q12^2*q33^3-16*q12^3*q33^3+16*n2*q12^3*q33^3-16*q12^2*q13*q33^3+16*n2*q12^2*q13*q33^3+2*q12*q13^2*q33^3-2*n2*q12*q13^2*q33^3-16*q12^2*q23*q33^3+16*n2*q12^2*q23*q33^3+4*q12*q13*q23*q33^3-4*n2*q12*q13*q23*q33^3+2*q12*q23^2*q33^3-2*n2*q12*q23^2*q33^3-4*q12^2*q33^4+4*n2*q12^2*q33^4)+mbox1l(n1,-2+n2,2+n3,n4)*prf(-8*M`j'^2*q13^5-8*M`j'^2*n3*q13^5-24*M`j'^2*q13^4*q23-24*M`j'^2*n3*q13^4*q23-24*M`j'^2*q13^3*q23^2-24*M`j'^2*n3*q13^3*q23^2-8*M`j'^2*q13^2*q23^3-8*M`j'^2*n3*q13^2*q23^3+16*M`j'^2*q12^2*q13^2*q33+16*M`j'^2*n3*q12^2*q13^2*q33-8*q12^3*q13^2*q33-8*n3*q12^3*q13^2*q33+40*M`j'^2*q12*q13^3*q33+40*M`j'^2*n3*q12*q13^3*q33-20*q12^2*q13^3*q33-20*n3*q12^2*q13^3*q33-4*M`j'^2*q13^4*q33-4*M`j'^2*n3*q13^4*q33-12*q12*q13^4*q33-12*n3*q12*q13^4*q33+48*M`j'^2*q12*q13^2*q23*q33+48*M`j'^2*n3*q12*q13^2*q23*q33-20*q12^2*q13^2*q23*q33-20*n3*q12^2*q13^2*q23*q33-8*M`j'^2*q13^3*q23*q33-8*M`j'^2*n3*q13^3*q23*q33-24*q12*q13^3*q23*q33-24*n3*q12*q13^3*q23*q33+8*M`j'^2*q12*q13*q23^2*q33+8*M`j'^2*n3*q12*q13*q23^2*q33-4*M`j'^2*q13^2*q23^2*q33-4*M`j'^2*n3*q13^2*q23^2*q33-12*q12*q13^2*q23^2*q33-12*n3*q12*q13^2*q23^2*q33-8*M`j'^2*q12^3*q33^2-8*M`j'^2*n3*q12^3*q33^2-16*M`j'^2*q12^2*q13*q33^2-16*M`j'^2*n3*q12^2*q13*q33^2+4*q12^3*q13*q33^2+4*n3*q12^3*q13*q33^2+26*M`j'^2*q12*q13^2*q33^2+26*M`j'^2*n3*q12*q13^2*q33^2-10*q12^2*q13^2*q33^2-10*n3*q12^2*q13^2*q33^2-16*q12*q13^3*q33^2-16*n3*q12*q13^3*q33^2-16*M`j'^2*q12^2*q23*q33^2-16*M`j'^2*n3*q12^2*q23*q33^2+4*M`j'^2*q12*q13*q23*q33^2+4*M`j'^2*n3*q12*q13*q23*q33^2+2*q12^2*q13*q23*q33^2+2*n3*q12^2*q13*q23*q33^2-18*q12*q13^2*q23*q33^2-18*n3*q12*q13^2*q23*q33^2-6*M`j'^2*q12*q23^2*q33^2-6*M`j'^2*n3*q12*q23^2*q33^2-2*q12*q13*q23^2*q33^2-2*n3*q12*q13*q23^2*q33^2-8*M`j'^2*q12^2*q33^3-8*M`j'^2*n3*q12^2*q33^3+4*q12^3*q33^3+4*n3*q12^3*q33^3+4*M`j'^2*q12*q13*q33^3+4*M`j'^2*n3*q12*q13*q33^3+4*q12^2*q13*q33^3+4*n3*q12^2*q13*q33^3-7*q12*q13^2*q33^3-7*n3*q12*q13^2*q33^3-4*M`j'^2*q12*q23*q33^3-4*M`j'^2*n3*q12*q23*q33^3+6*q12^2*q23*q33^3+6*n3*q12^2*q23*q33^3-q12*q13*q23*q33^3-n3*q12*q13*q23*q33^3+2*q12*q23^2*q33^3+2*n3*q12*q23^2*q33^3+2*q12^2*q33^4+2*n3*q12^2*q33^4-q12*q13*q33^4-n3*q12*q13*q33^4+q12*q23*q33^4+n3*q12*q23*q33^4,8*M`j'^2*q12*q13^4-8*M`j'^2*n2*q12*q13^4+8*M`j'^2*q13^5-8*M`j'^2*n2*q13^5+32*M`j'^2*q12*q13^3*q23-32*M`j'^2*n2*q12*q13^3*q23+40*M`j'^2*q13^4*q23-40*M`j'^2*n2*q13^4*q23+48*M`j'^2*q12*q13^2*q23^2-48*M`j'^2*n2*q12*q13^2*q23^2+80*M`j'^2*q13^3*q23^2-80*M`j'^2*n2*q13^3*q23^2+32*M`j'^2*q12*q13*q23^3-32*M`j'^2*n2*q12*q13*q23^3+80*M`j'^2*q13^2*q23^3-80*M`j'^2*n2*q13^2*q23^3+8*M`j'^2*q12*q23^4-8*M`j'^2*n2*q12*q23^4+40*M`j'^2*q13*q23^4-40*M`j'^2*n2*q13*q23^4+8*M`j'^2*q23^5-8*M`j'^2*n2*q23^5-32*M`j'^2*q12^2*q13^2*q33+32*M`j'^2*n2*q12^2*q13^2*q33+8*q12^3*q13^2*q33-8*n2*q12^3*q13^2*q33-32*M`j'^2*q12*q13^3*q33+32*M`j'^2*n2*q12*q13^3*q33+16*q12^2*q13^3*q33-16*n2*q12^2*q13^3*q33+4*M`j'^2*q13^4*q33-4*M`j'^2*n2*q13^4*q33+8*q12*q13^4*q33-8*n2*q12*q13^4*q33-64*M`j'^2*q12^2*q13*q23*q33+64*M`j'^2*n2*q12^2*q13*q23*q33+16*q12^3*q13*q23*q33-16*n2*q12^3*q13*q23*q33-96*M`j'^2*q12*q13^2*q23*q33+96*M`j'^2*n2*q12*q13^2*q23*q33+48*q12^2*q13^2*q23*q33-48*n2*q12^2*q13^2*q23*q33+16*M`j'^2*q13^3*q23*q33-16*M`j'^2*n2*q13^3*q23*q33+32*q12*q13^3*q23*q33-32*n2*q12*q13^3*q23*q33-32*M`j'^2*q12^2*q23^2*q33+32*M`j'^2*n2*q12^2*q23^2*q33+8*q12^3*q23^2*q33-8*n2*q12^3*q23^2*q33-96*M`j'^2*q12*q13*q23^2*q33+96*M`j'^2*n2*q12*q13*q23^2*q33+48*q12^2*q13*q23^2*q33-48*n2*q12^2*q13*q23^2*q33+24*M`j'^2*q13^2*q23^2*q33-24*M`j'^2*n2*q13^2*q23^2*q33+48*q12*q13^2*q23^2*q33-48*n2*q12*q13^2*q23^2*q33-32*M`j'^2*q12*q23^3*q33+32*M`j'^2*n2*q12*q23^3*q33+16*q12^2*q23^3*q33-16*n2*q12^2*q23^3*q33+16*M`j'^2*q13*q23^3*q33-16*M`j'^2*n2*q13*q23^3*q33+32*q12*q13*q23^3*q33-32*n2*q12*q13*q23^3*q33+4*M`j'^2*q23^4*q33-4*M`j'^2*n2*q23^4*q33+8*q12*q23^4*q33-8*n2*q12*q23^4*q33+32*M`j'^2*q12^3*q33^2-32*M`j'^2*n2*q12^3*q33^2-16*q12^4*q33^2+16*n2*q12^4*q33^2+32*M`j'^2*q12^2*q13*q33^2-32*M`j'^2*n2*q12^2*q13*q33^2-32*q12^3*q13*q33^2+32*n2*q12^3*q13*q33^2-16*M`j'^2*q12*q13^2*q33^2+16*M`j'^2*n2*q12*q13^2*q33^2-8*q12^2*q13^2*q33^2+8*n2*q12^2*q13^2*q33^2+8*q12*q13^3*q33^2-8*n2*q12*q13^3*q33^2+32*M`j'^2*q12^2*q23*q33^2-32*M`j'^2*n2*q12^2*q23*q33^2-32*q12^3*q23*q33^2+32*n2*q12^3*q23*q33^2-32*M`j'^2*q12*q13*q23*q33^2+32*M`j'^2*n2*q12*q13*q23*q33^2-16*q12^2*q13*q23*q33^2+16*n2*q12^2*q13*q23*q33^2+24*q12*q13^2*q23*q33^2-24*n2*q12*q13^2*q23*q33^2-16*M`j'^2*q12*q23^2*q33^2+16*M`j'^2*n2*q12*q23^2*q33^2-8*q12^2*q23^2*q33^2+8*n2*q12^2*q23^2*q33^2+24*q12*q13*q23^2*q33^2-24*n2*q12*q13*q23^2*q33^2+8*q12*q23^3*q33^2-8*n2*q12*q23^3*q33^2+16*M`j'^2*q12^2*q33^3-16*M`j'^2*n2*q12^2*q33^3-16*q12^3*q33^3+16*n2*q12^3*q33^3-16*q12^2*q13*q33^3+16*n2*q12^2*q13*q33^3+2*q12*q13^2*q33^3-2*n2*q12*q13^2*q33^3-16*q12^2*q23*q33^3+16*n2*q12^2*q23*q33^3+4*q12*q13*q23*q33^3-4*n2*q12*q13*q23*q33^3+2*q12*q23^2*q33^3-2*n2*q12*q23^2*q33^3-4*q12^2*q33^4+4*n2*q12^2*q33^4);
	Identify,ifmatch->jump mbox1l(n1?{,>1},n2?pos_,n3?neg_,n4?pos_) = mbox1l(-1+n1,-1+n2,1+n3,1+n4)*prf(2*M`j'^2*n4*q12*q13^3+4*M`j'^2*n4*q12*q13^2*q23+2*M`j'^2*n4*q12*q13*q23^2-2*M`j'^2*n4*q12^2*q13*q33+M`j'^2*n4*q12*q13^2*q33-2*M`j'^2*n4*q12^2*q23*q33-M`j'^2*n4*q12*q23^2*q33,-2*M`j'^2*q13^4+2*M`j'^2*n1*q13^4-8*M`j'^2*q13^3*q23+8*M`j'^2*n1*q13^3*q23-12*M`j'^2*q13^2*q23^2+12*M`j'^2*n1*q13^2*q23^2-8*M`j'^2*q13*q23^3+8*M`j'^2*n1*q13*q23^3-2*M`j'^2*q23^4+2*M`j'^2*n1*q23^4+8*M`j'^2*q12*q13^2*q33-8*M`j'^2*n1*q12*q13^2*q33-2*q12^2*q13^2*q33+2*n1*q12^2*q13^2*q33-2*q12*q13^3*q33+2*n1*q12*q13^3*q33+16*M`j'^2*q12*q13*q23*q33-16*M`j'^2*n1*q12*q13*q23*q33-4*q12^2*q13*q23*q33+4*n1*q12^2*q13*q23*q33-6*q12*q13^2*q23*q33+6*n1*q12*q13^2*q23*q33+8*M`j'^2*q12*q23^2*q33-8*M`j'^2*n1*q12*q23^2*q33-2*q12^2*q23^2*q33+2*n1*q12^2*q23^2*q33-6*q12*q13*q23^2*q33+6*n1*q12*q13*q23^2*q33-2*q12*q23^3*q33+2*n1*q12*q23^3*q33-8*M`j'^2*q12^2*q33^2+8*M`j'^2*n1*q12^2*q33^2+4*q12^3*q33^2-4*n1*q12^3*q33^2+4*q12^2*q13*q33^2-4*n1*q12^2*q13*q33^2-q12*q13^2*q33^2+n1*q12*q13^2*q33^2+4*q12^2*q23*q33^2-4*n1*q12^2*q23*q33^2-2*q12*q13*q23*q33^2+2*n1*q12*q13*q23*q33^2-q12*q23^2*q33^2+n1*q12*q23^2*q33^2+2*q12^2*q33^3-2*n1*q12^2*q33^3)+mbox1l(n1,n2,1+n3,-1+n4)*prf(4*M`j'^2*q12*q13^3+6*M`j'^2*q12*q13^2*q23-2*M`j'^2*q12*q23^3-6*M`j'^2*q12^2*q13*q33+2*q12^3*q13*q33+M`j'^2*q12*q13^2*q33+2*q12^2*q13^2*q33+2*M`j'^2*q12^2*q23*q33-2*q12^3*q23*q33-M`j'^2*q12*q23^2*q33-2*q12^2*q23^2*q33+q12^2*q13*q33^2-q12^2*q23*q33^2,2*M`j'^2*q13^4+8*M`j'^2*q13^3*q23+12*M`j'^2*q13^2*q23^2+8*M`j'^2*q13*q23^3+2*M`j'^2*q23^4-8*M`j'^2*q12*q13^2*q33+2*q12^2*q13^2*q33+2*q12*q13^3*q33-16*M`j'^2*q12*q13*q23*q33+4*q12^2*q13*q23*q33+6*q12*q13^2*q23*q33-8*M`j'^2*q12*q23^2*q33+2*q12^2*q23^2*q33+6*q12*q13*q23^2*q33+2*q12*q23^3*q33+8*M`j'^2*q12^2*q33^2-4*q12^3*q33^2-4*q12^2*q13*q33^2+q12*q13^2*q33^2-4*q12^2*q23*q33^2+2*q12*q13*q23*q33^2+q12*q23^2*q33^2-2*q12^2*q33^3)+mbox1l(-1+n1,1+n2,1+n3,-1+n4)*prf(8*M`j'^2*n2*q12^2*q13^2-4*n2*q12^3*q13^2+2*M`j'^2*n2*q12*q13^3-4*n2*q12^2*q13^3+8*M`j'^2*n2*q12^2*q13*q23-4*n2*q12^3*q13*q23+4*M`j'^2*n2*q12*q13^2*q23-8*n2*q12^2*q13^2*q23+2*M`j'^2*n2*q12*q13*q23^2-4*n2*q12^2*q13*q23^2-8*M`j'^2*n2*q12^3*q33+4*n2*q12^4*q33+2*M`j'^2*n2*q12^2*q13*q33+2*n2*q12^3*q13*q33+M`j'^2*n2*q12*q13^2*q33-4*n2*q12^2*q13^2*q33-6*M`j'^2*n2*q12^2*q23*q33+6*n2*q12^3*q23*q33-2*n2*q12^2*q13*q23*q33-M`j'^2*n2*q12*q23^2*q33+2*n2*q12^2*q23^2*q33+2*n2*q12^3*q33^2-n2*q12^2*q13*q33^2+n2*q12^2*q23*q33^2,-2*M`j'^2*q13^4+2*M`j'^2*n1*q13^4-8*M`j'^2*q13^3*q23+8*M`j'^2*n1*q13^3*q23-12*M`j'^2*q13^2*q23^2+12*M`j'^2*n1*q13^2*q23^2-8*M`j'^2*q13*q23^3+8*M`j'^2*n1*q13*q23^3-2*M`j'^2*q23^4+2*M`j'^2*n1*q23^4+8*M`j'^2*q12*q13^2*q33-8*M`j'^2*n1*q12*q13^2*q33-2*q12^2*q13^2*q33+2*n1*q12^2*q13^2*q33-2*q12*q13^3*q33+2*n1*q12*q13^3*q33+16*M`j'^2*q12*q13*q23*q33-16*M`j'^2*n1*q12*q13*q23*q33-4*q12^2*q13*q23*q33+4*n1*q12^2*q13*q23*q33-6*q12*q13^2*q23*q33+6*n1*q12*q13^2*q23*q33+8*M`j'^2*q12*q23^2*q33-8*M`j'^2*n1*q12*q23^2*q33-2*q12^2*q23^2*q33+2*n1*q12^2*q23^2*q33-6*q12*q13*q23^2*q33+6*n1*q12*q13*q23^2*q33-2*q12*q23^3*q33+2*n1*q12*q23^3*q33-8*M`j'^2*q12^2*q33^2+8*M`j'^2*n1*q12^2*q33^2+4*q12^3*q33^2-4*n1*q12^3*q33^2+4*q12^2*q13*q33^2-4*n1*q12^2*q13*q33^2-q12*q13^2*q33^2+n1*q12*q13^2*q33^2+4*q12^2*q23*q33^2-4*n1*q12^2*q23*q33^2-2*q12*q13*q23*q33^2+2*n1*q12*q13*q23*q33^2-q12*q23^2*q33^2+n1*q12*q23^2*q33^2+2*q12^2*q33^3-2*n1*q12^2*q33^3)+mbox1l(-1+n1,n2,2+n3,-1+n4)*prf(4*M`j'^2*q12^2*q13^2+4*M`j'^2*n3*q12^2*q13^2-4*q12^3*q13^2-4*n3*q12^3*q13^2+4*M`j'^2*q12*q13^3+4*M`j'^2*n3*q12*q13^3-4*q12^2*q13^3-4*n3*q12^2*q13^3-4*q12^3*q13*q23-4*n3*q12^3*q13*q23+4*M`j'^2*q12*q13^2*q23+4*M`j'^2*n3*q12*q13^2*q23-8*q12^2*q13^2*q23-8*n3*q12^2*q13^2*q23-4*M`j'^2*q12^2*q23^2-4*M`j'^2*n3*q12^2*q23^2-4*M`j'^2*q12*q13*q23^2-4*M`j'^2*n3*q12*q13*q23^2-4*q12^2*q13*q23^2-4*n3*q12^2*q13*q23^2-4*M`j'^2*q12*q23^3-4*M`j'^2*n3*q12*q23^3-2*q12^3*q13*q33-2*n3*q12^3*q13*q33+2*M`j'^2*q12*q13^2*q33+2*M`j'^2*n3*q12*q13^2*q33-4*q12^2*q13^2*q33-4*n3*q12^2*q13^2*q33-2*q12^3*q23*q33-2*n3*q12^3*q23*q33-6*q12^2*q13*q23*q33-6*n3*q12^2*q13*q23*q33-2*M`j'^2*q12*q23^2*q33-2*M`j'^2*n3*q12*q23^2*q33-2*q12^2*q23^2*q33-2*n3*q12^2*q23^2*q33-q12^2*q13*q33^2-n3*q12^2*q13*q33^2-q12^2*q23*q33^2-n3*q12^2*q23*q33^2,-4*M`j'^2*q13^4+4*M`j'^2*n1*q13^4-16*M`j'^2*q13^3*q23+16*M`j'^2*n1*q13^3*q23-24*M`j'^2*q13^2*q23^2+24*M`j'^2*n1*q13^2*q23^2-16*M`j'^2*q13*q23^3+16*M`j'^2*n1*q13*q23^3-4*M`j'^2*q23^4+4*M`j'^2*n1*q23^4+16*M`j'^2*q12*q13^2*q33-16*M`j'^2*n1*q12*q13^2*q33-4*q12^2*q13^2*q33+4*n1*q12^2*q13^2*q33-4*q12*q13^3*q33+4*n1*q12*q13^3*q33+32*M`j'^2*q12*q13*q23*q33-32*M`j'^2*n1*q12*q13*q23*q33-8*q12^2*q13*q23*q33+8*n1*q12^2*q13*q23*q33-12*q12*q13^2*q23*q33+12*n1*q12*q13^2*q23*q33+16*M`j'^2*q12*q23^2*q33-16*M`j'^2*n1*q12*q23^2*q33-4*q12^2*q23^2*q33+4*n1*q12^2*q23^2*q33-12*q12*q13*q23^2*q33+12*n1*q12*q13*q23^2*q33-4*q12*q23^3*q33+4*n1*q12*q23^3*q33-16*M`j'^2*q12^2*q33^2+16*M`j'^2*n1*q12^2*q33^2+8*q12^3*q33^2-8*n1*q12^3*q33^2+8*q12^2*q13*q33^2-8*n1*q12^2*q13*q33^2-2*q12*q13^2*q33^2+2*n1*q12*q13^2*q33^2+8*q12^2*q23*q33^2-8*n1*q12^2*q23*q33^2-4*q12*q13*q23*q33^2+4*n1*q12*q13*q23*q33^2-2*q12*q23^2*q33^2+2*n1*q12*q23^2*q33^2+4*q12^2*q33^3-4*n1*q12^2*q33^3)+mbox1l(n1,-1+n2,1+n3,n4)*prf(4*M`j'^2*q12*q13^3+4*M`j'^2*q13^4+8*M`j'^2*q12*q13^2*q23+12*M`j'^2*q13^3*q23+4*M`j'^2*q12*q13*q23^2+12*M`j'^2*q13^2*q23^2+4*M`j'^2*q13*q23^3-4*M`j'^2*q12^2*q13*q33-2*M`j'^2*q12*q13^2*q33-4*M`j'^2*q12^2*q23*q33-8*M`j'^2*q12*q13*q23*q33-6*M`j'^2*q12*q23^2*q33+4*M`j'^2*q12*q13*q33^2-2*q12^2*q13*q33^2-2*q12*q13^2*q33^2-4*M`j'^2*q12*q23*q33^2+2*q12^2*q23*q33^2+2*q12*q23^2*q33^2-q12*q13*q33^3+q12*q23*q33^3,4*M`j'^2*q13^4+16*M`j'^2*q13^3*q23+24*M`j'^2*q13^2*q23^2+16*M`j'^2*q13*q23^3+4*M`j'^2*q23^4-16*M`j'^2*q12*q13^2*q33+4*q12^2*q13^2*q33+4*q12*q13^3*q33-32*M`j'^2*q12*q13*q23*q33+8*q12^2*q13*q23*q33+12*q12*q13^2*q23*q33-16*M`j'^2*q12*q23^2*q33+4*q12^2*q23^2*q33+12*q12*q13*q23^2*q33+4*q12*q23^3*q33+16*M`j'^2*q12^2*q33^2-8*q12^3*q33^2-8*q12^2*q13*q33^2+2*q12*q13^2*q33^2-8*q12^2*q23*q33^2+4*q12*q13*q23*q33^2+2*q12*q23^2*q33^2-4*q12^2*q33^3)+mbox1l(-2+n1,1+n2,1+n3,n4)*prf(-16*M`j'^2*n2*q12^2*q13^2+8*n2*q12^3*q13^2-16*M`j'^2*n2*q12*q13^3+16*n2*q12^2*q13^3+8*n2*q12*q13^4-16*M`j'^2*n2*q12^2*q13*q23+8*n2*q12^3*q13*q23-32*M`j'^2*n2*q12*q13^2*q23+32*n2*q12^2*q13^2*q23+24*n2*q12*q13^3*q23-16*M`j'^2*n2*q12*q13*q23^2+16*n2*q12^2*q13*q23^2+24*n2*q12*q13^2*q23^2+8*n2*q12*q13*q23^3+16*M`j'^2*n2*q12^3*q33-8*n2*q12^4*q33+8*M`j'^2*n2*q12^2*q13*q33-12*n2*q12^3*q13*q33-16*M`j'^2*n2*q12*q13^2*q33+8*n2*q12^2*q13^2*q33+12*n2*q12*q13^3*q33+24*M`j'^2*n2*q12^2*q23*q33-20*n2*q12^3*q23*q33-8*M`j'^2*n2*q12*q13*q23*q33-8*n2*q12^2*q13*q23*q33+20*n2*q12*q13^2*q23*q33+8*M`j'^2*n2*q12*q23^2*q33-16*n2*q12^2*q23^2*q33+4*n2*q12*q13*q23^2*q33-4*n2*q12*q23^3*q33+8*M`j'^2*n2*q12^2*q33^2-8*n2*q12^3*q33^2-4*M`j'^2*n2*q12*q13*q33^2-4*n2*q12^2*q13*q33^2+6*n2*q12*q13^2*q33^2+4*M`j'^2*n2*q12*q23*q33^2-12*n2*q12^2*q23*q33^2+2*n2*q12*q13*q23*q33^2-4*n2*q12*q23^2*q33^2-2*n2*q12^2*q33^3+n2*q12*q13*q33^3-n2*q12*q23*q33^3,-4*M`j'^2*q13^4+4*M`j'^2*n1*q13^4-16*M`j'^2*q13^3*q23+16*M`j'^2*n1*q13^3*q23-24*M`j'^2*q13^2*q23^2+24*M`j'^2*n1*q13^2*q23^2-16*M`j'^2*q13*q23^3+16*M`j'^2*n1*q13*q23^3-4*M`j'^2*q23^4+4*M`j'^2*n1*q23^4+16*M`j'^2*q12*q13^2*q33-16*M`j'^2*n1*q12*q13^2*q33-4*q12^2*q13^2*q33+4*n1*q12^2*q13^2*q33-4*q12*q13^3*q33+4*n1*q12*q13^3*q33+32*M`j'^2*q12*q13*q23*q33-32*M`j'^2*n1*q12*q13*q23*q33-8*q12^2*q13*q23*q33+8*n1*q12^2*q13*q23*q33-12*q12*q13^2*q23*q33+12*n1*q12*q13^2*q23*q33+16*M`j'^2*q12*q23^2*q33-16*M`j'^2*n1*q12*q23^2*q33-4*q12^2*q23^2*q33+4*n1*q12^2*q23^2*q33-12*q12*q13*q23^2*q33+12*n1*q12*q13*q23^2*q33-4*q12*q23^3*q33+4*n1*q12*q23^3*q33-16*M`j'^2*q12^2*q33^2+16*M`j'^2*n1*q12^2*q33^2+8*q12^3*q33^2-8*n1*q12^3*q33^2+8*q12^2*q13*q33^2-8*n1*q12^2*q13*q33^2-2*q12*q13^2*q33^2+2*n1*q12*q13^2*q33^2+8*q12^2*q23*q33^2-8*n1*q12^2*q23*q33^2-4*q12*q13*q23*q33^2+4*n1*q12*q13*q23*q33^2-2*q12*q23^2*q33^2+2*n1*q12*q23^2*q33^2+4*q12^2*q33^3-4*n1*q12^2*q33^3)+mbox1l(-1+n1,n2,1+n3,n4)*(tmpprf(ep,1)*prf(8*q12^2*q13^3+8*q12*q13^4+16*q12^2*q13^2*q23+24*q12*q13^3*q23+8*q12^2*q13*q23^2+24*q12*q13^2*q23^2+8*q12*q13*q23^3-8*q12^3*q13*q33-4*q12^2*q13^2*q33+8*q12*q13^3*q33-8*q12^3*q23*q33-16*q12^2*q13*q23*q33+12*q12*q13^2*q23*q33-12*q12^2*q23^2*q33-4*q12*q23^3*q33-4*q12^2*q13*q33^2+2*q12*q13^2*q33^2-4*q12^2*q23*q33^2-2*q12*q23^2*q33^2,-4*M`j'^2*q13^4+4*M`j'^2*n1*q13^4-16*M`j'^2*q13^3*q23+16*M`j'^2*n1*q13^3*q23-24*M`j'^2*q13^2*q23^2+24*M`j'^2*n1*q13^2*q23^2-16*M`j'^2*q13*q23^3+16*M`j'^2*n1*q13*q23^3-4*M`j'^2*q23^4+4*M`j'^2*n1*q23^4+16*M`j'^2*q12*q13^2*q33-16*M`j'^2*n1*q12*q13^2*q33-4*q12^2*q13^2*q33+4*n1*q12^2*q13^2*q33-4*q12*q13^3*q33+4*n1*q12*q13^3*q33+32*M`j'^2*q12*q13*q23*q33-32*M`j'^2*n1*q12*q13*q23*q33-8*q12^2*q13*q23*q33+8*n1*q12^2*q13*q23*q33-12*q12*q13^2*q23*q33+12*n1*q12*q13^2*q23*q33+16*M`j'^2*q12*q23^2*q33-16*M`j'^2*n1*q12*q23^2*q33-4*q12^2*q23^2*q33+4*n1*q12^2*q23^2*q33-12*q12*q13*q23^2*q33+12*n1*q12*q13*q23^2*q33-4*q12*q23^3*q33+4*n1*q12*q23^3*q33-16*M`j'^2*q12^2*q33^2+16*M`j'^2*n1*q12^2*q33^2+8*q12^3*q33^2-8*n1*q12^3*q33^2+8*q12^2*q13*q33^2-8*n1*q12^2*q13*q33^2-2*q12*q13^2*q33^2+2*n1*q12*q13^2*q33^2+8*q12^2*q23*q33^2-8*n1*q12^2*q23*q33^2-4*q12*q13*q23*q33^2+4*n1*q12*q13*q23*q33^2-2*q12*q23^2*q33^2+2*n1*q12*q23^2*q33^2+4*q12^2*q33^3-4*n1*q12^2*q33^3)+prf(16*M`j'^2*q12*q13^3-12*M`j'^2*n1*q12*q13^3+12*M`j'^2*n2*q12*q13^3+4*M`j'^2*n3*q12*q13^3-4*M`j'^2*n4*q12*q13^3-20*q12^2*q13^3+8*n1*q12^2*q13^3+4*n3*q12^2*q13^3+8*n4*q12^2*q13^3-20*q12*q13^4+8*n1*q12*q13^4+4*n3*q12*q13^4+8*n4*q12*q13^4+24*M`j'^2*q12*q13^2*q23-20*M`j'^2*n1*q12*q13^2*q23+24*M`j'^2*n2*q12*q13^2*q23+4*M`j'^2*n3*q12*q13^2*q23-8*M`j'^2*n4*q12*q13^2*q23-40*q12^2*q13^2*q23+16*n1*q12^2*q13^2*q23+8*n3*q12^2*q13^2*q23+16*n4*q12^2*q13^2*q23-8*M`j'^2*q13^3*q23+4*M`j'^2*n1*q13^3*q23-4*M`j'^2*n3*q13^3*q23-60*q12*q13^3*q23+24*n1*q12*q13^3*q23+12*n3*q12*q13^3*q23+24*n4*q12*q13^3*q23-4*M`j'^2*n1*q12*q13*q23^2+12*M`j'^2*n2*q12*q13*q23^2-4*M`j'^2*n3*q12*q13*q23^2-4*M`j'^2*n4*q12*q13*q23^2-20*q12^2*q13*q23^2+8*n1*q12^2*q13*q23^2+4*n3*q12^2*q13*q23^2+8*n4*q12^2*q13*q23^2-24*M`j'^2*q13^2*q23^2+12*M`j'^2*n1*q13^2*q23^2-12*M`j'^2*n3*q13^2*q23^2-60*q12*q13^2*q23^2+24*n1*q12*q13^2*q23^2+12*n3*q12*q13^2*q23^2+24*n4*q12*q13^2*q23^2-8*M`j'^2*q12*q23^3+4*M`j'^2*n1*q12*q23^3-4*M`j'^2*n3*q12*q23^3-24*M`j'^2*q13*q23^3+12*M`j'^2*n1*q13*q23^3-12*M`j'^2*n3*q13*q23^3-20*q12*q13*q23^3+8*n1*q12*q13*q23^3+4*n3*q12*q13*q23^3+8*n4*q12*q13*q23^3-8*M`j'^2*q23^4+4*M`j'^2*n1*q23^4-4*M`j'^2*n3*q23^4-24*M`j'^2*q12^2*q13*q33+16*M`j'^2*n1*q12^2*q13*q33-12*M`j'^2*n2*q12^2*q13*q33-8*M`j'^2*n3*q12^2*q13*q33+4*M`j'^2*n4*q12^2*q13*q33+28*q12^3*q13*q33-12*n1*q12^3*q13*q33-8*n4*q12^3*q13*q33+20*M`j'^2*q12*q13^2*q33-16*M`j'^2*n1*q12*q13^2*q33+14*M`j'^2*n2*q12*q13^2*q33+4*M`j'^2*n3*q12*q13^2*q33-2*M`j'^2*n4*q12*q13^2*q33+14*q12^2*q13^2*q33-4*n1*q12^2*q13^2*q33-4*n2*q12^2*q13^2*q33+2*n3*q12^2*q13^2*q33-4*n4*q12^2*q13^2*q33-24*q12*q13^3*q33+12*n1*q12*q13^3*q33-4*n2*q12*q13^3*q33+4*n3*q12*q13^3*q33+8*n4*q12*q13^3*q33+8*M`j'^2*q12^2*q23*q33-12*M`j'^2*n2*q12^2*q23*q33+8*M`j'^2*n3*q12^2*q23*q33+4*M`j'^2*n4*q12^2*q23*q33+12*q12^3*q23*q33-4*n1*q12^3*q23*q33-8*n3*q12^3*q23*q33-8*n4*q12^3*q23*q33+40*M`j'^2*q12*q13*q23*q33-24*M`j'^2*n1*q12*q13*q23*q33+8*M`j'^2*n2*q12*q13*q23*q33+16*M`j'^2*n3*q12*q13*q23*q33+28*q12^2*q13*q23*q33-8*n1*q12^2*q13*q23*q33-4*n2*q12^2*q13*q23*q33-12*n3*q12^2*q13*q23*q33-16*n4*q12^2*q13*q23*q33-46*q12*q13^2*q23*q33+24*n1*q12*q13^2*q23*q33-8*n2*q12*q13^2*q23*q33+2*n3*q12*q13^2*q23*q33+12*n4*q12*q13^2*q23*q33+20*M`j'^2*q12*q23^2*q33-8*M`j'^2*n1*q12*q23^2*q33-6*M`j'^2*n2*q12*q23^2*q33+12*M`j'^2*n3*q12*q23^2*q33+2*M`j'^2*n4*q12*q23^2*q33+14*q12^2*q23^2*q33-4*n1*q12^2*q23^2*q33-14*n3*q12^2*q23^2*q33-12*n4*q12^2*q23^2*q33-20*q12*q13*q23^2*q33+12*n1*q12*q13*q23^2*q33-4*n2*q12*q13*q23^2*q33-8*n3*q12*q13*q23^2*q33+2*q12*q23^3*q33-6*n3*q12*q23^3*q33-4*n4*q12*q23^3*q33-24*M`j'^2*q12^2*q33^2+16*M`j'^2*n1*q12^2*q33^2-8*M`j'^2*n2*q12^2*q33^2-8*M`j'^2*n3*q12^2*q33^2+12*q12^3*q33^2-8*n1*q12^3*q33^2+4*n2*q12^3*q33^2+4*n3*q12^3*q33^2+4*M`j'^2*q12*q13*q33^2-4*M`j'^2*n1*q12*q13*q33^2+4*M`j'^2*n2*q12*q13*q33^2+24*q12^2*q13*q33^2-12*n1*q12^2*q13*q33^2+2*n2*q12^2*q13*q33^2+4*n3*q12^2*q13*q33^2-4*n4*q12^2*q13*q33^2-9*q12*q13^2*q33^2+6*n1*q12*q13^2*q33^2-4*n2*q12*q13^2*q33^2+n3*q12*q13^2*q33^2+2*n4*q12*q13^2*q33^2-4*M`j'^2*q12*q23*q33^2+4*M`j'^2*n1*q12*q23*q33^2-4*M`j'^2*n2*q12*q23*q33^2+20*q12^2*q23*q33^2-12*n1*q12^2*q23*q33^2+6*n2*q12^2*q23*q33^2-4*n4*q12^2*q23*q33^2-6*q12*q13*q23*q33^2+4*n1*q12*q13*q23*q33^2-2*n2*q12*q13*q23*q33^2-2*n3*q12*q13*q23*q33^2+3*q12*q23^2*q33^2-2*n1*q12*q23^2*q33^2+2*n2*q12*q23^2*q33^2-3*n3*q12*q23^2*q33^2-2*n4*q12*q23^2*q33^2+6*q12^2*q33^3-4*n1*q12^2*q33^3+2*n2*q12^2*q33^3+2*n3*q12^2*q33^3-q12*q13*q33^3+n1*q12*q13*q33^3-n2*q12*q13*q33^3+q12*q23*q33^3-n1*q12*q23*q33^3+n2*q12*q23*q33^3,-4*M`j'^2*q13^4+4*M`j'^2*n1*q13^4-16*M`j'^2*q13^3*q23+16*M`j'^2*n1*q13^3*q23-24*M`j'^2*q13^2*q23^2+24*M`j'^2*n1*q13^2*q23^2-16*M`j'^2*q13*q23^3+16*M`j'^2*n1*q13*q23^3-4*M`j'^2*q23^4+4*M`j'^2*n1*q23^4+16*M`j'^2*q12*q13^2*q33-16*M`j'^2*n1*q12*q13^2*q33-4*q12^2*q13^2*q33+4*n1*q12^2*q13^2*q33-4*q12*q13^3*q33+4*n1*q12*q13^3*q33+32*M`j'^2*q12*q13*q23*q33-32*M`j'^2*n1*q12*q13*q23*q33-8*q12^2*q13*q23*q33+8*n1*q12^2*q13*q23*q33-12*q12*q13^2*q23*q33+12*n1*q12*q13^2*q23*q33+16*M`j'^2*q12*q23^2*q33-16*M`j'^2*n1*q12*q23^2*q33-4*q12^2*q23^2*q33+4*n1*q12^2*q23^2*q33-12*q12*q13*q23^2*q33+12*n1*q12*q13*q23^2*q33-4*q12*q23^3*q33+4*n1*q12*q23^3*q33-16*M`j'^2*q12^2*q33^2+16*M`j'^2*n1*q12^2*q33^2+8*q12^3*q33^2-8*n1*q12^3*q33^2+8*q12^2*q13*q33^2-8*n1*q12^2*q13*q33^2-2*q12*q13^2*q33^2+2*n1*q12*q13^2*q33^2+8*q12^2*q23*q33^2-8*n1*q12^2*q23*q33^2-4*q12*q13*q23*q33^2+4*n1*q12*q13*q23*q33^2-2*q12*q23^2*q33^2+2*n1*q12*q23^2*q33^2+4*q12^2*q33^3-4*n1*q12^2*q33^3))+mbox1l(-2+n1,n2,2+n3,n4)*prf(-4*M`j'^2*q12^2*q13^2-4*M`j'^2*n3*q12^2*q13^2+4*q12^3*q13^2+4*n3*q12^3*q13^2-16*M`j'^2*q12*q13^3-16*M`j'^2*n3*q12*q13^3+12*q12^2*q13^3+12*n3*q12^2*q13^3+8*q12*q13^4+8*n3*q12*q13^4+4*q12^3*q13*q23+4*n3*q12^3*q13*q23-16*M`j'^2*q12*q13^2*q23-16*M`j'^2*n3*q12*q13^2*q23+20*q12^2*q13^2*q23+20*n3*q12^2*q13^2*q23+20*q12*q13^3*q23+20*n3*q12*q13^3*q23+4*M`j'^2*q12^2*q23^2+4*M`j'^2*n3*q12^2*q23^2+8*M`j'^2*q12*q13*q23^2+8*M`j'^2*n3*q12*q13*q23^2+8*q12^2*q13*q23^2+8*n3*q12^2*q13*q23^2+4*M`j'^2*q13^2*q23^2+4*M`j'^2*n3*q13^2*q23^2+16*q12*q13^2*q23^2+16*n3*q12*q13^2*q23^2+8*M`j'^2*q12*q23^3+8*M`j'^2*n3*q12*q23^3+8*M`j'^2*q13*q23^3+8*M`j'^2*n3*q13*q23^3+4*q12*q13*q23^3+4*n3*q12*q13*q23^3+4*M`j'^2*q23^4+4*M`j'^2*n3*q23^4+12*M`j'^2*q12^2*q13*q33+12*M`j'^2*n3*q12^2*q13*q33-6*q12^3*q13*q33-6*n3*q12^3*q13*q33-16*M`j'^2*q12*q13^2*q33-16*M`j'^2*n3*q12*q13^2*q33+4*q12^2*q13^2*q33+4*n3*q12^2*q13^2*q33+12*q12*q13^3*q33+12*n3*q12*q13^3*q33-4*M`j'^2*q12^2*q23*q33-4*M`j'^2*n3*q12^2*q23*q33+2*q12^3*q23*q33+2*n3*q12^3*q23*q33-4*M`j'^2*q12*q13*q23*q33-4*M`j'^2*n3*q12*q13*q23*q33+16*q12*q13^2*q23*q33+16*n3*q12*q13^2*q23*q33-4*M`j'^2*q12*q23^2*q33-4*M`j'^2*n3*q12*q23^2*q33+4*q12^2*q23^2*q33+4*n3*q12^2*q23^2*q33+6*q12*q13*q23^2*q33+6*n3*q12*q13*q23^2*q33+2*q12*q23^3*q33+2*n3*q12*q23^3*q33+8*M`j'^2*q12^2*q33^2+8*M`j'^2*n3*q12^2*q33^2-4*q12^3*q33^2-4*n3*q12^3*q33^2-4*M`j'^2*q12*q13*q33^2-4*M`j'^2*n3*q12*q13*q33^2-5*q12^2*q13*q33^2-5*n3*q12^2*q13*q33^2+6*q12*q13^2*q33^2+6*n3*q12*q13^2*q33^2+4*M`j'^2*q12*q23*q33^2+4*M`j'^2*n3*q12*q23*q33^2-5*q12^2*q23*q33^2-5*n3*q12^2*q23*q33^2+q12*q13*q23*q33^2+n3*q12*q13*q23*q33^2-q12*q23^2*q33^2-n3*q12*q23^2*q33^2-2*q12^2*q33^3-2*n3*q12^2*q33^3+q12*q13*q33^3+n3*q12*q13*q33^3-q12*q23*q33^3-n3*q12*q23*q33^3,-4*M`j'^2*q13^4+4*M`j'^2*n1*q13^4-16*M`j'^2*q13^3*q23+16*M`j'^2*n1*q13^3*q23-24*M`j'^2*q13^2*q23^2+24*M`j'^2*n1*q13^2*q23^2-16*M`j'^2*q13*q23^3+16*M`j'^2*n1*q13*q23^3-4*M`j'^2*q23^4+4*M`j'^2*n1*q23^4+16*M`j'^2*q12*q13^2*q33-16*M`j'^2*n1*q12*q13^2*q33-4*q12^2*q13^2*q33+4*n1*q12^2*q13^2*q33-4*q12*q13^3*q33+4*n1*q12*q13^3*q33+32*M`j'^2*q12*q13*q23*q33-32*M`j'^2*n1*q12*q13*q23*q33-8*q12^2*q13*q23*q33+8*n1*q12^2*q13*q23*q33-12*q12*q13^2*q23*q33+12*n1*q12*q13^2*q23*q33+16*M`j'^2*q12*q23^2*q33-16*M`j'^2*n1*q12*q23^2*q33-4*q12^2*q23^2*q33+4*n1*q12^2*q23^2*q33-12*q12*q13*q23^2*q33+12*n1*q12*q13*q23^2*q33-4*q12*q23^3*q33+4*n1*q12*q23^3*q33-16*M`j'^2*q12^2*q33^2+16*M`j'^2*n1*q12^2*q33^2+8*q12^3*q33^2-8*n1*q12^3*q33^2+8*q12^2*q13*q33^2-8*n1*q12^2*q13*q33^2-2*q12*q13^2*q33^2+2*n1*q12*q13^2*q33^2+8*q12^2*q23*q33^2-8*n1*q12^2*q23*q33^2-4*q12*q13*q23*q33^2+4*n1*q12*q13*q23*q33^2-2*q12*q23^2*q33^2+2*n1*q12*q23^2*q33^2+4*q12^2*q33^3-4*n1*q12^2*q33^3)+mbox1l(-1+n1,-1+n2,2+n3,n4)*prf(8*M`j'^2*q12*q13^3+8*M`j'^2*n3*q12*q13^3-4*q12^2*q13^3-4*n3*q12^2*q13^3-4*q12*q13^4-4*n3*q12*q13^4+8*M`j'^2*q12*q13^2*q23+8*M`j'^2*n3*q12*q13^2*q23-4*q12^2*q13^2*q23-4*n3*q12^2*q13^2*q23+4*M`j'^2*q13^3*q23+4*M`j'^2*n3*q13^3*q23-8*q12*q13^3*q23-8*n3*q12*q13^3*q23+8*M`j'^2*q13^2*q23^2+8*M`j'^2*n3*q13^2*q23^2-4*q12*q13^2*q23^2-4*n3*q12*q13^2*q23^2+4*M`j'^2*q13*q23^3+4*M`j'^2*n3*q13*q23^3-4*M`j'^2*q12^2*q13*q33-4*M`j'^2*n3*q12^2*q13*q33+10*M`j'^2*q12*q13^2*q33+10*M`j'^2*n3*q12*q13^2*q33-6*q12^2*q13^2*q33-6*n3*q12^2*q13^2*q33-8*q12*q13^3*q33-8*n3*q12*q13^3*q33-4*M`j'^2*q12^2*q23*q33-4*M`j'^2*n3*q12^2*q23*q33-12*M`j'^2*q12*q13*q23*q33-12*M`j'^2*n3*q12*q13*q23*q33+2*q12^2*q13*q23*q33+2*n3*q12^2*q13*q23*q33-6*q12*q13^2*q23*q33-6*n3*q12*q13^2*q23*q33-6*M`j'^2*q12*q23^2*q33-6*M`j'^2*n3*q12*q23^2*q33+2*q12*q13*q23^2*q33+2*n3*q12*q13*q23^2*q33+4*M`j'^2*q12*q13*q33^2+4*M`j'^2*n3*q12*q13*q33^2-2*q12^2*q13*q33^2-2*n3*q12^2*q13*q33^2-5*q12*q13^2*q33^2-5*n3*q12*q13^2*q33^2-4*M`j'^2*q12*q23*q33^2-4*M`j'^2*n3*q12*q23*q33^2+2*q12^2*q23*q33^2+2*n3*q12^2*q23*q33^2+q12*q13*q23*q33^2+n3*q12*q13*q23*q33^2+2*q12*q23^2*q33^2+2*n3*q12*q23^2*q33^2-q12*q13*q33^3-n3*q12*q13*q33^3+q12*q23*q33^3+n3*q12*q23*q33^3,-4*M`j'^2*q13^4+4*M`j'^2*n1*q13^4-16*M`j'^2*q13^3*q23+16*M`j'^2*n1*q13^3*q23-24*M`j'^2*q13^2*q23^2+24*M`j'^2*n1*q13^2*q23^2-16*M`j'^2*q13*q23^3+16*M`j'^2*n1*q13*q23^3-4*M`j'^2*q23^4+4*M`j'^2*n1*q23^4+16*M`j'^2*q12*q13^2*q33-16*M`j'^2*n1*q12*q13^2*q33-4*q12^2*q13^2*q33+4*n1*q12^2*q13^2*q33-4*q12*q13^3*q33+4*n1*q12*q13^3*q33+32*M`j'^2*q12*q13*q23*q33-32*M`j'^2*n1*q12*q13*q23*q33-8*q12^2*q13*q23*q33+8*n1*q12^2*q13*q23*q33-12*q12*q13^2*q23*q33+12*n1*q12*q13^2*q23*q33+16*M`j'^2*q12*q23^2*q33-16*M`j'^2*n1*q12*q23^2*q33-4*q12^2*q23^2*q33+4*n1*q12^2*q23^2*q33-12*q12*q13*q23^2*q33+12*n1*q12*q13*q23^2*q33-4*q12*q23^3*q33+4*n1*q12*q23^3*q33-16*M`j'^2*q12^2*q33^2+16*M`j'^2*n1*q12^2*q33^2+8*q12^3*q33^2-8*n1*q12^3*q33^2+8*q12^2*q13*q33^2-8*n1*q12^2*q13*q33^2-2*q12*q13^2*q33^2+2*n1*q12*q13^2*q33^2+8*q12^2*q23*q33^2-8*n1*q12^2*q23*q33^2-4*q12*q13*q23*q33^2+4*n1*q12*q13*q23*q33^2-2*q12*q23^2*q33^2+2*n1*q12*q23^2*q33^2+4*q12^2*q33^3-4*n1*q12^2*q33^3)+mbox1l(-1+n1,n2,2+n3,n4)*prf(-8*q12^3*q13^3-8*n3*q12^3*q13^3-8*q12^2*q13^4-8*n3*q12^2*q13^4-16*M`j'^2*q12^2*q13^2*q23-16*M`j'^2*n3*q12^2*q13^2*q23-8*q12^3*q13^2*q23-8*n3*q12^3*q13^2*q23-16*M`j'^2*q12*q13^3*q23-16*M`j'^2*n3*q12*q13^3*q23-16*q12^2*q13^3*q23-16*n3*q12^2*q13^3*q23-16*M`j'^2*q12^2*q13*q23^2-16*M`j'^2*n3*q12^2*q13*q23^2-32*M`j'^2*q12*q13^2*q23^2-32*M`j'^2*n3*q12*q13^2*q23^2-8*q12^2*q13^2*q23^2-8*n3*q12^2*q13^2*q23^2-16*M`j'^2*q12*q13*q23^3-16*M`j'^2*n3*q12*q13*q23^3+8*M`j'^2*q12^3*q13*q33+8*M`j'^2*n3*q12^3*q13*q33+8*M`j'^2*q12^2*q13^2*q33+8*M`j'^2*n3*q12^2*q13^2*q33-8*q12^3*q13^2*q33-8*n3*q12^3*q13^2*q33-12*q12^2*q13^3*q33-12*n3*q12^2*q13^3*q33+8*M`j'^2*q12^3*q23*q33+8*M`j'^2*n3*q12^3*q23*q33+16*M`j'^2*q12^2*q13*q23*q33+16*M`j'^2*n3*q12^2*q13*q23*q33-8*q12^3*q13*q23*q33-8*n3*q12^3*q13*q23*q33-8*M`j'^2*q12*q13^2*q23*q33-8*M`j'^2*n3*q12*q13^2*q23*q33-20*q12^2*q13^2*q23*q33-20*n3*q12^2*q13^2*q23*q33+8*M`j'^2*q12^2*q23^2*q33+8*M`j'^2*n3*q12^2*q23^2*q33-8*M`j'^2*q12*q13*q23^2*q33-8*M`j'^2*n3*q12*q13*q23^2*q33-8*q12^2*q13*q23^2*q33-8*n3*q12^2*q13*q23^2*q33+4*M`j'^2*q12^2*q13*q33^2+4*M`j'^2*n3*q12^2*q13*q33^2-2*q12^3*q13*q33^2-2*n3*q12^3*q13*q33^2-6*q12^2*q13^2*q33^2-6*n3*q12^2*q13^2*q33^2+4*M`j'^2*q12^2*q23*q33^2+4*M`j'^2*n3*q12^2*q23*q33^2-2*q12^3*q23*q33^2-2*n3*q12^3*q23*q33^2-8*q12^2*q13*q23*q33^2-8*n3*q12^2*q13*q23*q33^2-2*q12^2*q23^2*q33^2-2*n3*q12^2*q23^2*q33^2-q12^2*q13*q33^3-n3*q12^2*q13*q33^3-q12^2*q23*q33^3-n3*q12^2*q23*q33^3,-4*M`j'^2*q13^4+4*M`j'^2*n1*q13^4-16*M`j'^2*q13^3*q23+16*M`j'^2*n1*q13^3*q23-24*M`j'^2*q13^2*q23^2+24*M`j'^2*n1*q13^2*q23^2-16*M`j'^2*q13*q23^3+16*M`j'^2*n1*q13*q23^3-4*M`j'^2*q23^4+4*M`j'^2*n1*q23^4+16*M`j'^2*q12*q13^2*q33-16*M`j'^2*n1*q12*q13^2*q33-4*q12^2*q13^2*q33+4*n1*q12^2*q13^2*q33-4*q12*q13^3*q33+4*n1*q12*q13^3*q33+32*M`j'^2*q12*q13*q23*q33-32*M`j'^2*n1*q12*q13*q23*q33-8*q12^2*q13*q23*q33+8*n1*q12^2*q13*q23*q33-12*q12*q13^2*q23*q33+12*n1*q12*q13^2*q23*q33+16*M`j'^2*q12*q23^2*q33-16*M`j'^2*n1*q12*q23^2*q33-4*q12^2*q23^2*q33+4*n1*q12^2*q23^2*q33-12*q12*q13*q23^2*q33+12*n1*q12*q13*q23^2*q33-4*q12*q23^3*q33+4*n1*q12*q23^3*q33-16*M`j'^2*q12^2*q33^2+16*M`j'^2*n1*q12^2*q33^2+8*q12^3*q33^2-8*n1*q12^3*q33^2+8*q12^2*q13*q33^2-8*n1*q12^2*q13*q33^2-2*q12*q13^2*q33^2+2*n1*q12*q13^2*q33^2+8*q12^2*q23*q33^2-8*n1*q12^2*q23*q33^2-4*q12*q13*q23*q33^2+4*n1*q12*q13*q23*q33^2-2*q12*q23^2*q33^2+2*n1*q12*q23^2*q33^2+4*q12^2*q33^3-4*n1*q12^2*q33^3);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?pos_,n3?neg0_,n4?{,>1}) = mbox1l(n1,n2,1+n3,-2+n4)*prf(-2*M`j'^2*n3*q12+n3*q12^2,-2*M`j'^2*q13^2+2*M`j'^2*n4*q13^2-4*M`j'^2*q13*q23+4*M`j'^2*n4*q13*q23-2*M`j'^2*q23^2+2*M`j'^2*n4*q23^2+4*M`j'^2*q12*q33-4*M`j'^2*n4*q12*q33-2*q12^2*q33+2*n4*q12^2*q33-2*q12*q13*q33+2*n4*q12*q13*q33-2*q12*q23*q33+2*n4*q12*q23*q33-q12*q33^2+n4*q12*q33^2)+mbox1l(1+n1,n2,n3,-2+n4)*prf(-2*M`j'^2*n1*q12*q13-2*M`j'^2*n1*q12*q23-2*M`j'^2*n1*q12*q33,-4*M`j'^2*q12*q13^2+4*M`j'^2*n4*q12*q13^2-4*M`j'^2*q13^3+4*M`j'^2*n4*q13^3-8*M`j'^2*q12*q13*q23+8*M`j'^2*n4*q12*q13*q23-12*M`j'^2*q13^2*q23+12*M`j'^2*n4*q13^2*q23-4*M`j'^2*q12*q23^2+4*M`j'^2*n4*q12*q23^2-12*M`j'^2*q13*q23^2+12*M`j'^2*n4*q13*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n4*q23^3+8*M`j'^2*q12^2*q33-8*M`j'^2*n4*q12^2*q33-4*q12^3*q33+4*n4*q12^3*q33+8*M`j'^2*q12*q13*q33-8*M`j'^2*n4*q12*q13*q33-8*q12^2*q13*q33+8*n4*q12^2*q13*q33-2*M`j'^2*q13^2*q33+2*M`j'^2*n4*q13^2*q33-4*q12*q13^2*q33+4*n4*q12*q13^2*q33+8*M`j'^2*q12*q23*q33-8*M`j'^2*n4*q12*q23*q33-8*q12^2*q23*q33+8*n4*q12^2*q23*q33-4*M`j'^2*q13*q23*q33+4*M`j'^2*n4*q13*q23*q33-8*q12*q13*q23*q33+8*n4*q12*q13*q23*q33-2*M`j'^2*q23^2*q33+2*M`j'^2*n4*q23^2*q33-4*q12*q23^2*q33+4*n4*q12*q23^2*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n4*q12*q33^2-4*q12^2*q33^2+4*n4*q12^2*q33^2-4*q12*q13*q33^2+4*n4*q12*q13*q33^2-4*q12*q23*q33^2+4*n4*q12*q23*q33^2-q12*q33^3+n4*q12*q33^3)+mbox1l(-1+n1,1+n2,n3,-1+n4)*prf(4*M`j'^2*n2*q12-2*n2*q12^2+2*M`j'^2*n2*q13-2*n2*q12*q13+2*M`j'^2*n2*q23-2*n2*q12*q23-n2*q12*q33,-2*M`j'^2*q13^2+2*M`j'^2*n4*q13^2-4*M`j'^2*q13*q23+4*M`j'^2*n4*q13*q23-2*M`j'^2*q23^2+2*M`j'^2*n4*q23^2+4*M`j'^2*q12*q33-4*M`j'^2*n4*q12*q33-2*q12^2*q33+2*n4*q12^2*q33-2*q12*q13*q33+2*n4*q12*q13*q33-2*q12*q23*q33+2*n4*q12*q23*q33-q12*q33^2+n4*q12*q33^2)+mbox1l(n1,1+n2,n3,-2+n4)*prf(-8*M`j'^2*n2*q12^2+4*n2*q12^3-6*M`j'^2*n2*q12*q13+4*n2*q12^2*q13-6*M`j'^2*n2*q12*q23+4*n2*q12^2*q23-2*M`j'^2*n2*q12*q33+2*n2*q12^2*q33,-4*M`j'^2*q12*q13^2+4*M`j'^2*n4*q12*q13^2-4*M`j'^2*q13^3+4*M`j'^2*n4*q13^3-8*M`j'^2*q12*q13*q23+8*M`j'^2*n4*q12*q13*q23-12*M`j'^2*q13^2*q23+12*M`j'^2*n4*q13^2*q23-4*M`j'^2*q12*q23^2+4*M`j'^2*n4*q12*q23^2-12*M`j'^2*q13*q23^2+12*M`j'^2*n4*q13*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n4*q23^3+8*M`j'^2*q12^2*q33-8*M`j'^2*n4*q12^2*q33-4*q12^3*q33+4*n4*q12^3*q33+8*M`j'^2*q12*q13*q33-8*M`j'^2*n4*q12*q13*q33-8*q12^2*q13*q33+8*n4*q12^2*q13*q33-2*M`j'^2*q13^2*q33+2*M`j'^2*n4*q13^2*q33-4*q12*q13^2*q33+4*n4*q12*q13^2*q33+8*M`j'^2*q12*q23*q33-8*M`j'^2*n4*q12*q23*q33-8*q12^2*q23*q33+8*n4*q12^2*q23*q33-4*M`j'^2*q13*q23*q33+4*M`j'^2*n4*q13*q23*q33-8*q12*q13*q23*q33+8*n4*q12*q13*q23*q33-2*M`j'^2*q23^2*q33+2*M`j'^2*n4*q23^2*q33-4*q12*q23^2*q33+4*n4*q12*q23^2*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n4*q12*q33^2-4*q12^2*q33^2+4*n4*q12^2*q33^2-4*q12*q13*q33^2+4*n4*q12*q13*q33^2-4*q12*q23*q33^2+4*n4*q12*q23*q33^2-q12*q33^3+n4*q12*q33^3)+mbox1l(n1,n2,1+n3,-1+n4)*prf(-2*M`j'^2*n3*q12*q13+2*n3*q12^2*q13+2*M`j'^2*n3*q12*q23+n3*q12^2*q33,-2*M`j'^2*q13^2+2*M`j'^2*n4*q13^2-4*M`j'^2*q13*q23+4*M`j'^2*n4*q13*q23-2*M`j'^2*q23^2+2*M`j'^2*n4*q23^2+4*M`j'^2*q12*q33-4*M`j'^2*n4*q12*q33-2*q12^2*q33+2*n4*q12^2*q33-2*q12*q13*q33+2*n4*q12*q13*q33-2*q12*q23*q33+2*n4*q12*q23*q33-q12*q33^2+n4*q12*q33^2)+mbox1l(1+n1,-1+n2,n3,-1+n4)*prf(-2*M`j'^2*n1*q12*q13-2*M`j'^2*n1*q13^2-2*M`j'^2*n1*q12*q23-4*M`j'^2*n1*q13*q23-2*M`j'^2*n1*q23^2-2*M`j'^2*n1*q12*q33-2*M`j'^2*n1*q13*q33-2*M`j'^2*n1*q23*q33,-4*M`j'^2*q12*q13^2+4*M`j'^2*n4*q12*q13^2-4*M`j'^2*q13^3+4*M`j'^2*n4*q13^3-8*M`j'^2*q12*q13*q23+8*M`j'^2*n4*q12*q13*q23-12*M`j'^2*q13^2*q23+12*M`j'^2*n4*q13^2*q23-4*M`j'^2*q12*q23^2+4*M`j'^2*n4*q12*q23^2-12*M`j'^2*q13*q23^2+12*M`j'^2*n4*q13*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n4*q23^3+8*M`j'^2*q12^2*q33-8*M`j'^2*n4*q12^2*q33-4*q12^3*q33+4*n4*q12^3*q33+8*M`j'^2*q12*q13*q33-8*M`j'^2*n4*q12*q13*q33-8*q12^2*q13*q33+8*n4*q12^2*q13*q33-2*M`j'^2*q13^2*q33+2*M`j'^2*n4*q13^2*q33-4*q12*q13^2*q33+4*n4*q12*q13^2*q33+8*M`j'^2*q12*q23*q33-8*M`j'^2*n4*q12*q23*q33-8*q12^2*q23*q33+8*n4*q12^2*q23*q33-4*M`j'^2*q13*q23*q33+4*M`j'^2*n4*q13*q23*q33-8*q12*q13*q23*q33+8*n4*q12*q13*q23*q33-2*M`j'^2*q23^2*q33+2*M`j'^2*n4*q23^2*q33-4*q12*q23^2*q33+4*n4*q12*q23^2*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n4*q12*q33^2-4*q12^2*q33^2+4*n4*q12^2*q33^2-4*q12*q13*q33^2+4*n4*q12*q13*q33^2-4*q12*q23*q33^2+4*n4*q12*q23*q33^2-q12*q33^3+n4*q12*q33^3)+mbox1l(n1,-1+n2,1+n3,-1+n4)*prf(-6*M`j'^2*n3*q12*q13+2*n3*q12^2*q13-4*M`j'^2*n3*q13^2+2*n3*q12*q13^2-2*M`j'^2*n3*q12*q23-6*M`j'^2*n3*q13*q23+2*n3*q12*q13*q23-2*M`j'^2*n3*q23^2-2*M`j'^2*n3*q12*q33-2*M`j'^2*n3*q13*q33+n3*q12*q13*q33-2*M`j'^2*n3*q23*q33,-4*M`j'^2*q12*q13^2+4*M`j'^2*n4*q12*q13^2-4*M`j'^2*q13^3+4*M`j'^2*n4*q13^3-8*M`j'^2*q12*q13*q23+8*M`j'^2*n4*q12*q13*q23-12*M`j'^2*q13^2*q23+12*M`j'^2*n4*q13^2*q23-4*M`j'^2*q12*q23^2+4*M`j'^2*n4*q12*q23^2-12*M`j'^2*q13*q23^2+12*M`j'^2*n4*q13*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n4*q23^3+8*M`j'^2*q12^2*q33-8*M`j'^2*n4*q12^2*q33-4*q12^3*q33+4*n4*q12^3*q33+8*M`j'^2*q12*q13*q33-8*M`j'^2*n4*q12*q13*q33-8*q12^2*q13*q33+8*n4*q12^2*q13*q33-2*M`j'^2*q13^2*q33+2*M`j'^2*n4*q13^2*q33-4*q12*q13^2*q33+4*n4*q12*q13^2*q33+8*M`j'^2*q12*q23*q33-8*M`j'^2*n4*q12*q23*q33-8*q12^2*q23*q33+8*n4*q12^2*q23*q33-4*M`j'^2*q13*q23*q33+4*M`j'^2*n4*q13*q23*q33-8*q12*q13*q23*q33+8*n4*q12*q13*q23*q33-2*M`j'^2*q23^2*q33+2*M`j'^2*n4*q23^2*q33-4*q12*q23^2*q33+4*n4*q12*q23^2*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n4*q12*q33^2-4*q12^2*q33^2+4*n4*q12^2*q33^2-4*q12*q13*q33^2+4*n4*q12*q13*q33^2-4*q12*q23*q33^2+4*n4*q12*q23*q33^2-q12*q33^3+n4*q12*q33^3)+mbox1l(n1,-1+n2,n3,n4)*prf(-2*M`j'^2*q12*q13-2*M`j'^2*q13^2-2*M`j'^2*q12*q23-4*M`j'^2*q13*q23-2*M`j'^2*q23^2+2*M`j'^2*q12*q33-2*q12^2*q33-2*q12*q13*q33-2*q12*q23*q33-q12*q33^2,4*M`j'^2*q12*q13^2+4*M`j'^2*q13^3+8*M`j'^2*q12*q13*q23+12*M`j'^2*q13^2*q23+4*M`j'^2*q12*q23^2+12*M`j'^2*q13*q23^2+4*M`j'^2*q23^3-8*M`j'^2*q12^2*q33+4*q12^3*q33-8*M`j'^2*q12*q13*q33+8*q12^2*q13*q33+2*M`j'^2*q13^2*q33+4*q12*q13^2*q33-8*M`j'^2*q12*q23*q33+8*q12^2*q23*q33+4*M`j'^2*q13*q23*q33+8*q12*q13*q23*q33+2*M`j'^2*q23^2*q33+4*q12*q23^2*q33-4*M`j'^2*q12*q33^2+4*q12^2*q33^2+4*q12*q13*q33^2+4*q12*q23*q33^2+q12*q33^3)+mbox1l(-1+n1,n2,1+n3,-1+n4)*prf(4*M`j'^2*n3*q12^2-2*n3*q12^3+10*M`j'^2*n3*q12*q13-6*n3*q12^2*q13+4*M`j'^2*n3*q13^2-4*n3*q12*q13^2+6*M`j'^2*n3*q12*q23-4*n3*q12^2*q23+6*M`j'^2*n3*q13*q23-6*n3*q12*q13*q23+2*M`j'^2*n3*q23^2-2*n3*q12*q23^2+4*M`j'^2*n3*q12*q33-3*n3*q12^2*q33+2*M`j'^2*n3*q13*q33-4*n3*q12*q13*q33+2*M`j'^2*n3*q23*q33-3*n3*q12*q23*q33-n3*q12*q33^2,-4*M`j'^2*q12*q13^2+4*M`j'^2*n4*q12*q13^2-4*M`j'^2*q13^3+4*M`j'^2*n4*q13^3-8*M`j'^2*q12*q13*q23+8*M`j'^2*n4*q12*q13*q23-12*M`j'^2*q13^2*q23+12*M`j'^2*n4*q13^2*q23-4*M`j'^2*q12*q23^2+4*M`j'^2*n4*q12*q23^2-12*M`j'^2*q13*q23^2+12*M`j'^2*n4*q13*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n4*q23^3+8*M`j'^2*q12^2*q33-8*M`j'^2*n4*q12^2*q33-4*q12^3*q33+4*n4*q12^3*q33+8*M`j'^2*q12*q13*q33-8*M`j'^2*n4*q12*q13*q33-8*q12^2*q13*q33+8*n4*q12^2*q13*q33-2*M`j'^2*q13^2*q33+2*M`j'^2*n4*q13^2*q33-4*q12*q13^2*q33+4*n4*q12*q13^2*q33+8*M`j'^2*q12*q23*q33-8*M`j'^2*n4*q12*q23*q33-8*q12^2*q23*q33+8*n4*q12^2*q23*q33-4*M`j'^2*q13*q23*q33+4*M`j'^2*n4*q13*q23*q33-8*q12*q13*q23*q33+8*n4*q12*q13*q23*q33-2*M`j'^2*q23^2*q33+2*M`j'^2*n4*q23^2*q33-4*q12*q23^2*q33+4*n4*q12*q23^2*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n4*q12*q33^2-4*q12^2*q33^2+4*n4*q12^2*q33^2-4*q12*q13*q33^2+4*n4*q12*q13*q33^2-4*q12*q23*q33^2+4*n4*q12*q23*q33^2-q12*q33^3+n4*q12*q33^3)+mbox1l(n1,n2,n3,-1+n4)*(tmpprf(ep,1)*prf(-4*q12^2*q13-4*q12*q13^2-4*q12^2*q23-8*q12*q13*q23-4*q12*q23^2-4*q12^2*q33-6*q12*q13*q33-6*q12*q23*q33-2*q12*q33^2,-4*M`j'^2*q12*q13^2+4*M`j'^2*n4*q12*q13^2-4*M`j'^2*q13^3+4*M`j'^2*n4*q13^3-8*M`j'^2*q12*q13*q23+8*M`j'^2*n4*q12*q13*q23-12*M`j'^2*q13^2*q23+12*M`j'^2*n4*q13^2*q23-4*M`j'^2*q12*q23^2+4*M`j'^2*n4*q12*q23^2-12*M`j'^2*q13*q23^2+12*M`j'^2*n4*q13*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n4*q23^3+8*M`j'^2*q12^2*q33-8*M`j'^2*n4*q12^2*q33-4*q12^3*q33+4*n4*q12^3*q33+8*M`j'^2*q12*q13*q33-8*M`j'^2*n4*q12*q13*q33-8*q12^2*q13*q33+8*n4*q12^2*q13*q33-2*M`j'^2*q13^2*q33+2*M`j'^2*n4*q13^2*q33-4*q12*q13^2*q33+4*n4*q12*q13^2*q33+8*M`j'^2*q12*q23*q33-8*M`j'^2*n4*q12*q23*q33-8*q12^2*q23*q33+8*n4*q12^2*q23*q33-4*M`j'^2*q13*q23*q33+4*M`j'^2*n4*q13*q23*q33-8*q12*q13*q23*q33+8*n4*q12*q13*q23*q33-2*M`j'^2*q23^2*q33+2*M`j'^2*n4*q23^2*q33-4*q12*q23^2*q33+4*n4*q12*q23^2*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n4*q12*q33^2-4*q12^2*q33^2+4*n4*q12^2*q33^2-4*q12*q13*q33^2+4*n4*q12*q13*q33^2-4*q12*q23*q33^2+4*n4*q12*q23*q33^2-q12*q33^3+n4*q12*q33^3)+prf(-2*M`j'^2*q12*q13+4*M`j'^2*n1*q12*q13-6*M`j'^2*n2*q12*q13+2*M`j'^2*n4*q12*q13+12*q12^2*q13-4*n1*q12^2*q13-2*n3*q12^2*q13-4*n4*q12^2*q13-2*M`j'^2*q13^2+2*M`j'^2*n1*q13^2-4*M`j'^2*n2*q13^2+2*M`j'^2*n4*q13^2+12*q12*q13^2-4*n1*q12*q13^2-2*n3*q12*q13^2-4*n4*q12*q13^2-2*M`j'^2*q12*q23+4*M`j'^2*n1*q12*q23-6*M`j'^2*n2*q12*q23+2*M`j'^2*n4*q12*q23+12*q12^2*q23-4*n1*q12^2*q23-2*n3*q12^2*q23-4*n4*q12^2*q23-4*M`j'^2*q13*q23+4*M`j'^2*n1*q13*q23-8*M`j'^2*n2*q13*q23+4*M`j'^2*n4*q13*q23+24*q12*q13*q23-8*n1*q12*q13*q23-4*n3*q12*q13*q23-8*n4*q12*q13*q23-2*M`j'^2*q23^2+2*M`j'^2*n1*q23^2-4*M`j'^2*n2*q23^2+2*M`j'^2*n4*q23^2+12*q12*q23^2-4*n1*q12*q23^2-2*n3*q12*q23^2-4*n4*q12*q23^2+2*M`j'^2*q12*q33+4*M`j'^2*n1*q12*q33-2*M`j'^2*n2*q12*q33-2*M`j'^2*n4*q12*q33+10*q12^2*q33-4*n1*q12^2*q33-2*n2*q12^2*q33-2*n3*q12^2*q33-2*n4*q12^2*q33+2*M`j'^2*n1*q13*q33-2*M`j'^2*n2*q13*q33+16*q12*q13*q33-6*n1*q12*q13*q33-2*n2*q12*q13*q33-3*n3*q12*q13*q33-4*n4*q12*q13*q33+2*M`j'^2*n1*q23*q33-2*M`j'^2*n2*q23*q33+16*q12*q23*q33-6*n1*q12*q23*q33-2*n2*q12*q23*q33-3*n3*q12*q23*q33-4*n4*q12*q23*q33+5*q12*q33^2-2*n1*q12*q33^2-n2*q12*q33^2-n3*q12*q33^2-n4*q12*q33^2,-4*M`j'^2*q12*q13^2+4*M`j'^2*n4*q12*q13^2-4*M`j'^2*q13^3+4*M`j'^2*n4*q13^3-8*M`j'^2*q12*q13*q23+8*M`j'^2*n4*q12*q13*q23-12*M`j'^2*q13^2*q23+12*M`j'^2*n4*q13^2*q23-4*M`j'^2*q12*q23^2+4*M`j'^2*n4*q12*q23^2-12*M`j'^2*q13*q23^2+12*M`j'^2*n4*q13*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n4*q23^3+8*M`j'^2*q12^2*q33-8*M`j'^2*n4*q12^2*q33-4*q12^3*q33+4*n4*q12^3*q33+8*M`j'^2*q12*q13*q33-8*M`j'^2*n4*q12*q13*q33-8*q12^2*q13*q33+8*n4*q12^2*q13*q33-2*M`j'^2*q13^2*q33+2*M`j'^2*n4*q13^2*q33-4*q12*q13^2*q33+4*n4*q12*q13^2*q33+8*M`j'^2*q12*q23*q33-8*M`j'^2*n4*q12*q23*q33-8*q12^2*q23*q33+8*n4*q12^2*q23*q33-4*M`j'^2*q13*q23*q33+4*M`j'^2*n4*q13*q23*q33-8*q12*q13*q23*q33+8*n4*q12*q13*q23*q33-2*M`j'^2*q23^2*q33+2*M`j'^2*n4*q23^2*q33-4*q12*q23^2*q33+4*n4*q12*q23^2*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n4*q12*q33^2-4*q12^2*q33^2+4*n4*q12^2*q33^2-4*q12*q13*q33^2+4*n4*q12*q13*q33^2-4*q12*q23*q33^2+4*n4*q12*q23*q33^2-q12*q33^3+n4*q12*q33^3));
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?{,>1},n3?neg0_,n4?pos_) = mbox1l(n1,-1+n2,1+n3,-1+n4)*prf(-2*M`j'^2*n3*q13-2*M`j'^2*n3*q23-n3*q12*q33,-4*M`j'^2*q13^2+4*M`j'^2*n2*q13^2-8*M`j'^2*q13*q23+8*M`j'^2*n2*q13*q23-4*M`j'^2*q23^2+4*M`j'^2*n2*q23^2+8*M`j'^2*q12*q33-8*M`j'^2*n2*q12*q33-4*q12^2*q33+4*n2*q12^2*q33-4*q12*q13*q33+4*n2*q12*q13*q33-4*q12*q23*q33+4*n2*q12*q23*q33-2*q12*q33^2+2*n2*q12*q33^2)+mbox1l(n1,n2,n3,-1+n4)*prf(-4*M`j'^2*q12*q13-2*M`j'^2*q13^2-4*M`j'^2*q12*q23-4*M`j'^2*q13*q23-2*M`j'^2*q23^2-2*M`j'^2*q12*q33-M`j'^2*q13*q33-M`j'^2*q23*q33,4*M`j'^2*q12*q13^2+4*M`j'^2*q13^3+8*M`j'^2*q12*q13*q23+12*M`j'^2*q13^2*q23+4*M`j'^2*q12*q23^2+12*M`j'^2*q13*q23^2+4*M`j'^2*q23^3-8*M`j'^2*q12^2*q33+4*q12^3*q33-8*M`j'^2*q12*q13*q33+8*q12^2*q13*q33+2*M`j'^2*q13^2*q33+4*q12*q13^2*q33-8*M`j'^2*q12*q23*q33+8*q12^2*q23*q33+4*M`j'^2*q13*q23*q33+8*q12*q13*q23*q33+2*M`j'^2*q23^2*q33+4*q12*q23^2*q33-4*M`j'^2*q12*q33^2+4*q12^2*q33^2+4*q12*q13*q33^2+4*q12*q23*q33^2+q12*q33^3)+mbox1l(n1,-2+n2,n3,1+n4)*prf(-2*M`j'^2*n4*q12*q33-M`j'^2*n4*q13*q33-M`j'^2*n4*q23*q33,-4*M`j'^2*q12*q13^2+4*M`j'^2*n2*q12*q13^2-4*M`j'^2*q13^3+4*M`j'^2*n2*q13^3-8*M`j'^2*q12*q13*q23+8*M`j'^2*n2*q12*q13*q23-12*M`j'^2*q13^2*q23+12*M`j'^2*n2*q13^2*q23-4*M`j'^2*q12*q23^2+4*M`j'^2*n2*q12*q23^2-12*M`j'^2*q13*q23^2+12*M`j'^2*n2*q13*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n2*q23^3+8*M`j'^2*q12^2*q33-8*M`j'^2*n2*q12^2*q33-4*q12^3*q33+4*n2*q12^3*q33+8*M`j'^2*q12*q13*q33-8*M`j'^2*n2*q12*q13*q33-8*q12^2*q13*q33+8*n2*q12^2*q13*q33-2*M`j'^2*q13^2*q33+2*M`j'^2*n2*q13^2*q33-4*q12*q13^2*q33+4*n2*q12*q13^2*q33+8*M`j'^2*q12*q23*q33-8*M`j'^2*n2*q12*q23*q33-8*q12^2*q23*q33+8*n2*q12^2*q23*q33-4*M`j'^2*q13*q23*q33+4*M`j'^2*n2*q13*q23*q33-8*q12*q13*q23*q33+8*n2*q12*q13*q23*q33-2*M`j'^2*q23^2*q33+2*M`j'^2*n2*q23^2*q33-4*q12*q23^2*q33+4*n2*q12*q23^2*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n2*q12*q33^2-4*q12^2*q33^2+4*n2*q12^2*q33^2-4*q12*q13*q33^2+4*n2*q12*q13*q33^2-4*q12*q23*q33^2+4*n2*q12*q23*q33^2-q12*q33^3+n2*q12*q33^3)+mbox1l(-1+n1,n2,n3,n4)*prf(4*M`j'^2*q13+4*M`j'^2*q23+4*M`j'^2*q33-2*q12*q33-2*q13*q33-2*q23*q33-q33^2,4*M`j'^2*q13^2+8*M`j'^2*q13*q23+4*M`j'^2*q23^2-8*M`j'^2*q12*q33+4*q12^2*q33+4*q12*q13*q33+4*q12*q23*q33+2*q12*q33^2)+mbox1l(1+n1,-1+n2,n3,-1+n4)*prf(-2*M`j'^2*n1*q13^2-4*M`j'^2*n1*q13*q23-2*M`j'^2*n1*q23^2+2*M`j'^2*n1*q12*q33-2*n1*q12^2*q33-M`j'^2*n1*q13*q33-2*n1*q12*q13*q33-M`j'^2*n1*q23*q33-2*n1*q12*q23*q33-n1*q12*q33^2,-4*M`j'^2*q12*q13^2+4*M`j'^2*n2*q12*q13^2-4*M`j'^2*q13^3+4*M`j'^2*n2*q13^3-8*M`j'^2*q12*q13*q23+8*M`j'^2*n2*q12*q13*q23-12*M`j'^2*q13^2*q23+12*M`j'^2*n2*q13^2*q23-4*M`j'^2*q12*q23^2+4*M`j'^2*n2*q12*q23^2-12*M`j'^2*q13*q23^2+12*M`j'^2*n2*q13*q23^2-4*M`j'^2*q23^3+4*M`j'^2*n2*q23^3+8*M`j'^2*q12^2*q33-8*M`j'^2*n2*q12^2*q33-4*q12^3*q33+4*n2*q12^3*q33+8*M`j'^2*q12*q13*q33-8*M`j'^2*n2*q12*q13*q33-8*q12^2*q13*q33+8*n2*q12^2*q13*q33-2*M`j'^2*q13^2*q33+2*M`j'^2*n2*q13^2*q33-4*q12*q13^2*q33+4*n2*q12*q13^2*q33+8*M`j'^2*q12*q23*q33-8*M`j'^2*n2*q12*q23*q33-8*q12^2*q23*q33+8*n2*q12^2*q23*q33-4*M`j'^2*q13*q23*q33+4*M`j'^2*n2*q13*q23*q33-8*q12*q13*q23*q33+8*n2*q12*q13*q23*q33-2*M`j'^2*q23^2*q33+2*M`j'^2*n2*q23^2*q33-4*q12*q23^2*q33+4*n2*q12*q23^2*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n2*q12*q33^2-4*q12^2*q33^2+4*n2*q12^2*q33^2-4*q12*q13*q33^2+4*n2*q12*q13*q33^2-4*q12*q23*q33^2+4*n2*q12*q23*q33^2-q12*q33^3+n2*q12*q33^3)+mbox1l(n1,-1+n2,1+n3,n4)*prf(-4*M`j'^2*n3*q13^2-4*M`j'^2*n3*q13*q23+4*M`j'^2*n3*q12*q33-2*n3*q12*q13*q33-n3*q12*q33^2,-4*M`j'^2*q13^2+4*M`j'^2*n2*q13^2-8*M`j'^2*q13*q23+8*M`j'^2*n2*q13*q23-4*M`j'^2*q23^2+4*M`j'^2*n2*q23^2+8*M`j'^2*q12*q33-8*M`j'^2*n2*q12*q33-4*q12^2*q33+4*n2*q12^2*q33-4*q12*q13*q33+4*n2*q12*q13*q33-4*q12*q23*q33+4*n2*q12*q23*q33-2*q12*q33^2+2*n2*q12*q33^2)+mbox1l(1+n1,-2+n2,n3,n4)*prf(-4*M`j'^2*n1*q12*q33-6*M`j'^2*n1*q13*q33-6*M`j'^2*n1*q23*q33-4*M`j'^2*n1*q33^2+2*n1*q12*q33^2+2*n1*q13*q33^2+2*n1*q23*q33^2+n1*q33^3,-8*M`j'^2*q12*q13^2+8*M`j'^2*n2*q12*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n2*q13^3-16*M`j'^2*q12*q13*q23+16*M`j'^2*n2*q12*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n2*q13^2*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n2*q12*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n2*q13*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n2*q23^3+16*M`j'^2*q12^2*q33-16*M`j'^2*n2*q12^2*q33-8*q12^3*q33+8*n2*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n2*q12*q13*q33-16*q12^2*q13*q33+16*n2*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n2*q13^2*q33-8*q12*q13^2*q33+8*n2*q12*q13^2*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n2*q12*q23*q33-16*q12^2*q23*q33+16*n2*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n2*q13*q23*q33-16*q12*q13*q23*q33+16*n2*q12*q13*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n2*q23^2*q33-8*q12*q23^2*q33+8*n2*q12*q23^2*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n2*q12*q33^2-8*q12^2*q33^2+8*n2*q12^2*q33^2-8*q12*q13*q33^2+8*n2*q12*q13*q33^2-8*q12*q23*q33^2+8*n2*q12*q23*q33^2-2*q12*q33^3+2*n2*q12*q33^3)+mbox1l(n1,-1+n2,n3,n4)*(tmpprf(ep,1)*prf(-8*q12^2*q33-12*q12*q13*q33-4*q13^2*q33-12*q12*q23*q33-8*q13*q23*q33-4*q23^2*q33-4*q12*q33^2-2*q13*q33^2-2*q23*q33^2,-8*M`j'^2*q12*q13^2+8*M`j'^2*n2*q12*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n2*q13^3-16*M`j'^2*q12*q13*q23+16*M`j'^2*n2*q12*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n2*q13^2*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n2*q12*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n2*q13*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n2*q23^3+16*M`j'^2*q12^2*q33-16*M`j'^2*n2*q12^2*q33-8*q12^3*q33+8*n2*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n2*q12*q13*q33-16*q12^2*q13*q33+16*n2*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n2*q13^2*q33-8*q12*q13^2*q33+8*n2*q12*q13^2*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n2*q12*q23*q33-16*q12^2*q23*q33+16*n2*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n2*q13*q23*q33-16*q12*q13*q23*q33+16*n2*q12*q13*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n2*q23^2*q33-8*q12*q23^2*q33+8*n2*q12*q23^2*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n2*q12*q33^2-8*q12^2*q33^2+8*n2*q12^2*q33^2-8*q12*q13*q33^2+8*n2*q12*q13*q33^2-8*q12*q23*q33^2+8*n2*q12*q23*q33^2-2*q12*q33^3+2*n2*q12*q33^3)+prf(4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2-4*M`j'^2*n2*q13^2+8*M`j'^2*q13*q23+8*M`j'^2*n1*q13*q23-8*M`j'^2*n2*q13*q23+4*M`j'^2*q23^2+4*M`j'^2*n1*q23^2-4*M`j'^2*n2*q23^2+4*M`j'^2*q12*q33-4*M`j'^2*n2*q12*q33+4*M`j'^2*n4*q12*q33+20*q12^2*q33-4*n1*q12^2*q33-4*n2*q12^2*q33-4*n3*q12^2*q33-8*n4*q12^2*q33+10*M`j'^2*q13*q33+8*M`j'^2*n1*q13*q33-10*M`j'^2*n2*q13*q33+2*M`j'^2*n4*q13*q33+28*q12*q13*q33-8*n1*q12*q13*q33-4*n2*q12*q13*q33-6*n3*q12*q13*q33-12*n4*q12*q13*q33+8*q13^2*q33-4*n1*q13^2*q33-2*n3*q13^2*q33-4*n4*q13^2*q33+10*M`j'^2*q23*q33+8*M`j'^2*n1*q23*q33-10*M`j'^2*n2*q23*q33+2*M`j'^2*n4*q23*q33+28*q12*q23*q33-8*n1*q12*q23*q33-4*n2*q12*q23*q33-6*n3*q12*q23*q33-12*n4*q12*q23*q33+16*q13*q23*q33-8*n1*q13*q23*q33-4*n3*q13*q23*q33-8*n4*q13*q23*q33+8*q23^2*q33-4*n1*q23^2*q33-2*n3*q23^2*q33-4*n4*q23^2*q33+4*M`j'^2*q33^2+4*M`j'^2*n1*q33^2-4*M`j'^2*n2*q33^2+8*q12*q33^2-4*n1*q12*q33^2-2*n3*q12*q33^2-4*n4*q12*q33^2+2*q13*q33^2-4*n1*q13*q33^2+2*n2*q13*q33^2-n3*q13*q33^2-2*n4*q13*q33^2+2*q23*q33^2-4*n1*q23*q33^2+2*n2*q23*q33^2-n3*q23*q33^2-2*n4*q23*q33^2-q33^3-n1*q33^3+n2*q33^3,-8*M`j'^2*q12*q13^2+8*M`j'^2*n2*q12*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n2*q13^3-16*M`j'^2*q12*q13*q23+16*M`j'^2*n2*q12*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n2*q13^2*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n2*q12*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n2*q13*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n2*q23^3+16*M`j'^2*q12^2*q33-16*M`j'^2*n2*q12^2*q33-8*q12^3*q33+8*n2*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n2*q12*q13*q33-16*q12^2*q13*q33+16*n2*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n2*q13^2*q33-8*q12*q13^2*q33+8*n2*q12*q13^2*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n2*q12*q23*q33-16*q12^2*q23*q33+16*n2*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n2*q13*q23*q33-16*q12*q13*q23*q33+16*n2*q12*q13*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n2*q23^2*q33-8*q12*q23^2*q33+8*n2*q12*q23^2*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n2*q12*q33^2-8*q12^2*q33^2+8*n2*q12^2*q33^2-8*q12*q13*q33^2+8*n2*q12*q13*q33^2-8*q12*q23*q33^2+8*n2*q12*q23*q33^2-2*q12*q33^3+2*n2*q12*q33^3))+mbox1l(-1+n1,-1+n2,1+n3,n4)*prf(4*M`j'^2*n3*q12*q13+8*M`j'^2*n3*q13^2+4*M`j'^2*n3*q12*q23+12*M`j'^2*n3*q13*q23+4*M`j'^2*n3*q23^2+4*M`j'^2*n3*q12*q33-2*n3*q12^2*q33+12*M`j'^2*n3*q13*q33-6*n3*q12*q13*q33-4*n3*q13^2*q33+8*M`j'^2*n3*q23*q33-4*n3*q12*q23*q33-6*n3*q13*q23*q33-2*n3*q23^2*q33+4*M`j'^2*n3*q33^2-3*n3*q12*q33^2-4*n3*q13*q33^2-3*n3*q23*q33^2-n3*q33^3,-8*M`j'^2*q12*q13^2+8*M`j'^2*n2*q12*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n2*q13^3-16*M`j'^2*q12*q13*q23+16*M`j'^2*n2*q12*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n2*q13^2*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n2*q12*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n2*q13*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n2*q23^3+16*M`j'^2*q12^2*q33-16*M`j'^2*n2*q12^2*q33-8*q12^3*q33+8*n2*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n2*q12*q13*q33-16*q12^2*q13*q33+16*n2*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n2*q13^2*q33-8*q12*q13^2*q33+8*n2*q12*q13^2*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n2*q12*q23*q33-16*q12^2*q23*q33+16*n2*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n2*q13*q23*q33-16*q12*q13*q23*q33+16*n2*q12*q13*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n2*q23^2*q33-8*q12*q23^2*q33+8*n2*q12*q23^2*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n2*q12*q33^2-8*q12^2*q33^2+8*n2*q12^2*q33^2-8*q12*q13*q33^2+8*n2*q12*q13*q33^2-8*q12*q23*q33^2+8*n2*q12*q23*q33^2-2*q12*q33^3+2*n2*q12*q33^3)+mbox1l(n1,-2+n2,1+n3,n4)*prf(-4*M`j'^2*n3*q13^2-4*M`j'^2*n3*q13*q23-4*M`j'^2*n3*q12*q33-10*M`j'^2*n3*q13*q33+2*n3*q12*q13*q33+2*n3*q13^2*q33-6*M`j'^2*n3*q23*q33+2*n3*q13*q23*q33-4*M`j'^2*n3*q33^2+2*n3*q12*q33^2+3*n3*q13*q33^2+2*n3*q23*q33^2+n3*q33^3,-8*M`j'^2*q12*q13^2+8*M`j'^2*n2*q12*q13^2-8*M`j'^2*q13^3+8*M`j'^2*n2*q13^3-16*M`j'^2*q12*q13*q23+16*M`j'^2*n2*q12*q13*q23-24*M`j'^2*q13^2*q23+24*M`j'^2*n2*q13^2*q23-8*M`j'^2*q12*q23^2+8*M`j'^2*n2*q12*q23^2-24*M`j'^2*q13*q23^2+24*M`j'^2*n2*q13*q23^2-8*M`j'^2*q23^3+8*M`j'^2*n2*q23^3+16*M`j'^2*q12^2*q33-16*M`j'^2*n2*q12^2*q33-8*q12^3*q33+8*n2*q12^3*q33+16*M`j'^2*q12*q13*q33-16*M`j'^2*n2*q12*q13*q33-16*q12^2*q13*q33+16*n2*q12^2*q13*q33-4*M`j'^2*q13^2*q33+4*M`j'^2*n2*q13^2*q33-8*q12*q13^2*q33+8*n2*q12*q13^2*q33+16*M`j'^2*q12*q23*q33-16*M`j'^2*n2*q12*q23*q33-16*q12^2*q23*q33+16*n2*q12^2*q23*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n2*q13*q23*q33-16*q12*q13*q23*q33+16*n2*q12*q13*q23*q33-4*M`j'^2*q23^2*q33+4*M`j'^2*n2*q23^2*q33-8*q12*q23^2*q33+8*n2*q12*q23^2*q33+8*M`j'^2*q12*q33^2-8*M`j'^2*n2*q12*q33^2-8*q12^2*q33^2+8*n2*q12^2*q33^2-8*q12*q13*q33^2+8*n2*q12*q13*q33^2-8*q12*q23*q33^2+8*n2*q12*q23*q33^2-2*q12*q33^3+2*n2*q12*q33^3);
	Identify,ifmatch->jump mbox1l(n1?{,>1},n2?pos_,n3?neg0_,n4?pos_) = mbox1l(n1,n2,n3,-1+n4)*prf(M`j'^2*q13+M`j'^2*q23,2*M`j'^2*q13^2+4*M`j'^2*q13*q23+2*M`j'^2*q23^2-4*M`j'^2*q12*q33+2*q12^2*q33+2*q12*q13*q33+2*q12*q23*q33+q12*q33^2)+mbox1l(-1+n1,-1+n2,n3,1+n4)*prf(M`j'^2*n4*q13+M`j'^2*n4*q23,-2*M`j'^2*q13^2+2*M`j'^2*n1*q13^2-4*M`j'^2*q13*q23+4*M`j'^2*n1*q13*q23-2*M`j'^2*q23^2+2*M`j'^2*n1*q23^2+4*M`j'^2*q12*q33-4*M`j'^2*n1*q12*q33-2*q12^2*q33+2*n1*q12^2*q33-2*q12*q13*q33+2*n1*q12*q13*q33-2*q12*q23*q33+2*n1*q12*q23*q33-q12*q33^2+n1*q12*q33^2)+mbox1l(-1+n1,1+n2,n3,-1+n4)*prf(4*M`j'^2*n2*q12-2*n2*q12^2+M`j'^2*n2*q13-2*n2*q12*q13+M`j'^2*n2*q23-2*n2*q12*q23-n2*q12*q33,-2*M`j'^2*q13^2+2*M`j'^2*n1*q13^2-4*M`j'^2*q13*q23+4*M`j'^2*n1*q13*q23-2*M`j'^2*q23^2+2*M`j'^2*n1*q23^2+4*M`j'^2*q12*q33-4*M`j'^2*n1*q12*q33-2*q12^2*q33+2*n1*q12^2*q33-2*q12*q13*q33+2*n1*q12*q13*q33-2*q12*q23*q33+2*n1*q12*q23*q33-q12*q33^2+n1*q12*q33^2)+mbox1l(-1+n1,n2,1+n3,-1+n4)*prf(4*M`j'^2*n3*q12-2*n3*q12^2+2*M`j'^2*n3*q13-2*n3*q12*q13+2*M`j'^2*n3*q23-2*n3*q12*q23-n3*q12*q33,-4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2-8*M`j'^2*q13*q23+8*M`j'^2*n1*q13*q23-4*M`j'^2*q23^2+4*M`j'^2*n1*q23^2+8*M`j'^2*q12*q33-8*M`j'^2*n1*q12*q33-4*q12^2*q33+4*n1*q12^2*q33-4*q12*q13*q33+4*n1*q12*q13*q33-4*q12*q23*q33+4*n1*q12*q23*q33-2*q12*q33^2+2*n1*q12*q33^2)+mbox1l(n1,-1+n2,n3,n4)*prf(2*M`j'^2*q13+2*M`j'^2*q23+4*M`j'^2*q33-2*q12*q33-2*q13*q33-2*q23*q33-q33^2,4*M`j'^2*q13^2+8*M`j'^2*q13*q23+4*M`j'^2*q23^2-8*M`j'^2*q12*q33+4*q12^2*q33+4*q12*q13*q33+4*q12*q23*q33+2*q12*q33^2)+mbox1l(-1+n1,n2,n3,n4)*(tmpprf(ep,1)*prf(4*q12*q13+4*q13^2+4*q12*q23+8*q13*q23+4*q23^2+2*q13*q33+2*q23*q33,-4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2-8*M`j'^2*q13*q23+8*M`j'^2*n1*q13*q23-4*M`j'^2*q23^2+4*M`j'^2*n1*q23^2+8*M`j'^2*q12*q33-8*M`j'^2*n1*q12*q33-4*q12^2*q33+4*n1*q12^2*q33-4*q12*q13*q33+4*n1*q12*q13*q33-4*q12*q23*q33+4*n1*q12*q23*q33-2*q12*q33^2+2*n1*q12*q33^2)+prf(4*M`j'^2*q13-4*M`j'^2*n1*q13+6*M`j'^2*n2*q13-2*M`j'^2*n4*q13-12*q12*q13+4*n1*q12*q13+2*n3*q12*q13+4*n4*q12*q13-12*q13^2+4*n1*q13^2+2*n3*q13^2+4*n4*q13^2+4*M`j'^2*q23-4*M`j'^2*n1*q23+6*M`j'^2*n2*q23-2*M`j'^2*n4*q23-12*q12*q23+4*n1*q12*q23+2*n3*q12*q23+4*n4*q12*q23-24*q13*q23+8*n1*q13*q23+4*n3*q13*q23+8*n4*q13*q23-12*q23^2+4*n1*q23^2+2*n3*q23^2+4*n4*q23^2+4*M`j'^2*q33-4*M`j'^2*n1*q33+4*M`j'^2*n2*q33-2*q12*q33+2*n1*q12*q33-2*n2*q12*q33-8*q13*q33+4*n1*q13*q33-2*n2*q13*q33+n3*q13*q33+2*n4*q13*q33-8*q23*q33+4*n1*q23*q33-2*n2*q23*q33+n3*q23*q33+2*n4*q23*q33-q33^2+n1*q33^2-n2*q33^2,-4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2-8*M`j'^2*q13*q23+8*M`j'^2*n1*q13*q23-4*M`j'^2*q23^2+4*M`j'^2*n1*q23^2+8*M`j'^2*q12*q33-8*M`j'^2*n1*q12*q33-4*q12^2*q33+4*n1*q12^2*q33-4*q12*q13*q33+4*n1*q12*q13*q33-4*q12*q23*q33+4*n1*q12*q23*q33-2*q12*q33^2+2*n1*q12*q33^2))+mbox1l(-2+n1,1+n2,n3,n4)*prf(-8*M`j'^2*n2*q12+4*n2*q12^2-8*M`j'^2*n2*q13+8*n2*q12*q13+4*n2*q13^2-8*M`j'^2*n2*q23+8*n2*q12*q23+8*n2*q13*q23+4*n2*q23^2-4*M`j'^2*n2*q33+4*n2*q12*q33+4*n2*q13*q33+4*n2*q23*q33+n2*q33^2,-4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2-8*M`j'^2*q13*q23+8*M`j'^2*n1*q13*q23-4*M`j'^2*q23^2+4*M`j'^2*n1*q23^2+8*M`j'^2*q12*q33-8*M`j'^2*n1*q12*q33-4*q12^2*q33+4*n1*q12^2*q33-4*q12*q13*q33+4*n1*q12*q13*q33-4*q12*q23*q33+4*n1*q12*q23*q33-2*q12*q33^2+2*n1*q12*q33^2)+mbox1l(-1+n1,-1+n2,1+n3,n4)*prf(6*M`j'^2*n3*q13-2*n3*q12*q13-2*n3*q13^2+2*M`j'^2*n3*q23-2*n3*q13*q23+4*M`j'^2*n3*q33-2*n3*q12*q33-3*n3*q13*q33-2*n3*q23*q33-n3*q33^2,-4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2-8*M`j'^2*q13*q23+8*M`j'^2*n1*q13*q23-4*M`j'^2*q23^2+4*M`j'^2*n1*q23^2+8*M`j'^2*q12*q33-8*M`j'^2*n1*q12*q33-4*q12^2*q33+4*n1*q12^2*q33-4*q12*q13*q33+4*n1*q12*q13*q33-4*q12*q23*q33+4*n1*q12*q23*q33-2*q12*q33^2+2*n1*q12*q33^2)+mbox1l(-2+n1,n2,1+n3,n4)*prf(-4*M`j'^2*n3*q12+2*n3*q12^2-8*M`j'^2*n3*q13+6*n3*q12*q13+4*n3*q13^2-4*M`j'^2*n3*q23+4*n3*q12*q23+6*n3*q13*q23+2*n3*q23^2-4*M`j'^2*n3*q33+3*n3*q12*q33+4*n3*q13*q33+3*n3*q23*q33+n3*q33^2,-4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2-8*M`j'^2*q13*q23+8*M`j'^2*n1*q13*q23-4*M`j'^2*q23^2+4*M`j'^2*n1*q23^2+8*M`j'^2*q12*q33-8*M`j'^2*n1*q12*q33-4*q12^2*q33+4*n1*q12^2*q33-4*q12*q13*q33+4*n1*q12*q13*q33-4*q12*q23*q33+4*n1*q12*q23*q33-2*q12*q33^2+2*n1*q12*q33^2)+mbox1l(-1+n1,n2,1+n3,n4)*prf(4*M`j'^2*n3*q12*q13-4*n3*q12^2*q13-4*n3*q12*q13^2-4*M`j'^2*n3*q12*q23-4*M`j'^2*n3*q13*q23-4*n3*q12*q13*q23-4*M`j'^2*n3*q23^2+4*M`j'^2*n3*q12*q33-2*n3*q12^2*q33-4*n3*q12*q13*q33-2*n3*q12*q23*q33-n3*q12*q33^2,-4*M`j'^2*q13^2+4*M`j'^2*n1*q13^2-8*M`j'^2*q13*q23+8*M`j'^2*n1*q13*q23-4*M`j'^2*q23^2+4*M`j'^2*n1*q23^2+8*M`j'^2*q12*q33-8*M`j'^2*n1*q12*q33-4*q12^2*q33+4*n1*q12^2*q33-4*q12*q13*q33+4*n1*q12*q13*q33-4*q12*q23*q33+4*n1*q12*q23*q33-2*q12*q33^2+2*n1*q12*q33^2);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?pos_,n3?neg0_,n4?{,>1}) = mbox1l(n1,1+n2,n3,-1+n4)*prf(n2,-1+n4)+mbox1l(1+n1,1+n2,n3,-2+n4)*prf(-2*n2*q12,-2*q12+2*n4*q12-2*q13+2*n4*q13-2*q23+2*n4*q23-q33+n4*q33)+mbox1l(2+n1,n2,n3,-2+n4)*prf(2*q12+2*n1*q12,-2*q12+2*n4*q12-2*q13+2*n4*q13-2*q23+2*n4*q23-q33+n4*q33)+mbox1l(1+n1,-1+n2,n3,n4)*prf(q33,2*q12+2*q13+2*q23+q33)+mbox1l(2+n1,-1+n2,n3,-1+n4)*prf(-q33-n1*q33,-2*q12+2*n4*q12-2*q13+2*n4*q13-2*q23+2*n4*q23-q33+n4*q33)+mbox1l(1+n1,n2,n3,-1+n4)*prf(-4*q12-2*n1*q12+2*n4*q12-2*q13-2*n2*q13+2*n4*q13-2*q23-2*n2*q23+2*n4*q23+q33+n1*q33-n2*q33,-2*q12+2*n4*q12-2*q13+2*n4*q13-2*q23+2*n4*q23-q33+n4*q33)+mbox1l(1+n1,-1+n2,1+n3,-1+n4)*prf(-2*n3*q13-n3*q33,-2*q12+2*n4*q12-2*q13+2*n4*q13-2*q23+2*n4*q23-q33+n4*q33)+mbox1l(n1,n2,1+n3,-1+n4)*prf(2*n3*q13+n3*q33,-2*q12+2*n4*q12-2*q13+2*n4*q13-2*q23+2*n4*q23-q33+n4*q33);
	Identify,ifmatch->jump mbox1l(1,1,n3?neg_,1) = tmpprf(1,2*ep+n3)*mbox1l(1,0,n3,2)*prf(-2*M`j'^2,2*q12+2*q13+2*q23+q33)+tmpprf(1,2*ep+n3)*mbox1l(2,1,n3,0)*prf(-2*M`j'^2,2*q12+2*q13+2*q23+q33)+tmpprf(1,2*ep+n3)*mbox1l(0,2,n3,1)*prf(4*M`j'^2-2*q12-2*q13-2*q23-q33,q13+q23)+tmpprf(1,2*ep+n3)*mbox1l(1,2,n3,0)*prf(-8*M`j'^2*q12+4*q12^2-2*M`j'^2*q13+4*q12*q13-2*M`j'^2*q23+4*q12*q23+2*q12*q33,2*q12*q13+2*q13^2+2*q12*q23+4*q13*q23+2*q23^2+q13*q33+q23*q33)+tmpprf(1,2*ep+n3)*mbox1l(1,1,1+n3,0)*prf(-4*M`j'^2*n3*q12+2*n3*q12^2-2*M`j'^2*n3*q13+2*n3*q12*q13-2*M`j'^2*n3*q23+2*n3*q12*q23+n3*q12*q33,2*q12*q13+2*q13^2+2*q12*q23+4*q13*q23+2*q23^2+q13*q33+q23*q33)+tmpprf(1,2*ep+n3)*mbox1l(1,1,2+n3,0)*prf(2*M`j'^2*q12*q13+2*M`j'^2*n3*q12*q13-2*q12^2*q13-2*n3*q12^2*q13-2*M`j'^2*q12*q23-2*M`j'^2*n3*q12*q23-q12^2*q33-n3*q12^2*q33,q13^2+2*q13*q23+q23^2-2*q12*q33)+tmpprf(1,2*ep+n3)*mbox1l(1,0,1+n3,2)*prf(-4*M`j'^2*q12*q13^2-4*M`j'^2*q12*q13*q23+4*M`j'^2*q12^2*q33-2*M`j'^2*q12*q13*q33+2*M`j'^2*q12*q23*q33,-2*q12*q13^2-2*q13^3-4*q12*q13*q23-6*q13^2*q23-2*q12*q23^2-6*q13*q23^2-2*q23^3+4*q12^2*q33+4*q12*q13*q33-q13^2*q33+4*q12*q23*q33-2*q13*q23*q33-q23^2*q33+2*q12*q33^2)+mbox1l(1,1,1+n3,1)*(tmpprf(ep,2*ep+n3)*prf(4*q12*q13^2+4*q12*q13*q23-4*q12^2*q33+2*q12*q13*q33-2*q12*q23*q33,q13^2+2*q13*q23+q23^2-2*q12*q33)+tmpprf(1,2*ep+n3)*prf(2*q12*q13^2+4*n3*q12*q13^2+2*q12*q13*q23+4*n3*q12*q13*q23-2*q12^2*q33-4*n3*q12^2*q33+q12*q13*q33+2*n3*q12*q13*q33-q12*q23*q33-2*n3*q12*q23*q33,q13^2+2*q13*q23+q23^2-2*q12*q33))+tmpprf(1,2*ep+n3)*mbox1l(2,0,n3,1)*prf(-2*M`j'^2*q13-2*M`j'^2*q23-4*M`j'^2*q33+2*q12*q33+2*q13*q33+2*q23*q33+q33^2,2*q12*q13+2*q13^2+2*q12*q23+4*q13*q23+2*q23^2+q13*q33+q23*q33)+tmpprf(1,2*ep+n3)*mbox1l(0,1,1+n3,1)*prf(4*M`j'^2*n3*q12-2*n3*q12^2+8*M`j'^2*n3*q13-6*n3*q12*q13-4*n3*q13^2+4*M`j'^2*n3*q23-4*n3*q12*q23-6*n3*q13*q23-2*n3*q23^2+4*M`j'^2*n3*q33-3*n3*q12*q33-4*n3*q13*q33-3*n3*q23*q33-n3*q33^2,2*q12*q13+2*q13^2+2*q12*q23+4*q13*q23+2*q23^2+q13*q33+q23*q33)+tmpprf(1,2*ep+n3)*mbox1l(1,0,1+n3,1)*prf(-6*M`j'^2*n3*q13+2*n3*q12*q13+2*n3*q13^2-2*M`j'^2*n3*q23+2*n3*q13*q23-4*M`j'^2*n3*q33+2*n3*q12*q33+3*n3*q13*q33+2*n3*q23*q33+n3*q33^2,2*q12*q13+2*q13^2+2*q12*q23+4*q13*q23+2*q23^2+q13*q33+q23*q33)+tmpprf(1,2*ep+n3)*mbox1l(1,1,2+n3,1)*prf(-4*q12^2*q13^2-4*n3*q12^2*q13^2-8*M`j'^2*q12*q13*q23-8*M`j'^2*n3*q12*q13*q23+4*M`j'^2*q12^2*q33+4*M`j'^2*n3*q12^2*q33-4*q12^2*q13*q33-4*n3*q12^2*q13*q33-q12^2*q33^2-n3*q12^2*q33^2,q13^2+2*q13*q23+q23^2-2*q12*q33)+tmpprf(1,2*ep+n3)*mbox1l(0,2,1+n3,1)*prf(-8*M`j'^2*q12*q13^2+4*q12^2*q13^2+4*q12*q13^3-8*M`j'^2*q12*q13*q23+4*q12^2*q13*q23+8*q12*q13^2*q23+4*q12*q13*q23^2+8*M`j'^2*q12^2*q33-4*q12^3*q33-4*M`j'^2*q12*q13*q33-2*q12^2*q13*q33+4*q12*q13^2*q33+4*M`j'^2*q12*q23*q33-6*q12^2*q23*q33+2*q12*q13*q23*q33-2*q12*q23^2*q33-2*q12^2*q33^2+q12*q13*q33^2-q12*q23*q33^2,q13^3+3*q13^2*q23+3*q13*q23^2+q23^3-2*q12*q13*q33-2*q12*q23*q33)+tmpprf(1,2*ep+n3)*mbox1l(2,1,1+n3,0)*prf(8*M`j'^2*q12*q13^3+12*M`j'^2*q12*q13^2*q23-4*M`j'^2*q12*q23^3-12*M`j'^2*q12^2*q13*q33+4*q12^3*q13*q33+2*M`j'^2*q12*q13^2*q33+4*q12^2*q13^2*q33+4*M`j'^2*q12^2*q23*q33-4*q12^3*q23*q33-2*M`j'^2*q12*q23^2*q33-4*q12^2*q23^2*q33+2*q12^2*q13*q33^2-2*q12^2*q23*q33^2,2*q12*q13^3+2*q13^4+6*q12*q13^2*q23+8*q13^3*q23+6*q12*q13*q23^2+12*q13^2*q23^2+2*q12*q23^3+8*q13*q23^3+2*q23^4-4*q12^2*q13*q33-4*q12*q13^2*q33+q13^3*q33-4*q12^2*q23*q33-8*q12*q13*q23*q33+3*q13^2*q23*q33-4*q12*q23^2*q33+3*q13*q23^2*q33+q23^3*q33-2*q12*q13*q33^2-2*q12*q23*q33^2)+tmpprf(1,2*ep+n3)*mbox1l(1,2,1+n3,0)*prf(16*M`j'^2*q12^2*q13^2-8*q12^3*q13^2+4*M`j'^2*q12*q13^3-8*q12^2*q13^3+16*M`j'^2*q12^2*q13*q23-8*q12^3*q13*q23+8*M`j'^2*q12*q13^2*q23-16*q12^2*q13^2*q23+4*M`j'^2*q12*q13*q23^2-8*q12^2*q13*q23^2-16*M`j'^2*q12^3*q33+8*q12^4*q33+4*M`j'^2*q12^2*q13*q33+4*q12^3*q13*q33+2*M`j'^2*q12*q13^2*q33-8*q12^2*q13^2*q33-12*M`j'^2*q12^2*q23*q33+12*q12^3*q23*q33-4*q12^2*q13*q23*q33-2*M`j'^2*q12*q23^2*q33+4*q12^2*q23^2*q33+4*q12^3*q33^2-2*q12^2*q13*q33^2+2*q12^2*q23*q33^2,2*q12*q13^3+2*q13^4+6*q12*q13^2*q23+8*q13^3*q23+6*q12*q13*q23^2+12*q13^2*q23^2+2*q12*q23^3+8*q13*q23^3+2*q23^4-4*q12^2*q13*q33-4*q12*q13^2*q33+q13^3*q33-4*q12^2*q23*q33-8*q12*q13*q23*q33+3*q13^2*q23*q33-4*q12*q23^2*q33+3*q13*q23^2*q33+q23^3*q33-2*q12*q13*q33^2-2*q12*q23*q33^2)+tmpprf(1,2*ep+n3)*mbox1l(2,0,1+n3,1)*prf(4*M`j'^2*q12*q13^3+4*M`j'^2*q13^4+8*M`j'^2*q12*q13^2*q23+12*M`j'^2*q13^3*q23+4*M`j'^2*q12*q13*q23^2+12*M`j'^2*q13^2*q23^2+4*M`j'^2*q13*q23^3-4*M`j'^2*q12^2*q13*q33-2*M`j'^2*q12*q13^2*q33-4*M`j'^2*q12^2*q23*q33-8*M`j'^2*q12*q13*q23*q33-6*M`j'^2*q12*q23^2*q33+4*M`j'^2*q12*q13*q33^2-2*q12^2*q13*q33^2-2*q12*q13^2*q33^2-4*M`j'^2*q12*q23*q33^2+2*q12^2*q23*q33^2+2*q12*q23^2*q33^2-q12*q13*q33^3+q12*q23*q33^3,2*q12*q13^3+2*q13^4+6*q12*q13^2*q23+8*q13^3*q23+6*q12*q13*q23^2+12*q13^2*q23^2+2*q12*q23^3+8*q13*q23^3+2*q23^4-4*q12^2*q13*q33-4*q12*q13^2*q33+q13^3*q33-4*q12^2*q23*q33-8*q12*q13*q23*q33+3*q13^2*q23*q33-4*q12*q23^2*q33+3*q13*q23^2*q33+q23^3*q33-2*q12*q13*q33^2-2*q12*q23*q33^2)+tmpprf(1,2*ep+n3)*mbox1l(0,1,2+n3,1)*prf(-4*M`j'^2*q12^2*q13^2-4*M`j'^2*n3*q12^2*q13^2+4*q12^3*q13^2+4*n3*q12^3*q13^2-16*M`j'^2*q12*q13^3-16*M`j'^2*n3*q12*q13^3+12*q12^2*q13^3+12*n3*q12^2*q13^3+8*q12*q13^4+8*n3*q12*q13^4+4*q12^3*q13*q23+4*n3*q12^3*q13*q23-16*M`j'^2*q12*q13^2*q23-16*M`j'^2*n3*q12*q13^2*q23+20*q12^2*q13^2*q23+20*n3*q12^2*q13^2*q23+20*q12*q13^3*q23+20*n3*q12*q13^3*q23+4*M`j'^2*q12^2*q23^2+4*M`j'^2*n3*q12^2*q23^2+8*M`j'^2*q12*q13*q23^2+8*M`j'^2*n3*q12*q13*q23^2+8*q12^2*q13*q23^2+8*n3*q12^2*q13*q23^2+4*M`j'^2*q13^2*q23^2+4*M`j'^2*n3*q13^2*q23^2+16*q12*q13^2*q23^2+16*n3*q12*q13^2*q23^2+8*M`j'^2*q12*q23^3+8*M`j'^2*n3*q12*q23^3+8*M`j'^2*q13*q23^3+8*M`j'^2*n3*q13*q23^3+4*q12*q13*q23^3+4*n3*q12*q13*q23^3+4*M`j'^2*q23^4+4*M`j'^2*n3*q23^4+12*M`j'^2*q12^2*q13*q33+12*M`j'^2*n3*q12^2*q13*q33-6*q12^3*q13*q33-6*n3*q12^3*q13*q33-16*M`j'^2*q12*q13^2*q33-16*M`j'^2*n3*q12*q13^2*q33+4*q12^2*q13^2*q33+4*n3*q12^2*q13^2*q33+12*q12*q13^3*q33+12*n3*q12*q13^3*q33-4*M`j'^2*q12^2*q23*q33-4*M`j'^2*n3*q12^2*q23*q33+2*q12^3*q23*q33+2*n3*q12^3*q23*q33-4*M`j'^2*q12*q13*q23*q33-4*M`j'^2*n3*q12*q13*q23*q33+16*q12*q13^2*q23*q33+16*n3*q12*q13^2*q23*q33-4*M`j'^2*q12*q23^2*q33-4*M`j'^2*n3*q12*q23^2*q33+4*q12^2*q23^2*q33+4*n3*q12^2*q23^2*q33+6*q12*q13*q23^2*q33+6*n3*q12*q13*q23^2*q33+2*q12*q23^3*q33+2*n3*q12*q23^3*q33+8*M`j'^2*q12^2*q33^2+8*M`j'^2*n3*q12^2*q33^2-4*q12^3*q33^2-4*n3*q12^3*q33^2-4*M`j'^2*q12*q13*q33^2-4*M`j'^2*n3*q12*q13*q33^2-5*q12^2*q13*q33^2-5*n3*q12^2*q13*q33^2+6*q12*q13^2*q33^2+6*n3*q12*q13^2*q33^2+4*M`j'^2*q12*q23*q33^2+4*M`j'^2*n3*q12*q23*q33^2-5*q12^2*q23*q33^2-5*n3*q12^2*q23*q33^2+q12*q13*q23*q33^2+n3*q12*q13*q23*q33^2-q12*q23^2*q33^2-n3*q12*q23^2*q33^2-2*q12^2*q33^3-2*n3*q12^2*q33^3+q12*q13*q33^3+n3*q12*q13*q33^3-q12*q23*q33^3-n3*q12*q23*q33^3,2*q12*q13^3+2*q13^4+6*q12*q13^2*q23+8*q13^3*q23+6*q12*q13*q23^2+12*q13^2*q23^2+2*q12*q23^3+8*q13*q23^3+2*q23^4-4*q12^2*q13*q33-4*q12*q13^2*q33+q13^3*q33-4*q12^2*q23*q33-8*q12*q13*q23*q33+3*q13^2*q23*q33-4*q12*q23^2*q33+3*q13*q23^2*q33+q23^3*q33-2*q12*q13*q33^2-2*q12*q23*q33^2)+tmpprf(1,2*ep+n3)*mbox1l(1,0,2+n3,1)*prf(8*M`j'^2*q12*q13^3+8*M`j'^2*n3*q12*q13^3-4*q12^2*q13^3-4*n3*q12^2*q13^3-4*q12*q13^4-4*n3*q12*q13^4+8*M`j'^2*q12*q13^2*q23+8*M`j'^2*n3*q12*q13^2*q23-4*q12^2*q13^2*q23-4*n3*q12^2*q13^2*q23+4*M`j'^2*q13^3*q23+4*M`j'^2*n3*q13^3*q23-8*q12*q13^3*q23-8*n3*q12*q13^3*q23+8*M`j'^2*q13^2*q23^2+8*M`j'^2*n3*q13^2*q23^2-4*q12*q13^2*q23^2-4*n3*q12*q13^2*q23^2+4*M`j'^2*q13*q23^3+4*M`j'^2*n3*q13*q23^3-4*M`j'^2*q12^2*q13*q33-4*M`j'^2*n3*q12^2*q13*q33+10*M`j'^2*q12*q13^2*q33+10*M`j'^2*n3*q12*q13^2*q33-6*q12^2*q13^2*q33-6*n3*q12^2*q13^2*q33-8*q12*q13^3*q33-8*n3*q12*q13^3*q33-4*M`j'^2*q12^2*q23*q33-4*M`j'^2*n3*q12^2*q23*q33-12*M`j'^2*q12*q13*q23*q33-12*M`j'^2*n3*q12*q13*q23*q33+2*q12^2*q13*q23*q33+2*n3*q12^2*q13*q23*q33-6*q12*q13^2*q23*q33-6*n3*q12*q13^2*q23*q33-6*M`j'^2*q12*q23^2*q33-6*M`j'^2*n3*q12*q23^2*q33+2*q12*q13*q23^2*q33+2*n3*q12*q13*q23^2*q33+4*M`j'^2*q12*q13*q33^2+4*M`j'^2*n3*q12*q13*q33^2-2*q12^2*q13*q33^2-2*n3*q12^2*q13*q33^2-5*q12*q13^2*q33^2-5*n3*q12*q13^2*q33^2-4*M`j'^2*q12*q23*q33^2-4*M`j'^2*n3*q12*q23*q33^2+2*q12^2*q23*q33^2+2*n3*q12^2*q23*q33^2+q12*q13*q23*q33^2+n3*q12*q13*q23*q33^2+2*q12*q23^2*q33^2+2*n3*q12*q23^2*q33^2-q12*q13*q33^3-n3*q12*q13*q33^3+q12*q23*q33^3+n3*q12*q23*q33^3,2*q12*q13^3+2*q13^4+6*q12*q13^2*q23+8*q13^3*q23+6*q12*q13*q23^2+12*q13^2*q23^2+2*q12*q23^3+8*q13*q23^3+2*q23^4-4*q12^2*q13*q33-4*q12*q13^2*q33+q13^3*q33-4*q12^2*q23*q33-8*q12*q13*q23*q33+3*q13^2*q23*q33-4*q12*q23^2*q33+3*q13*q23^2*q33+q23^3*q33-2*q12*q13*q33^2-2*q12*q23*q33^2);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?pos_,n3?{,>1},n4?neg_) = mbox1l(n1,-1+n2,n3,1+n4)*prf(-4*q13-q33,2*q12)+mbox1l(-1+n1,n2,n3,1+n4)*prf(2*q12-2*q13+2*q23-q33,2*q12)+mbox1l(1+n1,-1+n2,-1+n3,1+n4)*prf(-2*n1*q13-n1*q33,-2*q12+2*n3*q12)+mbox1l(-1+n1,1+n2,-1+n3,1+n4)*prf(-2*n2*q13-n2*q33,-2*q12+2*n3*q12)+mbox1l(n1,-1+n2,-1+n3,2+n4)*prf(-2*q13-2*n4*q13+q33+n4*q33,-2*q12+2*n3*q12)+mbox1l(-1+n1,n2,-1+n3,2+n4)*prf(2*q13+2*n4*q13+q33+n4*q33,-2*q12+2*n3*q12)+mbox1l(1+n1,n2,-2+n3,1+n4)*prf(2*M`j'^2*n1*q13-2*n1*q12*q13-2*M`j'^2*n1*q23+2*M`j'^2*n1*q33-n1*q12*q33,-2*M`j'^2*q12+2*M`j'^2*n3*q12)+mbox1l(n1,1+n2,-2+n3,1+n4)*prf(6*M`j'^2*n2*q13-2*n2*q12*q13+2*M`j'^2*n2*q23+2*M`j'^2*n2*q33-n2*q12*q33,-2*M`j'^2*q12+2*M`j'^2*n3*q12)+mbox1l(n1,n2,-2+n3,2+n4)*prf(2*M`j'^2*q13+2*M`j'^2*n4*q13-2*q12*q13-2*n4*q12*q13-2*M`j'^2*q23-2*M`j'^2*n4*q23-2*M`j'^2*q33-2*M`j'^2*n4*q33-q12*q33-n4*q12*q33,-2*M`j'^2*q12+2*M`j'^2*n3*q12)+mbox1l(n1,n2,-1+n3,1+n4)*(tmpprf(ep,1)*prf(-4*q12*q13-2*q12*q33,-2*M`j'^2*q12+2*M`j'^2*n3*q12)+prf(-8*M`j'^2*q13-4*M`j'^2*n2*q13+6*M`j'^2*n3*q13-2*M`j'^2*n4*q13+10*q12*q13-2*n1*q12*q13-2*n2*q12*q13-4*n3*q12*q13-2*n4*q12*q13+4*M`j'^2*q23+2*M`j'^2*n1*q23-2*M`j'^2*n2*q23-2*M`j'^2*n3*q23+2*M`j'^2*n4*q23-2*M`j'^2*q33-M`j'^2*n1*q33-M`j'^2*n2*q33+2*M`j'^2*n3*q33+5*q12*q33-n1*q12*q33-n2*q12*q33-2*n3*q12*q33-n4*q12*q33,-2*M`j'^2*q12+2*M`j'^2*n3*q12))+mbox1l(n1,n2,-1+n3,2+n4)*prf(-4*q12*q13^2-4*n4*q12*q13^2-8*M`j'^2*q13*q23-8*M`j'^2*n4*q13*q23+4*M`j'^2*q12*q33+4*M`j'^2*n4*q12*q33-4*q12*q13*q33-4*n4*q12*q13*q33-q12*q33^2-n4*q12*q33^2,-2*M`j'^2*q12+2*M`j'^2*n3*q12);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?{,>1},n3?pos_,n4?neg_) = mbox1l(n1,n2,-1+n3,1+n4)*prf(-2*q13-2*q23-q33,2*q12)+mbox1l(1+n1,-1+n2,-1+n3,1+n4)*prf(-(n1*q33),-2*q12+2*n2*q12)+mbox1l(-1+n1,n2,n3,1+n4)*prf(2*q12+2*q13+2*q23+q33,2*q12)+mbox1l(n1,-1+n2,n3,1+n4)*prf(2*q13-2*n3*q13+2*n4*q13+n1*q33-n3*q33,-2*q12+2*n2*q12)+mbox1l(-1+n1,-1+n2,1+n3,1+n4)*prf(2*n3*q13+n3*q33,-2*q12+2*n2*q12)+mbox1l(-1+n1,-1+n2,n3,2+n4)*prf(-2*q13-2*n4*q13-q33-n4*q33,-2*q12+2*n2*q12)+mbox1l(n1,-1+n2,-1+n3,2+n4)*prf(q33+n4*q33,-2*q12+2*n2*q12);
	Identify,ifmatch->jump mbox1l(n1?{,>1},n2?pos_,n3?pos_,n4?neg_) = mbox1l(-2+n1,n2,n3,2+n4)*prf(q12+n4*q12+q23+n4*q23,-q12+n1*q12)+mbox1l(n1,n2,-1+n3,1+n4)*prf(-q33,2*q12)+mbox1l(n1,-1+n2,n3,1+n4)*prf(q33,2*q12)+mbox1l(-1+n1,1+n2,-1+n3,1+n4)*prf(-2*n2*q13-2*n2*q23-n2*q33,-2*q12+2*n1*q12)+mbox1l(-1+n1,n2,n3,1+n4)*prf(-4*q12+2*n1*q12-2*n4*q12+2*n2*q13-2*n3*q13-2*q23+2*n2*q23-2*n4*q23+n2*q33-n3*q33,-2*q12+2*n1*q12)+mbox1l(-1+n1,-1+n2,1+n3,1+n4)*prf(2*n3*q13+n3*q33,-2*q12+2*n1*q12)+mbox1l(-1+n1,-1+n2,n3,2+n4)*prf(-q33-n4*q33,-2*q12+2*n1*q12)+mbox1l(-1+n1,n2,-1+n3,2+n4)*prf(q33+n4*q33,-2*q12+2*n1*q12);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?pos_,n3?{,>1},n4?neg0_) = mbox1l(-1+n1,n2,n3,n4)*prf(1,2*q12)+mbox1l(n1,-1+n2,n3,n4)*prf(1,2*q12)+mbox1l(1+n1,-1+n2,-1+n3,n4)*prf(n1,-2*q12+2*n3*q12)+mbox1l(-1+n1,1+n2,-1+n3,n4)*prf(n2,-2*q12+2*n3*q12)+mbox1l(-1+n1,n2,-1+n3,1+n4)*prf(n4,-2*q12+2*n3*q12)+mbox1l(n1,-1+n2,-1+n3,1+n4)*prf(n4,-2*q12+2*n3*q12)+mbox1l(1+n1,n2,-2+n3,n4)*prf(-2*M`j'^2*n1+n1*q12,-2*M`j'^2*q12+2*M`j'^2*n3*q12)+mbox1l(n1,1+n2,-2+n3,n4)*prf(-2*M`j'^2*n2+n2*q12,-2*M`j'^2*q12+2*M`j'^2*n3*q12)+mbox1l(n1,n2,-2+n3,1+n4)*prf(-2*M`j'^2*n4+n4*q12,-2*M`j'^2*q12+2*M`j'^2*n3*q12)+mbox1l(n1,n2,-1+n3,n4)*(tmpprf(ep,1)*prf(1,-M`j'^2+M`j'^2*n3)+prf(2*M`j'^2+M`j'^2*n1+M`j'^2*n2-2*M`j'^2*n3-6*q12+n1*q12+n2*q12+2*n3*q12+n4*q12,-2*M`j'^2*q12+2*M`j'^2*n3*q12))+mbox1l(n1,n2,-1+n3,1+n4)*prf(-2*M`j'^2*n4*q13+2*n4*q12*q13+2*M`j'^2*n4*q23+n4*q12*q33,-2*M`j'^2*q12+2*M`j'^2*n3*q12);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?{,>1},n3?pos_,n4?neg0_) = mbox1l(-1+n1,n2,n3,n4)*prf(-1,2*q12)+mbox1l(n1,n2,-1+n3,n4)*prf(1,2*q12)+mbox1l(1+n1,-1+n2,-1+n3,n4)*prf(n1,-2*q12+2*n2*q12)+mbox1l(-1+n1,-1+n2,1+n3,n4)*prf(-n3,-2*q12+2*n2*q12)+mbox1l(n1,-1+n2,n3,n4)*prf(-n1+n3,-2*q12+2*n2*q12)+mbox1l(-1+n1,-1+n2,n3,1+n4)*prf(-n4,-2*q12+2*n2*q12)+mbox1l(n1,-1+n2,-1+n3,1+n4)*prf(n4,-2*q12+2*n2*q12)+mbox1l(n1,-1+n2,n3,1+n4)*prf(n4*q13,-q12+n2*q12);
	Identify,ifmatch->jump mbox1l(n1?{,>1},n2?pos_,n3?pos_,n4?neg0_) = mbox1l(n1,-1+n2,n3,n4)*prf(-1,2*q12)+mbox1l(n1,n2,-1+n3,n4)*prf(1,2*q12)+mbox1l(-1+n1,1+n2,-1+n3,n4)*prf(n2,-2*q12+2*n1*q12)+mbox1l(-1+n1,-1+n2,1+n3,n4)*prf(-n3,-2*q12+2*n1*q12)+mbox1l(-1+n1,n2,n3,n4)*prf(-n2+n3,-2*q12+2*n1*q12)+mbox1l(-1+n1,-1+n2,n3,1+n4)*prf(-n4,-2*q12+2*n1*q12)+mbox1l(-1+n1,n2,-1+n3,1+n4)*prf(n4,-2*q12+2*n1*q12)+mbox1l(-1+n1,n2,n3,1+n4)*prf(-(n4*q12)-n4*q23,-q12+n1*q12);
	If (Match(mbox1l(n1?!{n2?},n2?!{n1?},n3?,n4?)));
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?pos_,n3?pos_,n4?neg0_) = mbox1l(1+n1,n2,-1+n3,n4)*prf(n1,n1-n2)+mbox1l(n1,1+n2,-1+n3,n4)*prf(-n2,n1-n2)+mbox1l(n1,-1+n2,n3,1+n4)*prf(-(n4*q13),n1*q12-n2*q12)+mbox1l(-1+n1,n2,n3,1+n4)*prf(-(n4*q12)-n4*q23,n1*q12-n2*q12)+mbox1l(n1,n2,-1+n3,1+n4)*prf(n4*q12+n4*q13+n4*q23,n1*q12-n2*q12);
	EndIf;
	Identify,ifmatch->jump mbox1l(1,1,1,n4?neg_) = tmpprf(1,2*ep+n4)*mbox1l(0,1,2,n4)*prf(-M`j'^2,q12)+tmpprf(1,2*ep+n4)*mbox1l(0,2,1,n4)*prf(-M`j'^2,q12)+tmpprf(1,2*ep+n4)*mbox1l(1,0,2,n4)*prf(-M`j'^2,q12)+tmpprf(1,2*ep+n4)*mbox1l(2,0,1,n4)*prf(-M`j'^2,q12)+tmpprf(1,2*ep+n4)*mbox1l(0,1,1,1+n4)*prf(-(M`j'^2*n4),q12)+tmpprf(1,2*ep+n4)*mbox1l(1,0,1,1+n4)*prf(-(M`j'^2*n4),q12)+tmpprf(1,2*ep+n4)*mbox1l(1,2,0,n4)*prf(2*M`j'^2-q12,q12)+tmpprf(1,2*ep+n4)*mbox1l(2,1,0,n4)*prf(2*M`j'^2-q12,q12)+tmpprf(1,2*ep+n4)*mbox1l(1,1,0,1+n4)*prf(2*M`j'^2*n4-n4*q12,q12)+tmpprf(1,2*ep+n4)*mbox1l(1,0,2,1+n4)*prf(-4*M`j'^2*q13-M`j'^2*q33,q12)+tmpprf(1,2*ep+n4)*mbox1l(0,2,1,1+n4)*prf(-2*M`j'^2*q13-M`j'^2*q33,q12)+tmpprf(1,2*ep+n4)*mbox1l(2,0,1,1+n4)*prf(-2*M`j'^2*q13-M`j'^2*q33,q12)+tmpprf(1,2*ep+n4)*mbox1l(0,1,2,1+n4)*prf(2*M`j'^2*q12-2*M`j'^2*q13+2*M`j'^2*q23-M`j'^2*q33,q12)+mbox1l(1,1,1,1+n4)*(tmpprf(ep,2*ep+n4)*prf(-4*q13-2*q33,1)+tmpprf(1,2*ep+n4)*prf(-2*q13-4*n4*q13-q33-2*n4*q33,1))+tmpprf(1,2*ep+n4)*mbox1l(1,0,1,2+n4)*prf(-2*M`j'^2*q13-2*M`j'^2*n4*q13+M`j'^2*q33+M`j'^2*n4*q33,q12)+tmpprf(1,2*ep+n4)*mbox1l(0,1,1,2+n4)*prf(2*M`j'^2*q13+2*M`j'^2*n4*q13+M`j'^2*q33+M`j'^2*n4*q33,q12)+tmpprf(1,2*ep+n4)*mbox1l(2,1,0,1+n4)*prf(2*M`j'^2*q13-2*q12*q13-2*M`j'^2*q23+2*M`j'^2*q33-q12*q33,q12)+tmpprf(1,2*ep+n4)*mbox1l(1,2,0,1+n4)*prf(6*M`j'^2*q13-2*q12*q13+2*M`j'^2*q23+2*M`j'^2*q33-q12*q33,q12)+tmpprf(1,2*ep+n4)*mbox1l(1,1,0,2+n4)*prf(2*M`j'^2*q13+2*M`j'^2*n4*q13-2*q12*q13-2*n4*q12*q13-2*M`j'^2*q23-2*M`j'^2*n4*q23-2*M`j'^2*q33-2*M`j'^2*n4*q33-q12*q33-n4*q12*q33,q12)+tmpprf(1,2*ep+n4)*mbox1l(1,1,1,2+n4)*prf(-4*q12*q13^2-4*n4*q12*q13^2-8*M`j'^2*q13*q23-8*M`j'^2*n4*q13*q23+4*M`j'^2*q12*q33+4*M`j'^2*n4*q12*q33-4*q12*q13*q33-4*n4*q12*q13*q33-q12*q33^2-n4*q12*q33^2,q12);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?pos_,n3?pos_,n4?{,>1}) = mbox1l(n1,n2,1+n3,-2+n4)*prf(-2*M`j'^2*n3*q12,-4*q12*q13^2+4*n4*q12*q13^2-8*M`j'^2*q13*q23+8*M`j'^2*n4*q13*q23+4*M`j'^2*q12*q33-4*M`j'^2*n4*q12*q33-4*q12*q13*q33+4*n4*q12*q13*q33-q12*q33^2+n4*q12*q33^2)+mbox1l(n1,-1+n2,1+n3,-1+n4)*prf(-8*M`j'^2*n3*q13,-4*q12*q13^2+4*n4*q12*q13^2-8*M`j'^2*q13*q23+8*M`j'^2*n4*q13*q23+4*M`j'^2*q12*q33-4*M`j'^2*n4*q12*q33-4*q12*q13*q33+4*n4*q12*q13*q33-q12*q33^2+n4*q12*q33^2)+mbox1l(-1+n1,1+n2,n3,-1+n4)*prf(-4*M`j'^2*n2*q12^2-8*M`j'^2*n2*q12*q23-4*M`j'^2*n2*q23^2,-8*q12*q13^3+8*n4*q12*q13^3-16*M`j'^2*q13^2*q23+16*M`j'^2*n4*q13^2*q23+8*M`j'^2*q12*q13*q33-8*M`j'^2*n4*q12*q13*q33-12*q12*q13^2*q33+12*n4*q12*q13^2*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n4*q13*q23*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n4*q12*q33^2-6*q12*q13*q33^2+6*n4*q12*q13*q33^2-q12*q33^3+n4*q12*q33^3)+mbox1l(1+n1,n2,n3,-2+n4)*prf(8*M`j'^2*n1*q12*q13-2*M`j'^2*n1*q12*q33,-8*q12*q13^3+8*n4*q12*q13^3-16*M`j'^2*q13^2*q23+16*M`j'^2*n4*q13^2*q23+8*M`j'^2*q12*q13*q33-8*M`j'^2*n4*q12*q13*q33-12*q12*q13^2*q33+12*n4*q12*q13^2*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n4*q13*q23*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n4*q12*q33^2-6*q12*q13*q33^2+6*n4*q12*q13*q33^2-q12*q33^3+n4*q12*q33^3)+mbox1l(n1,1+n2,n3,-2+n4)*prf(4*M`j'^2*n2*q12^2-4*M`j'^2*n2*q12*q13+4*M`j'^2*n2*q12*q23-2*M`j'^2*n2*q12*q33,-8*q12*q13^3+8*n4*q12*q13^3-16*M`j'^2*q13^2*q23+16*M`j'^2*n4*q13^2*q23+8*M`j'^2*q12*q13*q33-8*M`j'^2*n4*q12*q13*q33-12*q12*q13^2*q33+12*n4*q12*q13^2*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n4*q13*q23*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n4*q12*q33^2-6*q12*q13*q33^2+6*n4*q12*q13*q33^2-q12*q33^3+n4*q12*q33^3)+mbox1l(1+n1,-1+n2,n3,-1+n4)*prf(-4*M`j'^2*n1*q13^2-8*M`j'^2*n1*q13*q33,-8*q12*q13^3+8*n4*q12*q13^3-16*M`j'^2*q13^2*q23+16*M`j'^2*n4*q13^2*q23+8*M`j'^2*q12*q13*q33-8*M`j'^2*n4*q12*q13*q33-12*q12*q13^2*q33+12*n4*q12*q13^2*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n4*q13*q23*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n4*q12*q33^2-6*q12*q13*q33^2+6*n4*q12*q13*q33^2-q12*q33^3+n4*q12*q33^3)+mbox1l(n1,n2,-1+n3,n4)*prf(-4*M`j'^2*q12*q13-4*q12*q13^2-8*M`j'^2*q13*q23+2*M`j'^2*q12*q33-4*q12*q13*q33-q12*q33^2,8*q12*q13^3+16*M`j'^2*q13^2*q23-8*M`j'^2*q12*q13*q33+12*q12*q13^2*q33+8*M`j'^2*q13*q23*q33-4*M`j'^2*q12*q33^2+6*q12*q13*q33^2+q12*q33^3)+mbox1l(1+n1,n2,-1+n3,-1+n4)*prf(-4*M`j'^2*n1*q12*q13+4*M`j'^2*n1*q13^2-4*n1*q12*q13^2-4*M`j'^2*n1*q13*q23+6*M`j'^2*n1*q12*q33+8*M`j'^2*n1*q13*q33-4*n1*q12*q13*q33-n1*q12*q33^2,-8*q12*q13^3+8*n4*q12*q13^3-16*M`j'^2*q13^2*q23+16*M`j'^2*n4*q13^2*q23+8*M`j'^2*q12*q13*q33-8*M`j'^2*n4*q12*q13*q33-12*q12*q13^2*q33+12*n4*q12*q13^2*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n4*q13*q23*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n4*q12*q33^2-6*q12*q13*q33^2+6*n4*q12*q13*q33^2-q12*q33^3+n4*q12*q33^3)+mbox1l(n1,1+n2,-1+n3,-1+n4)*prf(8*M`j'^2*n2*q12*q13+16*M`j'^2*n2*q13^2-4*n2*q12*q13^2+4*M`j'^2*n2*q12*q23+12*M`j'^2*n2*q13*q23+4*M`j'^2*n2*q23^2-2*M`j'^2*n2*q12*q33+8*M`j'^2*n2*q13*q33-4*n2*q12*q13*q33-n2*q12*q33^2,-8*q12*q13^3+8*n4*q12*q13^3-16*M`j'^2*q13^2*q23+16*M`j'^2*n4*q13^2*q23+8*M`j'^2*q12*q13*q33-8*M`j'^2*n4*q12*q13*q33-12*q12*q13^2*q33+12*n4*q12*q13^2*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n4*q13*q23*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n4*q12*q33^2-6*q12*q13*q33^2+6*n4*q12*q13*q33^2-q12*q33^3+n4*q12*q33^3)+mbox1l(n1,n2,n3,-1+n4)*(tmpprf(ep,1)*prf(-8*q12*q13^2-8*q12*q13*q33-2*q12*q33^2,-8*q12*q13^3+8*n4*q12*q13^3-16*M`j'^2*q13^2*q23+16*M`j'^2*n4*q13^2*q23+8*M`j'^2*q12*q13*q33-8*M`j'^2*n4*q12*q13*q33-12*q12*q13^2*q33+12*n4*q12*q13^2*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n4*q13*q23*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n4*q12*q33^2-6*q12*q13*q33^2+6*n4*q12*q13*q33^2-q12*q33^3+n4*q12*q33^3)+prf(-4*M`j'^2*q12*q13-4*M`j'^2*n1*q12*q13-4*M`j'^2*n2*q12*q13+4*M`j'^2*n3*q12*q13+4*M`j'^2*n4*q12*q13-16*M`j'^2*n2*q13^2+16*M`j'^2*n3*q13^2+20*q12*q13^2-4*n1*q12*q13^2-4*n2*q12*q13^2-8*n3*q12*q13^2-4*n4*q12*q13^2-8*M`j'^2*q13*q23+4*M`j'^2*n1*q13*q23-12*M`j'^2*n2*q13*q23+8*M`j'^2*n4*q13*q23+2*M`j'^2*q12*q33-4*M`j'^2*n1*q12*q33+4*M`j'^2*n2*q12*q33+2*M`j'^2*n3*q12*q33-2*M`j'^2*n4*q12*q33-8*M`j'^2*n2*q13*q33+8*M`j'^2*n3*q13*q33+20*q12*q13*q33-4*n1*q12*q13*q33-4*n2*q12*q13*q33-8*n3*q12*q13*q33-4*n4*q12*q13*q33+5*q12*q33^2-n1*q12*q33^2-n2*q12*q33^2-2*n3*q12*q33^2-n4*q12*q33^2,-8*q12*q13^3+8*n4*q12*q13^3-16*M`j'^2*q13^2*q23+16*M`j'^2*n4*q13^2*q23+8*M`j'^2*q12*q13*q33-8*M`j'^2*n4*q12*q13*q33-12*q12*q13^2*q33+12*n4*q12*q13^2*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n4*q13*q23*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n4*q12*q33^2-6*q12*q13*q33^2+6*n4*q12*q13*q33^2-q12*q33^3+n4*q12*q33^3));
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?pos_,n3?{,>1},n4?pos_) = mbox1l(n1,n2,n3,-1+n4)*prf(2*M`j'^2*q13-2*q12*q13-2*M`j'^2*q23-q12*q33,4*q12*q13^2+8*M`j'^2*q13*q23-4*M`j'^2*q12*q33+4*q12*q13*q33+q12*q33^2)+mbox1l(n1,n2,-2+n3,1+n4)*prf(4*M`j'^2*n4*q13^2+4*M`j'^2*n4*q13*q23-4*M`j'^2*n4*q12*q33+2*M`j'^2*n4*q13*q33-2*M`j'^2*n4*q23*q33,-8*q12*q13^3+8*n3*q12*q13^3-16*M`j'^2*q13^2*q23+16*M`j'^2*n3*q13^2*q23+8*M`j'^2*q12*q13*q33-8*M`j'^2*n3*q12*q13*q33-12*q12*q13^2*q33+12*n3*q12*q13^2*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n3*q13*q23*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n3*q12*q33^2-6*q12*q13*q33^2+6*n3*q12*q13*q33^2-q12*q33^3+n3*q12*q33^3)+mbox1l(n1,1+n2,-1+n3,-1+n4)*prf(-4*M`j'^2*n2*q12*q13+4*n2*q12^2*q13+4*M`j'^2*n2*q13^2+4*M`j'^2*n2*q12*q23+4*n2*q12*q13*q23+4*M`j'^2*n2*q23^2-4*M`j'^2*n2*q12*q33+2*n2*q12^2*q33+2*M`j'^2*n2*q13*q33-2*M`j'^2*n2*q23*q33+2*n2*q12*q23*q33,-8*q12*q13^3+8*n3*q12*q13^3-16*M`j'^2*q13^2*q23+16*M`j'^2*n3*q13^2*q23+8*M`j'^2*q12*q13*q33-8*M`j'^2*n3*q12*q13*q33-12*q12*q13^2*q33+12*n3*q12*q13^2*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n3*q13*q23*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n3*q12*q33^2-6*q12*q13*q33^2+6*n3*q12*q13*q33^2-q12*q33^3+n3*q12*q33^3)+mbox1l(n1,-1+n2,n3,n4)*prf(8*M`j'^2*q13^2-4*q12*q13^2-4*q13^3-4*q13^2*q23-4*M`j'^2*q12*q33+4*M`j'^2*q13*q33-4*q13^2*q33-4*M`j'^2*q23*q33+q12*q33^2-q13*q33^2+q23*q33^2,4*q12^2*q13^2+8*M`j'^2*q12*q13*q23+4*q12*q13^2*q23+8*M`j'^2*q13*q23^2-4*M`j'^2*q12^2*q33+4*q12^2*q13*q33-4*M`j'^2*q12*q23*q33+4*q12*q13*q23*q33+q12^2*q33^2+q12*q23*q33^2)+mbox1l(1+n1,n2,-1+n3,-1+n4)*prf(-8*M`j'^2*n1*q12*q13^2+4*n1*q12^2*q13^2+8*n1*q12*q13^3+8*M`j'^2*n1*q13^2*q23+4*n1*q12*q13^2*q23+4*M`j'^2*n1*q12^2*q33-6*M`j'^2*n1*q12*q13*q33-2*n1*q12^2*q13*q33+8*n1*q12*q13^2*q33+2*M`j'^2*n1*q12*q23*q33+2*M`j'^2*n1*q13*q23*q33-2*n1*q12*q13*q23*q33-2*M`j'^2*n1*q23^2*q33-2*n1*q12^2*q33^2+2*n1*q12*q13*q33^2-2*n1*q12*q23*q33^2,-8*q12^2*q13^3+8*n3*q12^2*q13^3-16*M`j'^2*q12*q13^2*q23+16*M`j'^2*n3*q12*q13^2*q23-8*q12*q13^3*q23+8*n3*q12*q13^3*q23-16*M`j'^2*q13^2*q23^2+16*M`j'^2*n3*q13^2*q23^2+8*M`j'^2*q12^2*q13*q33-8*M`j'^2*n3*q12^2*q13*q33-12*q12^2*q13^2*q33+12*n3*q12^2*q13^2*q33-12*q12*q13^2*q23*q33+12*n3*q12*q13^2*q23*q33-8*M`j'^2*q13*q23^2*q33+8*M`j'^2*n3*q13*q23^2*q33+4*M`j'^2*q12^2*q33^2-4*M`j'^2*n3*q12^2*q33^2-6*q12^2*q13*q33^2+6*n3*q12^2*q13*q33^2+4*M`j'^2*q12*q23*q33^2-4*M`j'^2*n3*q12*q23*q33^2-6*q12*q13*q23*q33^2+6*n3*q12*q13*q23*q33^2-q12^2*q33^3+n3*q12^2*q33^3-q12*q23*q33^3+n3*q12*q23*q33^3)+mbox1l(-1+n1,1+n2,-1+n3,n4)*prf(4*M`j'^2*n2*q12^2*q13-4*n2*q12^3*q13-4*n2*q12^2*q13^2-4*M`j'^2*n2*q12^2*q23-8*n2*q12^2*q13*q23-4*n2*q12*q13^2*q23-8*M`j'^2*n2*q12*q23^2-4*M`j'^2*n2*q13*q23^2-4*n2*q12*q13*q23^2-4*M`j'^2*n2*q23^3+4*M`j'^2*n2*q12^2*q33-2*n2*q12^3*q33-4*n2*q12^2*q13*q33+4*M`j'^2*n2*q12*q23*q33-4*n2*q12^2*q23*q33-4*n2*q12*q13*q23*q33-2*n2*q12*q23^2*q33-n2*q12^2*q33^2-n2*q12*q23*q33^2,-8*q12^2*q13^3+8*n3*q12^2*q13^3-16*M`j'^2*q12*q13^2*q23+16*M`j'^2*n3*q12*q13^2*q23+8*M`j'^2*q12^2*q13*q33-8*M`j'^2*n3*q12^2*q13*q33-12*q12^2*q13^2*q33+12*n3*q12^2*q13^2*q33-8*M`j'^2*q12*q13*q23*q33+8*M`j'^2*n3*q12*q13*q23*q33+4*M`j'^2*q12^2*q33^2-4*M`j'^2*n3*q12^2*q33^2-6*q12^2*q13*q33^2+6*n3*q12^2*q13*q33^2-q12^2*q33^3+n3*q12^2*q33^3)+mbox1l(1+n1,n2,-2+n3,n4)*prf(4*M`j'^2*n1*q12^2*q13^2-4*M`j'^2*n1*q12*q13^3+4*M`j'^2*n1*q12^2*q13*q23-4*M`j'^2*n1*q12*q13^2*q23-4*M`j'^2*n1*q13^3*q23-8*M`j'^2*n1*q13^2*q23^2-4*M`j'^2*n1*q13*q23^3-4*M`j'^2*n1*q12^3*q33+2*M`j'^2*n1*q12^2*q13*q33+4*n1*q12^3*q13*q33-8*M`j'^2*n1*q12*q13^2*q33+6*n1*q12^2*q13^2*q33+4*n1*q12*q13^3*q33+2*M`j'^2*n1*q12^2*q23*q33+10*M`j'^2*n1*q12*q13*q23*q33+2*n1*q12^2*q13*q23*q33+2*n1*q12*q13^2*q23*q33+6*M`j'^2*n1*q12*q23^2*q33-2*n1*q12*q13*q23^2*q33+2*n1*q12^3*q33^2-4*M`j'^2*n1*q12*q13*q33^2+3*n1*q12^2*q13*q33^2+4*n1*q12*q13^2*q33^2+4*M`j'^2*n1*q12*q23*q33^2+n1*q12^2*q23*q33^2-n1*q12*q13*q23*q33^2-n1*q12*q23^2*q33^2+n1*q12*q13*q33^3-n1*q12*q23*q33^3,-8*q12^3*q13^3+8*n3*q12^3*q13^3-16*M`j'^2*q12^2*q13^2*q23+16*M`j'^2*n3*q12^2*q13^2*q23-8*q12^2*q13^3*q23+8*n3*q12^2*q13^3*q23-16*M`j'^2*q12*q13^2*q23^2+16*M`j'^2*n3*q12*q13^2*q23^2+8*M`j'^2*q12^3*q13*q33-8*M`j'^2*n3*q12^3*q13*q33-12*q12^3*q13^2*q33+12*n3*q12^3*q13^2*q33-12*q12^2*q13^2*q23*q33+12*n3*q12^2*q13^2*q23*q33-8*M`j'^2*q12*q13*q23^2*q33+8*M`j'^2*n3*q12*q13*q23^2*q33+4*M`j'^2*q12^3*q33^2-4*M`j'^2*n3*q12^3*q33^2-6*q12^3*q13*q33^2+6*n3*q12^3*q13*q33^2+4*M`j'^2*q12^2*q23*q33^2-4*M`j'^2*n3*q12^2*q23*q33^2-6*q12^2*q13*q23*q33^2+6*n3*q12^2*q13*q23*q33^2-q12^3*q33^3+n3*q12^3*q33^3-q12^2*q23*q33^3+n3*q12^2*q23*q33^3)+mbox1l(1+n1,-1+n2,-1+n3,n4)*prf(4*M`j'^2*n1*q12*q13^3+4*M`j'^2*n1*q12*q13^2*q23+4*M`j'^2*n1*q13^3*q23+4*M`j'^2*n1*q13^2*q23^2-4*M`j'^2*n1*q12^2*q13*q33+8*M`j'^2*n1*q12*q13^2*q33-2*n1*q12^2*q13^2*q33-4*n1*q12*q13^3*q33-4*M`j'^2*n1*q12*q13*q23*q33-2*n1*q12*q13^2*q23*q33-4*M`j'^2*n1*q12^2*q33^2+4*M`j'^2*n1*q12*q13*q33^2+n1*q12^2*q13*q33^2-4*n1*q12*q13^2*q33^2-4*M`j'^2*n1*q12*q23*q33^2+n1*q12*q13*q23*q33^2+n1*q12^2*q33^3-n1*q12*q13*q33^3+n1*q12*q23*q33^3,-8*q12^3*q13^3+8*n3*q12^3*q13^3-16*M`j'^2*q12^2*q13^2*q23+16*M`j'^2*n3*q12^2*q13^2*q23-8*q12^2*q13^3*q23+8*n3*q12^2*q13^3*q23-16*M`j'^2*q12*q13^2*q23^2+16*M`j'^2*n3*q12*q13^2*q23^2+8*M`j'^2*q12^3*q13*q33-8*M`j'^2*n3*q12^3*q13*q33-12*q12^3*q13^2*q33+12*n3*q12^3*q13^2*q33-12*q12^2*q13^2*q23*q33+12*n3*q12^2*q13^2*q23*q33-8*M`j'^2*q12*q13*q23^2*q33+8*M`j'^2*n3*q12*q13*q23^2*q33+4*M`j'^2*q12^3*q33^2-4*M`j'^2*n3*q12^3*q33^2-6*q12^3*q13*q33^2+6*n3*q12^3*q13*q33^2+4*M`j'^2*q12^2*q23*q33^2-4*M`j'^2*n3*q12^2*q23*q33^2-6*q12^2*q13*q23*q33^2+6*n3*q12^2*q13*q23*q33^2-q12^3*q33^3+n3*q12^3*q33^3-q12^2*q23*q33^3+n3*q12^2*q23*q33^3)+mbox1l(n1,1+n2,-2+n3,n4)*prf(-8*M`j'^2*n2*q12^2*q13^2+4*n2*q12^3*q13^2-16*M`j'^2*n2*q12*q13^3+12*n2*q12^2*q13^3+8*n2*q12*q13^4-4*M`j'^2*n2*q12^2*q13*q23+4*n2*q12^3*q13*q23-20*M`j'^2*n2*q12*q13^2*q23+20*n2*q12^2*q13^2*q23+20*n2*q12*q13^3*q23+4*M`j'^2*n2*q12^2*q23^2+4*M`j'^2*n2*q12*q13*q23^2+8*n2*q12^2*q13*q23^2+4*M`j'^2*n2*q13^2*q23^2+16*n2*q12*q13^2*q23^2+8*M`j'^2*n2*q12*q23^3+8*M`j'^2*n2*q13*q23^3+4*n2*q12*q13*q23^3+4*M`j'^2*n2*q23^4+4*M`j'^2*n2*q12^3*q33+10*M`j'^2*n2*q12^2*q13*q33-6*n2*q12^3*q13*q33-16*M`j'^2*n2*q12*q13^2*q33+4*n2*q12^2*q13^2*q33+12*n2*q12*q13^3*q33+2*M`j'^2*n2*q12^2*q23*q33+2*n2*q12^3*q23*q33-6*M`j'^2*n2*q12*q13*q23*q33+16*n2*q12*q13^2*q23*q33-2*M`j'^2*n2*q12*q23^2*q33+4*n2*q12^2*q23^2*q33+6*n2*q12*q13*q23^2*q33+2*n2*q12*q23^3*q33+8*M`j'^2*n2*q12^2*q33^2-4*n2*q12^3*q33^2-4*M`j'^2*n2*q12*q13*q33^2-5*n2*q12^2*q13*q33^2+6*n2*q12*q13^2*q33^2+4*M`j'^2*n2*q12*q23*q33^2-5*n2*q12^2*q23*q33^2+n2*q12*q13*q23*q33^2-n2*q12*q23^2*q33^2-2*n2*q12^2*q33^3+n2*q12*q13*q33^3-n2*q12*q23*q33^3,-8*q12^3*q13^3+8*n3*q12^3*q13^3-16*M`j'^2*q12^2*q13^2*q23+16*M`j'^2*n3*q12^2*q13^2*q23-8*q12^2*q13^3*q23+8*n3*q12^2*q13^3*q23-16*M`j'^2*q12*q13^2*q23^2+16*M`j'^2*n3*q12*q13^2*q23^2+8*M`j'^2*q12^3*q13*q33-8*M`j'^2*n3*q12^3*q13*q33-12*q12^3*q13^2*q33+12*n3*q12^3*q13^2*q33-12*q12^2*q13^2*q23*q33+12*n3*q12^2*q13^2*q23*q33-8*M`j'^2*q12*q13*q23^2*q33+8*M`j'^2*n3*q12*q13*q23^2*q33+4*M`j'^2*q12^3*q33^2-4*M`j'^2*n3*q12^3*q33^2-6*q12^3*q13*q33^2+6*n3*q12^3*q13*q33^2+4*M`j'^2*q12^2*q23*q33^2-4*M`j'^2*n3*q12^2*q23*q33^2-6*q12^2*q13*q23*q33^2+6*n3*q12^2*q13*q23*q33^2-q12^3*q33^3+n3*q12^3*q33^3-q12^2*q23*q33^3+n3*q12^2*q23*q33^3)+mbox1l(n1,n2,-1+n3,n4)*(tmpprf(ep,1)*prf(8*q12^2*q13^3+8*q12^2*q13^2*q23+8*q12*q13^3*q23+8*q12*q13^2*q23^2-8*q12^3*q13*q33+8*q12^2*q13^2*q33-8*q12^2*q13*q23*q33+8*q12*q13^2*q23*q33-4*q12^3*q33^2+2*q12^2*q13*q33^2-6*q12^2*q23*q33^2+2*q12*q13*q23*q33^2-2*q12*q23^2*q33^2,-8*q12^3*q13^3+8*n3*q12^3*q13^3-16*M`j'^2*q12^2*q13^2*q23+16*M`j'^2*n3*q12^2*q13^2*q23-8*q12^2*q13^3*q23+8*n3*q12^2*q13^3*q23-16*M`j'^2*q12*q13^2*q23^2+16*M`j'^2*n3*q12*q13^2*q23^2+8*M`j'^2*q12^3*q13*q33-8*M`j'^2*n3*q12^3*q13*q33-12*q12^3*q13^2*q33+12*n3*q12^3*q13^2*q33-12*q12^2*q13^2*q23*q33+12*n3*q12^2*q13^2*q23*q33-8*M`j'^2*q12*q13*q23^2*q33+8*M`j'^2*n3*q12*q13*q23^2*q33+4*M`j'^2*q12^3*q33^2-4*M`j'^2*n3*q12^3*q33^2-6*q12^3*q13*q33^2+6*n3*q12^3*q13*q33^2+4*M`j'^2*q12^2*q23*q33^2-4*M`j'^2*n3*q12^2*q23*q33^2-6*q12^2*q13*q23*q33^2+6*n3*q12^2*q13*q23*q33^2-q12^3*q33^3+n3*q12^3*q33^3-q12^2*q23*q33^3+n3*q12^2*q23*q33^3)+prf(4*M`j'^2*q12^2*q13^2+4*M`j'^2*n1*q12^2*q13^2+4*M`j'^2*n2*q12^2*q13^2-4*M`j'^2*n3*q12^2*q13^2-4*M`j'^2*n4*q12^2*q13^2-4*q12^3*q13^2-4*n1*q12^3*q13^2+4*n3*q12^3*q13^2+16*M`j'^2*q12*q13^3+16*M`j'^2*n2*q12*q13^3-16*M`j'^2*n3*q12*q13^3-32*q12^2*q13^3-4*n2*q12^2*q13^3+16*n3*q12^2*q13^3+8*n4*q12^2*q13^3-8*q12*q13^4-8*n2*q12*q13^4+8*n3*q12*q13^4-4*M`j'^2*q12^2*q13*q23-4*M`j'^2*n1*q12^2*q13*q23+4*M`j'^2*n2*q12^2*q13*q23+4*M`j'^2*n3*q12^2*q13*q23-4*M`j'^2*n4*q12^2*q13*q23+4*M`j'^2*q12*q13^2*q23-8*M`j'^2*n1*q12*q13^2*q23+16*M`j'^2*n2*q12*q13^2*q23-4*M`j'^2*n3*q12*q13^2*q23-4*M`j'^2*n4*q12*q13^2*q23-28*q12^2*q13^2*q23+4*n1*q12^2*q13^2*q23-4*n2*q12^2*q13^2*q23+12*n3*q12^2*q13^2*q23+8*n4*q12^2*q13^2*q23-32*q12*q13^3*q23+8*n1*q12*q13^3*q23-12*n2*q12*q13^3*q23+16*n3*q12*q13^3*q23+8*n4*q12*q13^3*q23-4*M`j'^2*q12*q13*q23^2+4*M`j'^2*n3*q12*q13*q23^2-4*M`j'^2*n4*q12*q13*q23^2+4*M`j'^2*n1*q13^2*q23^2-4*M`j'^2*n2*q13^2*q23^2-24*q12*q13^2*q23^2+8*n1*q12*q13^2*q23^2-4*n2*q12*q13^2*q23^2+8*n3*q12*q13^2*q23^2+8*n4*q12*q13^2*q23^2+4*M`j'^2*n1*q13*q23^3-4*M`j'^2*n2*q13*q23^3-4*M`j'^2*n2*q12^3*q33+4*M`j'^2*n4*q12^3*q33-6*M`j'^2*q12^2*q13*q33+8*M`j'^2*n1*q12^2*q13*q33-12*M`j'^2*n2*q12^2*q13*q33+6*M`j'^2*n3*q12^2*q13*q33-2*M`j'^2*n4*q12^2*q13*q33+20*q12^3*q13*q33-10*n1*q12^3*q13*q33+2*n2*q12^3*q13*q33-4*n3*q12^3*q13*q33-8*n4*q12^3*q13*q33+16*M`j'^2*q12*q13^2*q33+16*M`j'^2*n2*q12*q13^2*q33-16*M`j'^2*n3*q12*q13^2*q33-28*q12^2*q13^2*q33-4*n1*q12^2*q13^2*q33+4*n2*q12^2*q13^2*q33+12*n3*q12^2*q13^2*q33+8*n4*q12^2*q13^2*q33-12*q12*q13^3*q33-12*n2*q12*q13^3*q33+12*n3*q12*q13^3*q33-2*M`j'^2*q12^2*q23*q33-4*M`j'^2*n1*q12^2*q23*q33-4*M`j'^2*n2*q12^2*q23*q33+2*M`j'^2*n3*q12^2*q23*q33+6*M`j'^2*n4*q12^2*q23*q33-6*M`j'^2*q12*q13*q23*q33-8*M`j'^2*n1*q12*q13*q23*q33+4*M`j'^2*n2*q12*q13*q23*q33+6*M`j'^2*n3*q12*q13*q23*q33-2*M`j'^2*n4*q12*q13*q23*q33+20*q12^2*q13*q23*q33-8*n1*q12^2*q13*q23*q33-4*n3*q12^2*q13*q23*q33-8*n4*q12^2*q13*q23*q33-28*q12*q13^2*q23*q33+8*n1*q12*q13^2*q23*q33-8*n2*q12*q13^2*q23*q33+12*n3*q12*q13^2*q23*q33+8*n4*q12*q13^2*q23*q33-2*M`j'^2*q12*q23^2*q33-4*M`j'^2*n1*q12*q23^2*q33+2*M`j'^2*n3*q12*q23^2*q33+2*M`j'^2*n4*q12*q23^2*q33+2*n1*q12*q13*q23^2*q33-2*n2*q12*q13*q23^2*q33-4*M`j'^2*q12^2*q33^2+4*M`j'^2*n1*q12^2*q33^2-8*M`j'^2*n2*q12^2*q33^2+4*M`j'^2*n3*q12^2*q33^2+11*q12^3*q33^2-4*n1*q12^3*q33^2+n2*q12^3*q33^2-3*n3*q12^3*q33^2-4*n4*q12^3*q33^2+4*M`j'^2*q12*q13*q33^2+4*M`j'^2*n2*q12*q13*q33^2-4*M`j'^2*n3*q12*q13*q33^2-4*q12^2*q13*q33^2-4*n1*q12^2*q13*q33^2+7*n2*q12^2*q13*q33^2+2*n4*q12^2*q13*q33^2-6*q12*q13^2*q33^2-6*n2*q12*q13^2*q33^2+6*n3*q12*q13^2*q33^2-4*M`j'^2*q12*q23*q33^2-4*M`j'^2*n2*q12*q23*q33^2+4*M`j'^2*n3*q12*q23*q33^2+17*q12^2*q23*q33^2-5*n1*q12^2*q23*q33^2+n2*q12^2*q23*q33^2-5*n3*q12^2*q23*q33^2-6*n4*q12^2*q23*q33^2-4*q12*q13*q23*q33^2+2*n1*q12*q13*q23*q33^2+n2*q12*q13*q23*q33^2+2*n4*q12*q13*q23*q33^2+6*q12*q23^2*q33^2-n1*q12*q23^2*q33^2-2*n3*q12*q23^2*q33^2-2*n4*q12*q23^2*q33^2+q12^2*q33^3-n1*q12^2*q33^3+2*n2*q12^2*q33^3-n3*q12^2*q33^3-q12*q13*q33^3-n2*q12*q13*q33^3+n3*q12*q13*q33^3+q12*q23*q33^3+n2*q12*q23*q33^3-n3*q12*q23*q33^3,-8*q12^3*q13^3+8*n3*q12^3*q13^3-16*M`j'^2*q12^2*q13^2*q23+16*M`j'^2*n3*q12^2*q13^2*q23-8*q12^2*q13^3*q23+8*n3*q12^2*q13^3*q23-16*M`j'^2*q12*q13^2*q23^2+16*M`j'^2*n3*q12*q13^2*q23^2+8*M`j'^2*q12^3*q13*q33-8*M`j'^2*n3*q12^3*q13*q33-12*q12^3*q13^2*q33+12*n3*q12^3*q13^2*q33-12*q12^2*q13^2*q23*q33+12*n3*q12^2*q13^2*q23*q33-8*M`j'^2*q12*q13*q23^2*q33+8*M`j'^2*n3*q12*q13*q23^2*q33+4*M`j'^2*q12^3*q33^2-4*M`j'^2*n3*q12^3*q33^2-6*q12^3*q13*q33^2+6*n3*q12^3*q13*q33^2+4*M`j'^2*q12^2*q23*q33^2-4*M`j'^2*n3*q12^2*q23*q33^2-6*q12^2*q13*q23*q33^2+6*n3*q12^2*q13*q23*q33^2-q12^3*q33^3+n3*q12^3*q33^3-q12^2*q23*q33^3+n3*q12^2*q23*q33^3));
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?{,>1},n3?pos_,n4?pos_) = mbox1l(n1,-1+n2,1+n3,-1+n4)*prf(-2*M`j'^2*n3*q13,-4*q12*q13^2+4*n2*q12*q13^2-8*M`j'^2*q13*q23+8*M`j'^2*n2*q13*q23+4*M`j'^2*q12*q33-4*M`j'^2*n2*q12*q33-4*q12*q13*q33+4*n2*q12*q13*q33-q12*q33^2+n2*q12*q33^2)+mbox1l(n1,-1+n2,-1+n3,1+n4)*prf(-2*M`j'^2*n4*q13,-4*q12*q13^2+4*n2*q12*q13^2-8*M`j'^2*q13*q23+8*M`j'^2*n2*q13*q23+4*M`j'^2*q12*q33-4*M`j'^2*n2*q12*q33-4*q12*q13*q33+4*n2*q12*q13*q33-q12*q33^2+n2*q12*q33^2)+mbox1l(n1,n2,n3,-1+n4)*prf(4*M`j'^2*q12*q13-4*M`j'^2*q13^2-4*q12*q13^2-4*M`j'^2*q13*q23+4*M`j'^2*q12*q33-2*M`j'^2*q13*q33-4*q12*q13*q33-q12*q33^2,8*q12*q13^3+16*M`j'^2*q13^2*q23-8*M`j'^2*q12*q13*q33+12*q12*q13^2*q33+8*M`j'^2*q13*q23*q33-4*M`j'^2*q12*q33^2+6*q12*q13*q33^2+q12*q33^3)+mbox1l(n1,-2+n2,1+n3,n4)*prf(-8*M`j'^2*n3*q13^2+4*n3*q13^3-4*M`j'^2*n3*q13*q33+4*n3*q13^2*q33+n3*q13*q33^2,-4*q12^2*q13^2+4*n2*q12^2*q13^2-8*M`j'^2*q12*q13*q23+8*M`j'^2*n2*q12*q13*q23-4*q12*q13^2*q23+4*n2*q12*q13^2*q23-8*M`j'^2*q13*q23^2+8*M`j'^2*n2*q13*q23^2+4*M`j'^2*q12^2*q33-4*M`j'^2*n2*q12^2*q33-4*q12^2*q13*q33+4*n2*q12^2*q13*q33+4*M`j'^2*q12*q23*q33-4*M`j'^2*n2*q12*q23*q33-4*q12*q13*q23*q33+4*n2*q12*q13*q23*q33-q12^2*q33^2+n2*q12^2*q33^2-q12*q23*q33^2+n2*q12*q23*q33^2)+mbox1l(1+n1,-1+n2,n3,-1+n4)*prf(8*M`j'^2*n1*q12*q13^2-8*n1*q12*q13^3-8*M`j'^2*n1*q13^2*q23+6*M`j'^2*n1*q12*q13*q33-8*n1*q12*q13^2*q33-2*M`j'^2*n1*q13*q23*q33-2*n1*q12*q13*q33^2,-8*q12^2*q13^3+8*n2*q12^2*q13^3-16*M`j'^2*q12*q13^2*q23+16*M`j'^2*n2*q12*q13^2*q23-8*q12*q13^3*q23+8*n2*q12*q13^3*q23-16*M`j'^2*q13^2*q23^2+16*M`j'^2*n2*q13^2*q23^2+8*M`j'^2*q12^2*q13*q33-8*M`j'^2*n2*q12^2*q13*q33-12*q12^2*q13^2*q33+12*n2*q12^2*q13^2*q33-12*q12*q13^2*q23*q33+12*n2*q12*q13^2*q23*q33-8*M`j'^2*q13*q23^2*q33+8*M`j'^2*n2*q13*q23^2*q33+4*M`j'^2*q12^2*q33^2-4*M`j'^2*n2*q12^2*q33^2-6*q12^2*q13*q33^2+6*n2*q12^2*q13*q33^2+4*M`j'^2*q12*q23*q33^2-4*M`j'^2*n2*q12*q23*q33^2-6*q12*q13*q23*q33^2+6*n2*q12*q13*q23*q33^2-q12^2*q33^3+n2*q12^2*q33^3-q12*q23*q33^3+n2*q12*q23*q33^3)+mbox1l(-1+n1,n2,n3,n4)*prf(-4*M`j'^2*q12^2*q13+4*q12^2*q13^2+4*q12*q13^2*q23+4*M`j'^2*q13*q23^2-4*M`j'^2*q12^2*q33+4*q12^2*q13*q33-4*M`j'^2*q12*q23*q33+4*q12*q13*q23*q33+q12^2*q33^2+q12*q23*q33^2,8*q12^2*q13^3+16*M`j'^2*q12*q13^2*q23-8*M`j'^2*q12^2*q13*q33+12*q12^2*q13^2*q33+8*M`j'^2*q12*q13*q23*q33-4*M`j'^2*q12^2*q33^2+6*q12^2*q13*q33^2+q12^2*q33^3)+mbox1l(n1,n2,-1+n3,n4)*prf(8*M`j'^2*q12^2*q13^2+16*M`j'^2*q12*q13^3-4*q12^2*q13^3-8*q12*q13^4+4*M`j'^2*q12^2*q13*q23+20*M`j'^2*q12*q13^2*q23-4*q12^2*q13^2*q23-12*q12*q13^3*q23-4*M`j'^2*q13^2*q23^2-4*q12*q13^2*q23^2-4*M`j'^2*q13*q23^3-2*M`j'^2*q12^2*q13*q33+16*M`j'^2*q12*q13^2*q33-12*q12*q13^3*q33+4*M`j'^2*q12^2*q23*q33+14*M`j'^2*q12*q13*q23*q33-4*q12^2*q13*q23*q33-12*q12*q13^2*q23*q33+4*M`j'^2*q12*q23^2*q33-4*q12*q13*q23^2*q33-4*M`j'^2*q12^2*q33^2+4*M`j'^2*q12*q13*q33^2+3*q12^2*q13*q33^2-6*q12*q13^2*q33^2-q12^2*q23*q33^2-3*q12*q13*q23*q33^2-q12*q23^2*q33^2+q12^2*q33^3-q12*q13*q33^3,8*q12^3*q13^3+16*M`j'^2*q12^2*q13^2*q23+8*q12^2*q13^3*q23+16*M`j'^2*q12*q13^2*q23^2-8*M`j'^2*q12^3*q13*q33+12*q12^3*q13^2*q33+12*q12^2*q13^2*q23*q33+8*M`j'^2*q12*q13*q23^2*q33-4*M`j'^2*q12^3*q33^2+6*q12^3*q13*q33^2-4*M`j'^2*q12^2*q23*q33^2+6*q12^2*q13*q23*q33^2+q12^3*q33^3+q12^2*q23*q33^3)+mbox1l(1+n1,-1+n2,-1+n3,n4)*prf(-4*M`j'^2*n1*q12^2*q13^2+4*M`j'^2*n1*q12*q13^3+4*M`j'^2*n1*q13^3*q23+4*M`j'^2*n1*q13^2*q23^2+2*M`j'^2*n1*q12^2*q13*q33+8*M`j'^2*n1*q12*q13^2*q33-4*n1*q12^2*q13^2*q33-4*n1*q12*q13^3*q33-6*M`j'^2*n1*q12*q13*q23*q33+4*M`j'^2*n1*q12^2*q33^2+4*M`j'^2*n1*q12*q13*q33^2-4*n1*q12^2*q13*q33^2-4*n1*q12*q13^2*q33^2-n1*q12^2*q33^3-n1*q12*q13*q33^3,-8*q12^3*q13^3+8*n2*q12^3*q13^3-16*M`j'^2*q12^2*q13^2*q23+16*M`j'^2*n2*q12^2*q13^2*q23-8*q12^2*q13^3*q23+8*n2*q12^2*q13^3*q23-16*M`j'^2*q12*q13^2*q23^2+16*M`j'^2*n2*q12*q13^2*q23^2+8*M`j'^2*q12^3*q13*q33-8*M`j'^2*n2*q12^3*q13*q33-12*q12^3*q13^2*q33+12*n2*q12^3*q13^2*q33-12*q12^2*q13^2*q23*q33+12*n2*q12^2*q13^2*q23*q33-8*M`j'^2*q12*q13*q23^2*q33+8*M`j'^2*n2*q12*q13*q23^2*q33+4*M`j'^2*q12^3*q33^2-4*M`j'^2*n2*q12^3*q33^2-6*q12^3*q13*q33^2+6*n2*q12^3*q13*q33^2+4*M`j'^2*q12^2*q23*q33^2-4*M`j'^2*n2*q12^2*q23*q33^2-6*q12^2*q13*q23*q33^2+6*n2*q12^2*q13*q23*q33^2-q12^3*q33^3+n2*q12^3*q33^3-q12^2*q23*q33^3+n2*q12^2*q23*q33^3)+mbox1l(1+n1,-2+n2,n3,n4)*prf(-4*M`j'^2*n1*q12*q13^3-4*M`j'^2*n1*q13^3*q23-8*M`j'^2*n1*q12*q13^2*q33+4*n1*q12*q13^3*q33-4*M`j'^2*n1*q12*q13*q33^2+4*n1*q12*q13^2*q33^2+n1*q12*q13*q33^3,-8*q12^3*q13^3+8*n2*q12^3*q13^3-16*M`j'^2*q12^2*q13^2*q23+16*M`j'^2*n2*q12^2*q13^2*q23-8*q12^2*q13^3*q23+8*n2*q12^2*q13^3*q23-16*M`j'^2*q12*q13^2*q23^2+16*M`j'^2*n2*q12*q13^2*q23^2+8*M`j'^2*q12^3*q13*q33-8*M`j'^2*n2*q12^3*q13*q33-12*q12^3*q13^2*q33+12*n2*q12^3*q13^2*q33-12*q12^2*q13^2*q23*q33+12*n2*q12^2*q13^2*q23*q33-8*M`j'^2*q12*q13*q23^2*q33+8*M`j'^2*n2*q12*q13*q23^2*q33+4*M`j'^2*q12^3*q33^2-4*M`j'^2*n2*q12^3*q33^2-6*q12^3*q13*q33^2+6*n2*q12^3*q13*q33^2+4*M`j'^2*q12^2*q23*q33^2-4*M`j'^2*n2*q12^2*q23*q33^2-6*q12^2*q13*q23*q33^2+6*n2*q12^2*q13*q23*q33^2-q12^3*q33^3+n2*q12^3*q33^3-q12^2*q23*q33^3+n2*q12^2*q23*q33^3)+mbox1l(n1,-1+n2,n3,n4)*(tmpprf(ep,1)*prf(-8*q12^2*q13^3-8*q12*q13^3*q23-8*q12^2*q13^2*q33-8*q12*q13^2*q23*q33-2*q12^2*q13*q33^2-2*q12*q13*q23*q33^2,-8*q12^3*q13^3+8*n2*q12^3*q13^3-16*M`j'^2*q12^2*q13^2*q23+16*M`j'^2*n2*q12^2*q13^2*q23-8*q12^2*q13^3*q23+8*n2*q12^2*q13^3*q23-16*M`j'^2*q12*q13^2*q23^2+16*M`j'^2*n2*q12*q13^2*q23^2+8*M`j'^2*q12^3*q13*q33-8*M`j'^2*n2*q12^3*q13*q33-12*q12^3*q13^2*q33+12*n2*q12^3*q13^2*q33-12*q12^2*q13^2*q23*q33+12*n2*q12^2*q13^2*q23*q33-8*M`j'^2*q12*q13*q23^2*q33+8*M`j'^2*n2*q12*q13*q23^2*q33+4*M`j'^2*q12^3*q33^2-4*M`j'^2*n2*q12^3*q33^2-6*q12^3*q13*q33^2+6*n2*q12^3*q13*q33^2+4*M`j'^2*q12^2*q23*q33^2-4*M`j'^2*n2*q12^2*q23*q33^2-6*q12^2*q13*q23*q33^2+6*n2*q12^2*q13*q23*q33^2-q12^3*q33^3+n2*q12^3*q33^3-q12^2*q23*q33^3+n2*q12^2*q23*q33^3)+prf(4*M`j'^2*q12^2*q13^2-4*M`j'^2*n1*q12^2*q13^2-4*M`j'^2*n2*q12^2*q13^2+4*M`j'^2*n3*q12^2*q13^2+4*M`j'^2*n4*q12^2*q13^2+16*M`j'^2*q12*q13^3-16*M`j'^2*n2*q12*q13^3+16*M`j'^2*n3*q12*q13^3+20*q12^2*q13^3-4*n2*q12^2*q13^3-8*n3*q12^2*q13^3-8*n4*q12^2*q13^3-8*q12*q13^4+8*n2*q12*q13^4-8*n3*q12*q13^4+16*M`j'^2*q12*q13^2*q23+8*M`j'^2*n1*q12*q13^2*q23-16*M`j'^2*n2*q12*q13^2*q23+4*M`j'^2*n3*q12*q13^2*q23+4*M`j'^2*n4*q12*q13^2*q23+12*q12*q13^3*q23-8*n1*q12*q13^3*q23+4*n2*q12*q13^3*q23-8*n3*q12*q13^3*q23-8*n4*q12*q13^3*q23-4*M`j'^2*q13^2*q23^2-4*M`j'^2*n1*q13^2*q23^2+4*M`j'^2*n2*q13^2*q23^2-4*M`j'^2*q12^2*q13*q33-8*M`j'^2*n1*q12^2*q13*q33+4*M`j'^2*n2*q12^2*q13*q33+2*M`j'^2*n3*q12^2*q13*q33+2*M`j'^2*n4*q12^2*q13*q33+16*M`j'^2*q12*q13^2*q33-16*M`j'^2*n2*q12*q13^2*q33+16*M`j'^2*n3*q12*q13^2*q33+24*q12^2*q13^2*q33+4*n1*q12^2*q13^2*q33-8*n2*q12^2*q13^2*q33-8*n3*q12^2*q13^2*q33-8*n4*q12^2*q13^2*q33-12*q12*q13^3*q33+12*n2*q12*q13^3*q33-12*n3*q12*q13^3*q33+12*M`j'^2*q12*q13*q23*q33+8*M`j'^2*n1*q12*q13*q23*q33-12*M`j'^2*n2*q12*q13*q23*q33+2*M`j'^2*n3*q12*q13*q23*q33+2*M`j'^2*n4*q12*q13*q23*q33+12*q12*q13^2*q23*q33-8*n1*q12*q13^2*q23*q33+4*n2*q12*q13^2*q23*q33-8*n3*q12*q13^2*q23*q33-8*n4*q12*q13^2*q23*q33-4*M`j'^2*q12^2*q33^2-4*M`j'^2*n1*q12^2*q33^2+4*M`j'^2*n2*q12^2*q33^2+4*M`j'^2*q12*q13*q33^2-4*M`j'^2*n2*q12*q13*q33^2+4*M`j'^2*n3*q12*q13*q33^2+9*q12^2*q13*q33^2+4*n1*q12^2*q13*q33^2-5*n2*q12^2*q13*q33^2-2*n3*q12^2*q13*q33^2-2*n4*q12^2*q13*q33^2-6*q12*q13^2*q33^2+6*n2*q12*q13^2*q33^2-6*n3*q12*q13^2*q33^2+3*q12*q13*q23*q33^2-2*n1*q12*q13*q23*q33^2+n2*q12*q13*q23*q33^2-2*n3*q12*q13*q23*q33^2-2*n4*q12*q13*q23*q33^2+q12^2*q33^3+n1*q12^2*q33^3-n2*q12^2*q33^3-q12*q13*q33^3+n2*q12*q13*q33^3-n3*q12*q13*q33^3,-8*q12^3*q13^3+8*n2*q12^3*q13^3-16*M`j'^2*q12^2*q13^2*q23+16*M`j'^2*n2*q12^2*q13^2*q23-8*q12^2*q13^3*q23+8*n2*q12^2*q13^3*q23-16*M`j'^2*q12*q13^2*q23^2+16*M`j'^2*n2*q12*q13^2*q23^2+8*M`j'^2*q12^3*q13*q33-8*M`j'^2*n2*q12^3*q13*q33-12*q12^3*q13^2*q33+12*n2*q12^3*q13^2*q33-12*q12^2*q13^2*q23*q33+12*n2*q12^2*q13^2*q23*q33-8*M`j'^2*q12*q13*q23^2*q33+8*M`j'^2*n2*q12*q13*q23^2*q33+4*M`j'^2*q12^3*q33^2-4*M`j'^2*n2*q12^3*q33^2-6*q12^3*q13*q33^2+6*n2*q12^3*q13*q33^2+4*M`j'^2*q12^2*q23*q33^2-4*M`j'^2*n2*q12^2*q23*q33^2-6*q12^2*q13*q23*q33^2+6*n2*q12^2*q13*q23*q33^2-q12^3*q33^3+n2*q12^3*q33^3-q12^2*q23*q33^3+n2*q12^2*q23*q33^3));
	Identify,ifmatch->jump mbox1l(n1?{,>1},n2?pos_,n3?pos_,n4?pos_) = mbox1l(-1+n1,n2,1+n3,-1+n4)*prf(2*M`j'^2*n3*q12+2*M`j'^2*n3*q23,-4*q12*q13^2+4*n1*q12*q13^2-8*M`j'^2*q13*q23+8*M`j'^2*n1*q13*q23+4*M`j'^2*q12*q33-4*M`j'^2*n1*q12*q33-4*q12*q13*q33+4*n1*q12*q13*q33-q12*q33^2+n1*q12*q33^2)+mbox1l(-1+n1,n2,-1+n3,1+n4)*prf(2*M`j'^2*n4*q12+2*M`j'^2*n4*q23,-4*q12*q13^2+4*n1*q12*q13^2-8*M`j'^2*q13*q23+8*M`j'^2*n1*q13*q23+4*M`j'^2*q12*q33-4*M`j'^2*n1*q12*q33-4*q12*q13*q33+4*n1*q12*q13*q33-q12*q33^2+n1*q12*q33^2)+mbox1l(-2+n1,1+n2,n3,n4)*prf(4*M`j'^2*n2*q12^3+12*M`j'^2*n2*q12^2*q23+12*M`j'^2*n2*q12*q23^2+4*M`j'^2*n2*q23^3,-8*q12^2*q13^3+8*n1*q12^2*q13^3-16*M`j'^2*q12*q13^2*q23+16*M`j'^2*n1*q12*q13^2*q23+8*M`j'^2*q12^2*q13*q33-8*M`j'^2*n1*q12^2*q13*q33-12*q12^2*q13^2*q33+12*n1*q12^2*q13^2*q33-8*M`j'^2*q12*q13*q23*q33+8*M`j'^2*n1*q12*q13*q23*q33+4*M`j'^2*q12^2*q33^2-4*M`j'^2*n1*q12^2*q33^2-6*q12^2*q13*q33^2+6*n1*q12^2*q13*q33^2-q12^2*q33^3+n1*q12^2*q33^3)+mbox1l(-1+n1,1+n2,n3,-1+n4)*prf(-4*M`j'^2*n2*q12^2+4*M`j'^2*n2*q12*q13-8*M`j'^2*n2*q12*q23+4*M`j'^2*n2*q13*q23-4*M`j'^2*n2*q23^2+2*M`j'^2*n2*q12*q33+2*M`j'^2*n2*q23*q33,-8*q12*q13^3+8*n1*q12*q13^3-16*M`j'^2*q13^2*q23+16*M`j'^2*n1*q13^2*q23+8*M`j'^2*q12*q13*q33-8*M`j'^2*n1*q12*q13*q33-12*q12*q13^2*q33+12*n1*q12*q13^2*q33-8*M`j'^2*q13*q23*q33+8*M`j'^2*n1*q13*q23*q33+4*M`j'^2*q12*q33^2-4*M`j'^2*n1*q12*q33^2-6*q12*q13*q33^2+6*n1*q12*q13*q33^2-q12*q33^3+n1*q12*q33^3)+mbox1l(-1+n1,-1+n2,1+n3,n4)*prf(8*M`j'^2*n3*q13-4*n3*q13^2+4*M`j'^2*n3*q33-4*n3*q13*q33-n3*q33^2,-4*q12*q13^2+4*n1*q12*q13^2-8*M`j'^2*q13*q23+8*M`j'^2*n1*q13*q23+4*M`j'^2*q12*q33-4*M`j'^2*n1*q12*q33-4*q12*q13*q33+4*n1*q12*q13*q33-q12*q33^2+n1*q12*q33^2)+mbox1l(n1,n2,n3,-1+n4)*prf(-8*M`j'^2*q12*q13+4*q12*q13^2-2*M`j'^2*q12*q33+4*q12*q13*q33+2*M`j'^2*q23*q33+q12*q33^2,8*q12*q13^3+16*M`j'^2*q13^2*q23-8*M`j'^2*q12*q13*q33+12*q12*q13^2*q33+8*M`j'^2*q13*q23*q33-4*M`j'^2*q12*q33^2+6*q12*q13*q33^2+q12*q33^3)+mbox1l(n1,-1+n2,n3,n4)*prf(4*M`j'^2*q12*q13^2-4*q12*q13^3-4*M`j'^2*q13^2*q23+12*M`j'^2*q12*q13*q33-8*q12*q13^2*q33+4*M`j'^2*q12*q33^2-5*q12*q13*q33^2-q12*q33^3,8*q12^2*q13^3+16*M`j'^2*q12*q13^2*q23-8*M`j'^2*q12^2*q13*q33+12*q12^2*q13^2*q33+8*M`j'^2*q12*q13*q23*q33-4*M`j'^2*q12^2*q33^2+6*q12^2*q13*q33^2+q12^2*q33^3)+mbox1l(n1,n2,-1+n3,n4)*prf(4*M`j'^2*q12^2*q13-4*M`j'^2*q12*q13^2+4*q12*q13^3+4*M`j'^2*q13^2*q23+4*q12*q13^2*q23+4*M`j'^2*q13*q23^2-2*M`j'^2*q12^2*q33-12*M`j'^2*q12*q13*q33+8*q12*q13^2*q33-6*M`j'^2*q12*q23*q33+4*q12*q13*q23*q33-4*M`j'^2*q12*q33^2+5*q12*q13*q33^2+q12*q23*q33^2+q12*q33^3,8*q12^2*q13^3+16*M`j'^2*q12*q13^2*q23-8*M`j'^2*q12^2*q13*q33+12*q12^2*q13^2*q33+8*M`j'^2*q12*q13*q23*q33-4*M`j'^2*q12^2*q33^2+6*q12^2*q13*q33^2+q12^2*q33^3)+mbox1l(-1+n1,1+n2,-1+n3,n4)*prf(-8*M`j'^2*n2*q12^2*q13-16*M`j'^2*n2*q12*q13^2+8*n2*q12^2*q13^2+8*n2*q12*q13^3-4*M`j'^2*n2*q12^2*q23-12*M`j'^2*n2*q12*q13*q23+8*n2*q12*q13^2*q23-8*M`j'^2*n2*q12*q23^2-4*M`j'^2*n2*q13*q23^2-4*M`j'^2*n2*q23^3-2*M`j'^2*n2*q12^2*q33-16*M`j'^2*n2*q12*q13*q33+8*n2*q12^2*q13*q33+12*n2*q12*q13^2*q33-2*M`j'^2*n2*q12*q23*q33+8*n2*q12*q13*q23*q33-4*M`j'^2*n2*q12*q33^2+2*n2*q12^2*q33^2+6*n2*q12*q13*q33^2+2*n2*q12*q23*q33^2+n2*q12*q33^3,-8*q12^2*q13^3+8*n1*q12^2*q13^3-16*M`j'^2*q12*q13^2*q23+16*M`j'^2*n1*q12*q13^2*q23+8*M`j'^2*q12^2*q13*q33-8*M`j'^2*n1*q12^2*q13*q33-12*q12^2*q13^2*q33+12*n1*q12^2*q13^2*q33-8*M`j'^2*q12*q13*q23*q33+8*M`j'^2*n1*q12*q13*q23*q33+4*M`j'^2*q12^2*q33^2-4*M`j'^2*n1*q12^2*q33^2-6*q12^2*q13*q33^2+6*n1*q12^2*q13*q33^2-q12^2*q33^3+n1*q12^2*q33^3)+mbox1l(-1+n1,n2,n3,n4)*(tmpprf(ep,1)*prf(8*q12^2*q13^2+8*q12*q13^2*q23+8*q12^2*q13*q33+8*q12*q13*q23*q33+2*q12^2*q33^2+2*q12*q23*q33^2,-8*q12^2*q13^3+8*n1*q12^2*q13^3-16*M`j'^2*q12*q13^2*q23+16*M`j'^2*n1*q12*q13^2*q23+8*M`j'^2*q12^2*q13*q33-8*M`j'^2*n1*q12^2*q13*q33-12*q12^2*q13^2*q33+12*n1*q12^2*q13^2*q33-8*M`j'^2*q12*q13*q23*q33+8*M`j'^2*n1*q12*q13*q23*q33+4*M`j'^2*q12^2*q33^2-4*M`j'^2*n1*q12^2*q33^2-6*q12^2*q13*q33^2+6*n1*q12^2*q13*q33^2-q12^2*q33^3+n1*q12^2*q33^3)+prf(-4*M`j'^2*q12^2*q13+4*M`j'^2*n1*q12^2*q13+4*M`j'^2*n2*q12^2*q13-4*M`j'^2*n3*q12^2*q13-4*M`j'^2*n4*q12^2*q13+16*M`j'^2*n2*q12*q13^2-16*M`j'^2*n3*q12*q13^2-20*q12^2*q13^2+4*n1*q12^2*q13^2+8*n3*q12^2*q13^2+8*n4*q12^2*q13^2-8*n2*q12*q13^3+8*n3*q12*q13^3+8*M`j'^2*n2*q12*q13*q23-4*M`j'^2*n3*q12*q13*q23-4*M`j'^2*n4*q12*q13*q23-20*q12*q13^2*q23+4*n1*q12*q13^2*q23+8*n3*q12*q13^2*q23+8*n4*q12*q13^2*q23+4*M`j'^2*q13*q23^2-4*M`j'^2*n1*q13*q23^2+4*M`j'^2*n2*q13*q23^2-4*M`j'^2*q12^2*q33+4*M`j'^2*n1*q12^2*q33-2*M`j'^2*n3*q12^2*q33-2*M`j'^2*n4*q12^2*q33+16*M`j'^2*n2*q12*q13*q33-16*M`j'^2*n3*q12*q13*q33-20*q12^2*q13*q33+4*n1*q12^2*q13*q33+8*n3*q12^2*q13*q33+8*n4*q12^2*q13*q33-12*n2*q12*q13^2*q33+12*n3*q12*q13^2*q33-4*M`j'^2*q12*q23*q33+4*M`j'^2*n1*q12*q23*q33-2*M`j'^2*n3*q12*q23*q33-2*M`j'^2*n4*q12*q23*q33-20*q12*q13*q23*q33+4*n1*q12*q13*q23*q33+8*n3*q12*q13*q23*q33+8*n4*q12*q13*q23*q33+4*M`j'^2*n2*q12*q33^2-4*M`j'^2*n3*q12*q33^2-5*q12^2*q33^2+n1*q12^2*q33^2+2*n3*q12^2*q33^2+2*n4*q12^2*q33^2-6*n2*q12*q13*q33^2+6*n3*q12*q13*q33^2-5*q12*q23*q33^2+n1*q12*q23*q33^2+2*n3*q12*q23*q33^2+2*n4*q12*q23*q33^2-n2*q12*q33^3+n3*q12*q33^3,-8*q12^2*q13^3+8*n1*q12^2*q13^3-16*M`j'^2*q12*q13^2*q23+16*M`j'^2*n1*q12*q13^2*q23+8*M`j'^2*q12^2*q13*q33-8*M`j'^2*n1*q12^2*q13*q33-12*q12^2*q13^2*q33+12*n1*q12^2*q13^2*q33-8*M`j'^2*q12*q13*q23*q33+8*M`j'^2*n1*q12*q13*q23*q33+4*M`j'^2*q12^2*q33^2-4*M`j'^2*n1*q12^2*q33^2-6*q12^2*q13*q33^2+6*n1*q12^2*q13*q33^2-q12^2*q33^3+n1*q12^2*q33^3));
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?pos_,n3?pos_,n4?{,>1}) = mbox1l(1+n1,-1+n2,1+n3,-1+n4)*prf(-(n3*q13),-q12+n4*q12-q23+n4*q23)+mbox1l(2+n1,n2,n3,-2+n4)*prf(2*q12*q13+2*n1*q12*q13,-2*q12*q13+2*n4*q12*q13-2*q13*q23+2*n4*q13*q23-q12*q33+n4*q12*q33-q23*q33+n4*q23*q33)+mbox1l(1+n1,n2,-1+n3,n4)*prf(q33,2*q13+q33)+mbox1l(2+n1,-1+n2,n3,-1+n4)*prf(-(q13*q33)-n1*q13*q33,-2*q12*q13+2*n4*q12*q13-2*q13*q23+2*n4*q13*q23-q12*q33+n4*q12*q33-q23*q33+n4*q23*q33)+mbox1l(2+n1,n2,-1+n3,-1+n4)*prf(q12*q33+n1*q12*q33+q13*q33+n1*q13*q33,-2*q12*q13+2*n4*q12*q13-2*q13*q23+2*n4*q13*q23-q12*q33+n4*q12*q33-q23*q33+n4*q23*q33)+mbox1l(1+n1,1+n2,-1+n3,-1+n4)*prf(2*n2*q13^2+2*n2*q13*q23-n2*q12*q33+n2*q13*q33,-2*q12*q13+2*n4*q12*q13-2*q13*q23+2*n4*q13*q23-q12*q33+n4*q12*q33-q23*q33+n4*q23*q33)+mbox1l(1+n1,n2,n3,-1+n4)*prf(-4*q12*q13-2*n1*q12*q13+2*n4*q12*q13-2*n2*q13^2+2*n3*q13^2-2*q13*q23-2*n2*q13*q23+2*n4*q13*q23-q12*q33-n1*q12*q33+n2*q12*q33-n2*q13*q33+n3*q13*q33,-2*q12*q13+2*n4*q12*q13-2*q13*q23+2*n4*q13*q23-q12*q33+n4*q12*q33-q23*q33+n4*q23*q33);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?pos_,n3?{,>1},n4?pos_) = mbox1l(1+n1,1+n2,-1+n3,-1+n4)*prf(2*n2*q12,-2*q13+2*n3*q13-q33+n3*q33)+mbox1l(1+n1,-1+n2,n3,n4)*prf(-q13,q12+q23)+mbox1l(2+n1,n2,-1+n3,-1+n4)*prf(2*q12*q13+2*n1*q12*q13,-2*q12*q13+2*n3*q12*q13-2*q13*q23+2*n3*q13*q23-q12*q33+n3*q12*q33-q23*q33+n3*q23*q33)+mbox1l(n1,1+n2,-1+n3,n4)*prf(-2*n2*q12-2*n2*q13-2*n2*q23-n2*q33,-2*q13+2*n3*q13-q33+n3*q33)+mbox1l(2+n1,-1+n2,-1+n3,n4)*prf(-(q13*q33)-n1*q13*q33,-2*q12*q13+2*n3*q12*q13-2*q13*q23+2*n3*q13*q23-q12*q33+n3*q12*q33-q23*q33+n3*q23*q33)+mbox1l(2+n1,n2,-2+n3,n4)*prf(2*q12*q33+2*n1*q12*q33+q13*q33+n1*q13*q33+q23*q33+n1*q23*q33,-2*q12*q13+2*n3*q12*q13-2*q13*q23+2*n3*q13*q23-q12*q33+n3*q12*q33-q23*q33+n3*q23*q33)+mbox1l(1+n1,1+n2,-2+n3,n4)*prf(2*n2*q12*q13+2*n2*q13^2+2*n2*q12*q23+4*n2*q13*q23+2*n2*q23^2+n2*q13*q33+n2*q23*q33,-2*q12*q13+2*n3*q12*q13-2*q13*q23+2*n3*q13*q23-q12*q33+n3*q12*q33-q23*q33+n3*q23*q33)+mbox1l(1+n1,n2,-1+n3,n4)*prf(-4*q12*q13-2*n1*q12*q13+2*n3*q12*q13-2*q13^2-2*n2*q13^2+2*n3*q13^2-2*q13*q23-2*n2*q13*q23+2*n3*q13*q23-3*q12*q33-2*n1*q12*q33+n2*q12*q33+n3*q12*q33-q13*q33-n2*q13*q33+n3*q13*q33-2*q23*q33-n1*q23*q33+n3*q23*q33,-2*q12*q13+2*n3*q12*q13-2*q13*q23+2*n3*q13*q23-q12*q33+n3*q12*q33-q23*q33+n3*q23*q33);
	Identify,ifmatch->jump mbox1l(n1?pos_,n2?pos_,n3?pos_,n4?{,>1}) = mbox1l(n1,n2,1+n3,-1+n4)*prf(n3,-1+n4)+mbox1l(1+n1,1+n2,n3,-2+n4)*prf(-2*n1*q12,-2*q13+2*n4*q13-q33+n4*q33)+mbox1l(1+n1,n2,n3,-1+n4)*prf(n1*q33,-2*q13+2*n4*q13-q33+n4*q33)+mbox1l(n1,1+n2,-1+n3,n4)*prf(2*q12+2*q13+2*q23+q33,2*q13+q33)+mbox1l(1+n1,1+n2,-1+n3,-1+n4)*prf(2*n1*q12-n1*q33,-2*q13+2*n4*q13-q33+n4*q33)+mbox1l(n1,2+n2,-1+n3,-1+n4)*prf(-2*q12-2*n2*q12-2*q13-2*n2*q13-2*q23-2*n2*q23-q33-n2*q33,-2*q13+2*n4*q13-q33+n4*q33)+mbox1l(n1,1+n2,n3,-1+n4)*prf(4*q12+2*n2*q12-2*n4*q12+2*q13+2*n2*q13-2*n3*q13+4*q23+2*n2*q23-2*n4*q23+q33+n2*q33-n3*q33,-2*q13+2*n4*q13-q33+n4*q33);
	Label jump;
	#call lrttMergeIndices(mbox1l)

*	Mapped Sectors:
	Identify mbox1l(n1?neg0_,n2?neg0_,n3?pos_,n4?neg0_) =
		mbox1l(0,0,n4,n3)*(-mbox1l(-1,0,0,0)+mbox1l(0,0,-1,0)+mbox1l(0,0,0,-1)+2*q13*mbox1l(0,0,0,0))^(-n1)*(-mbox1l(0,-1,0,0)+mbox1l(0,0,-1,0)+mbox1l(0,0,0,-1)-2*prf(q12+q23,1)*mbox1l(0,0,0,0))^(-n2);
	#call lrttMergeIndices(mbox1l)

	Identify mbox1l(n1?neg0_,n2?pos_,n3?neg0_,n4?neg0_) =
		mbox1l(0,n4,0,n2)*(mbox1l(0,-1,0,0)-mbox1l(0,0,-1,0)+mbox1l(0,0,0,-1)+2*prf(q12+q23,1)*mbox1l(0,0,0,0))^(-n3)*(-mbox1l(-1,0,0,0)+mbox1l(0,-1,0,0)+mbox1l(0,0,0,-1)+2*prf(q13+q23,1)*mbox1l(0,0,0,0))^(-n1);
	#call lrttMergeIndices(mbox1l)

	Identify mbox1l(n1?pos_,n2?neg0_,n3?neg0_,n4?neg0_) =
		mbox1l(n4,0,0,n1)*(mbox1l(-1,0,0,0)-mbox1l(0,0,-1,0)+mbox1l(0,0,0,-1)-2*q13*mbox1l(0,0,0,0))^(-n3)*(mbox1l(-1,0,0,0)-mbox1l(0,-1,0,0)+mbox1l(0,0,0,-1)-2*prf(2*q12+q13+q23,1)*mbox1l(0,0,0,0))^(-n2);
	#call lrttMergeIndices(mbox1l)


	#call lrttKin2Prf
	Identify M`j'^n1? = prf(M`j'^n1,1);
	#ifdef `MBOX1Lq33EQq44'
		Multiply replace_(q23,-q12-q13);
	#endif


*	Hide MIs:
	Identify mbox1l(0,0,0,1) = mbox1lm`j'm(0,0,0,1);
	Identify mbox1l(0,0,1,1) = mbox1lm`j'm(0,0,1,1);
	Identify mbox1l(0,1,0,1) = mbox1lm`j'm(0,1,0,1);
	Identify mbox1l(1,0,0,1) = mbox1lm`j'm(1,0,0,1);
	Identify mbox1l(1,1,0,0) = mbox1lm`j'm(1,1,0,0);
	Identify mbox1l(0,1,1,1) = mbox1lm`j'm(0,1,1,1);
	Identify mbox1l(1,0,1,1) = mbox1lm`j'm(1,0,1,1);
	Identify mbox1l(1,1,0,1) = mbox1lm`j'm(1,1,0,1);
	Identify mbox1l(1,1,1,0) = mbox1lm`j'm(1,1,1,0);
	Identify mbox1l(1,1,1,1) = mbox1lm`j'm(1,1,1,1);

*	Zero Sectors:
	Identify mbox1l(n1?neg0_,n2?neg0_,n3?neg0_,n4?neg0_) = 0;

	If (Count(mbox1l,1) > 0) Redefine red "0";
	.sort
#enddo


* Merge the extra ep-dependent rational polys into the rest, now that
* the reduction is done.
#message Merge tmpprf into prf...
Identify tmpprf(n1?,n2?) = prf(n1,n2);
.sort
*--#]

* Check:
Drop;
Local check = test - (
	#include- mbox1l-res`n1'`n2'`n3'`n4'.h
	);

Print check;
.end
